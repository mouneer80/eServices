
@model DMeServices.Models.ViewModels.Internal.Permits.PermitsViewModel
@{
    ViewBag.Title = "PermitDetails";
    Layout = "~/Views/Shared/_SubLayout.cshtml";
}
<link href="~/Content/jquery-ui.css" rel="stylesheet" />
<link href="~/Content/jquery-ui-timepicker-addon.css" rel="stylesheet" />
<script>
    $(document).ready(function () {
        var counter = 0;

        $("#addrow").on("click", function () {
            var newRow = $("<tr>");
            var cols = "";
            cols += '<td><select data-rel="chosen" style="width:75%;padding: 0px 12px;" class="form-control" name="AreaType' + counter + '"><option>منزل</option><option>فيلا</option><option>محل</option></select></td>';
            cols += '<td><input type="file" name="Attachment' + counter + '"/></td>';
            cols += '<td><textarea type="text" class="form-control" rows="1" name="phone' + counter + '"></textarea></td>';

            cols += '<td><input type="button" class="ibtnDel btn btn-md btn-danger "  value="حذف"></td>';
            newRow.append(cols);
            $("table.order-list").append(newRow);
            counter++;
        });

        if ($('#PermitsStatus').val() == '28') {
            $('#btnFees').show();
            $("#btnPrint").hide();
        }
        else if ($('#PermitsStatus').val() == '29') {
            $("#btnFees").hide();
            $("#btnPrint").show();
        }
        else {
            $("#btnFees").hide();
            $("#btnPrint").hide();
        }

        $("#PermitsStatus").on("change", function () {
            if (this.value == 28) {
                $("#btnFees").show();
                $("#btnPrint").hide();
            }
            else if (this.value == 29) {
                $("#btnFees").hide();
                $("#btnPrint").show();
            }
            else {
                $("#btnFees").hide();
                $("#btnPrint").hide();
            }
        });

        $("table.order-list").on("click", ".ibtnDel", function (event) {
            $(this).closest("tr").remove();
            counter -= 1
        });

        function ClearInputs() {
            debugger;
            $('#FileNotes').text('');
            $('#FileUpload').text('');

        }

    });

    $(document).ready(function () {
        $("#btnGenerateReport").click(function () {

            ReportManager.GenerateReport();

        });

        $("#btnPrint").click(function (e) {

            var servicetype = $("#ServiceType").val();

            var validServices = ["12", "13", "14", "15", "17", "18", "19", "20", "21"];
            if (validServices.includes(servicetype)) {

                if ($("#LicenseNo").val() == "" || $("#DMLicenseComments").val() == "") {

                    $('.modal-content').text("لا يمكن طباعة الترخيص بدون بيان أو رقم الترخيص أو بيان التعديل .. فضلا اختر حالة تم الدفع/اصدار رقم الترخيص وقم بادخال البيانات ثم احفظ المعاملة وقم باختيار اصدار الترخيص ثم اطبع الترخيص مرة اخرى");
                    $('#MainModal').modal('show');
                    e.preventDefault();
                    $("#btnPrint").attr("disabled", "disabled");
                }
            }
        })
    });

    var ReportManager = {
        GenerateReport: function () {

            var jsonParam = "";
            var serviceUrl = "../../Home/GetReport";
            ReportManager.GetReport(serviceUrl, jsonParam, onFailed);

            function onFailed(error) {
                alert(error);
            }
        },

        GetReport: function (serviceUrl, jsonParam, errorCallBack) {
            jQuery.ajax({
                url: serviceUrl,
                async: false,
                type: "POST",
                data: "{" + jsonParam + "}",
                contentType: "application/json; charset=utf-8",
                success: function () {
                    window.open('../../Reports/ReportViewer.aspx', 'newtab');
                },
                error: errorCallBack
            });
        }
    };

    var ReportHelper = {

    };

</script>

<style>
    .form-group {
        margin-bottom: 2px;
    }

    .table > tbody > tr > td, .table > thead > tr > td {
        padding: 4px;
    }

    .rtl {
        direction: rtl;
    }

    .dropdown-toggle {
        background-color: transparent;
        border-color: #000000;
        border-style: solid;
    }

    .smallFont {
        font-size: 10px;
        margin: 5px;
        width: 40%;
    }

    .chosen-container-single .chosen-single {
        height: 37px !important;
    }

        .chosen-container-single .chosen-single span {
            margin-top: 4px !important;
        }

        .chosen-container-single .chosen-single div {
            top: 4px !important;
        }
</style>

<div>
    <ul class="breadcrumb">
        <li>
            <a href="@Url.Action("Index","Home")">الرئيسية</a>
        </li>
        <li>
            <a href="@Url.Action("Index","BuildingPermits")">تصاريح البناء</a>
        </li>
        <li>
            <a href="#"> تفاصيل تصريح البناء</a>
        </li>
    </ul>
</div>

<div class="col-lg-12 col-sm-12">

    <div class="row">

        @using (Html.BeginForm("SaveEngineerPermits", "BuildingPermits", FormMethod.Post, new { encType = "multipart/form-data", @id = "Permitsform" }))
        {
            var User = DMeServices.Models.Common.UserCom.UserByCivilID((int)Model.BuildingPermits.ConsultantCivilId);
            var serviceType = DMeServices.Models.Common.BuildingServices.SupervisionCom.ServiceByID(String.IsNullOrEmpty(Model.BuildingPermits.ServiceName) ? 12 : Int32.Parse(Model.BuildingPermits.ServiceName)).ServiceNameAR;
            @Html.AntiForgeryToken()
            @Html.HiddenFor(x => x.BuildingPermits.Id, new { @id = "bldID" })
            @Html.HiddenFor(x => x.BuildingPermits.ConsultantCivilId)
            @Html.HiddenFor(x => x.BuildingPermits.TransactNo)
            @Html.HiddenFor(x => x.BuildingPermits.ServiceName, new { @id = "ServiceType" })
            @Html.HiddenFor(x => x.BuildingPermits.AppointmentStatus, new { @id = "bldAppointment" })
            <div class="row">
                <label>نوع الخدمة</label>
                <h5>@serviceType</h5>
            </div>
            <div class="row">
                <div class="form-group col-lg-6">
                    <div class="row">
                        <h5>بيانات الاستشاري</h5>
                        <div class="form-group col-lg-4">
                            <label class="control-label">اسم المكتب الاستشاري</label>
                            <lable class="form-control">@User.CompanyName</lable>
                        </div>
                        <div class="form-group col-lg-4">
                            <label class="control-label">اسم المهندس الاستشاري</label>
                            <lable class="form-control">@User.FullName</lable>
                        </div>
                        <div class="form-group col-lg-4">
                            <label class="control-label">رقم تليفون المهندس</label>
                            <lable class="form-control">@User.MobileNo.ToString()</lable>
                        </div>
                    </div>
                    @if (Model.BuildingPermits.ContractorName != null)
                    {
                        <div class="row" id="divContractorName">
                            <h5>بيانات شركة المقاولات</h5>
                            <div class="form-group col-lg-2">
                                <label class="control-label">إسم شركة المقاولات</label>
                                @Html.TextBoxFor(m => m.BuildingPermits.ContractorName, new { @class = "form-control", id = "ContractorName", @placeholder = "إسم شركة المقاولات" })
                                @*@Html.ValidationMessageFor(m => m.BuildingPermits.ContractorName, "", new { @style = "color:orange;" })*@
                            </div>
                        </div>
                    }
                    @if (Model.BuildingPermits.AppointmentStatus == "0" || Model.BuildingPermits.AppointmentStatus == "1" || Model.BuildingPermits.AppointmentStatus == "2")
                    {
                        <div class="row">
                            <div class="col-md-6">
                                <div class="row">
                                    <a id="AcceptAppointment" class="col-lg-6 smallFont btn btn-success"><i class="glyphicon glyphicon-ok"></i>تحديد موعد للمقابلة</a>
                                    <a id="RefuseAppointment" class="col-lg-6 smallFont btn btn-danger"><i class="glyphicon glyphicon-remove"></i>رفض المقابلة</a>
                                    <a id="CancelAppointment" class="col-lg-6 smallFont btn btn-primary"><i class="glyphicon glyphicon-adjust"></i>تمت المقابلة</a>
                                </div>
                                <div class="row" id="divAppointmentDate">
                                    <div class="form-group col-md-6">
                                        <label class="control-label">اختر موعد</label>
                                        <div>
                                            @Html.TextBoxFor(m => m.BuildingPermits.AppointmentDate, new { @class = "form-control", id = "pickerAppointmentDate", @placeholder = "تاريخ المقابلة" })
                                        </div>
                                    </div>
                                    <div class="form-group col-md-6">
                                        <br />
                                        <a id="DetrmineAppointment" onclick="return Loading();" class="btn btn-primary"><i class="glyphicon glyphicon-ok"></i>تحديد</a>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group col-md-6" id="divAppointmentDetails">
                                <h5>حالة طلب المقابلة</h5>
                                @if (Model.BuildingPermits.AppointmentDate != null && Model.BuildingPermits.AppointmentStatus == "2")
                                {
                                    var appointmentDate = "yyyy/MM/dd HH:mm";
                                    if (Model.BuildingPermits.AppointmentDate.HasValue)
                                    {
                                        appointmentDate = Model.BuildingPermits.AppointmentDate.Value.ToString("yyyy/MM/dd HH:mm");
                                    }
                                    else
                                    {
                                        appointmentDate = "";
                                    }
                                    <label class="form-group col-md-12" id="lblAppointmentDateD">
                                        @appointmentDate
                                    </label>
                                }
                                else if (Model.BuildingPermits.AppointmentStatus == "1")
                                {
                                    <label class="form-group col-md-12" id="lblAppointmentDateP">
                                        "برجاء تحديد موعد للمقابلة"
                                    </label>
                                }
                                else if (Model.BuildingPermits.AppointmentStatus == "0")
                                {
                                    <label class="form-group col-md-12" id="lblAppointmentDateR">
                                        "تم رفض المقابلة"
                                    </label>
                                }
                                else
                                {
                                    <label class="form-group col-md-12" id="lblAppointmentDateE">
                                        "لا يوجد طلب مقابلة"
                                    </label>
                                }
                            </div>
                        </div>
                    }
                </div>
                <div class="form-group col-lg-6">
                    <h5>بيانات مالك الارض</h5>
                    @{
                        if (Model.BuildingPermits.OwnerName != null)
                        {
                            <div class="form-group col-lg-3">
                                <label class="control-label">@Html.DisplayNameFor(m => m.BuildingPermits.OwnerName)</label>
                                @Html.TextBoxFor(m => m.BuildingPermits.OwnerName, new { @readonly = "readonly", @class = "form-control", id = "OwnerName", @placeholder = "إسم المالك" })
                            </div>
                            <div class="form-group col-lg-3">
                                <label class="control-label">@Html.DisplayNameFor(m => m.BuildingPermits.OwnerCivilId)</label>
                                @Html.TextBoxFor(m => m.BuildingPermits.OwnerCivilId, new { @readonly = "readonly", @class = "form-control", id = "OwnerCivilId", @placeholder = "الرقم المدني للمالك" })
                            </div>
                            <div class="form-group col-lg-3">
                                <label class="control-label">@Html.DisplayNameFor(m => m.BuildingPermits.OwnerPhoneNo)</label>
                                @Html.TextBoxFor(m => m.BuildingPermits.OwnerPhoneNo, new { @readonly = "readonly", @class = "form-control", id = "OwnerPhoneNo", @placeholder = "الهاتف" })
                            </div>
                        }
                        else
                        {
                            <div id="divOwners" class="box">
                                @if (Model.ListOfOwners != null && Model.ListOfOwners.Count > 0)
                                {
                                    Html.RenderPartial("_ListOwnersDetails", Model);
                                }
                            </div>
                        }
                    }
                </div>
                <div class="form-group col-lg-6">
                    <h5>بيانات مكان قطعة الأرض</h5>
                    <div class="form-group col-lg-3">
                        <label class="control-label">محافظة</label>
                        <input class="form-control" placeholder="ظفار" readonly="readonly" />
                    </div>
                    <div class="form-group col-lg-3">
                        <label class="control-label">@Html.DisplayNameFor(m => m.BuildingPermits.WelayahID)</label>
                        @Html.DropDownListFor(m => m.BuildingPermits.WelayahID, (List<SelectListItem>)ViewBag.DDWelayat, new { @disabled = "disabled", style = "padding:0px", @class = "form-control", @data_rel = "chosen", id = "Welayah" })
                    </div>
                    <div class="form-group col-lg-3">
                        <label class="control-label">@Html.DisplayNameFor(m => m.BuildingPermits.RegionID)</label>
                        @Html.DropDownListFor(m => m.BuildingPermits.RegionID, (List<SelectListItem>)ViewBag.DDRegion, new { @disabled = "disabled", style = "padding:0px", @class = "form-control", @data_rel = "chosen", id = "Region" })
                    </div>
                    <div class="form-group col-lg-3">
                        <label class="control-label">@Html.DisplayNameFor(m => m.BuildingPermits.SquareLetterID)</label>
                        @Html.DropDownListFor(m => m.BuildingPermits.SquareLetterID, (List<SelectListItem>)ViewBag.DDSquareLetters, new { @disabled = "disabled", style = "padding:0px", @class = "form-control", @data_rel = "chosen", id = "SquareLetter" })
                    </div>
                </div>
                <div class="form-group col-lg-12" id="landDetails">
                    <h5>بيانات قطعة الأرض</h5>

                    <div class="form-group col-lg-2">
                        <label class="control-label">@Html.DisplayNameFor(m => m.BuildingPermits.DistrictNo)</label>
                        @Html.TextBoxFor(m => m.BuildingPermits.DistrictNo, new { @readonly = "readonly", @class = "form-control", id = "DistrictNo", @placeholder = "رقم القطعة" })
                    </div>
                    <div class="form-group col-lg-1" id="divUnitNo">
                        <label class="control-label">رقم الوحدة</label>
                        @Html.TextBoxFor(m => m.BuildingPermits.UnitNo, new { @class = "form-control", id = "UnitNo", @placeholder = "رقم الوحدة" })
                        @*@Html.ValidationMessageFor(m => m.BuildingPermits.DistrictNo, "", new { @style = "color:orange;" })*@
                    </div>
                    <div class="form-group col-lg-2">
                        <label class="control-label">
                            @Html.DisplayNameFor(m => m.BuildingPermits.LandArea)
                        </label>
                        @Html.TextBoxFor(m => m.BuildingPermits.LandArea, new { @readonly = "readonly", @class = "form-control", id = "LandArea", @placeholder = "المساحة الكلية لقطعة الأرض" })
                        @Html.ValidationMessageFor(m => m.BuildingPermits.LandArea, "", new { @style = "color:orange;" })
                    </div>

                    <div class="form-group col-lg-3">
                        <label class="control-label">
                            @Html.DisplayNameFor(m => m.BuildingPermits.KrokiNO)
                        </label>
                        @Html.TextBoxFor(m => m.BuildingPermits.KrokiNO, new { @readonly = "readonly", @class = "form-control", id = "KrokiNO", @placeholder = "رقم الرسم المساحي" })
                        @Html.ValidationMessageFor(m => m.BuildingPermits.KrokiNO, "", new { @style = "color:orange;" })
                    </div>
                    @if (Model.BuildingPermits.LandDeedReceiptNo != null)
                    {
                        <div class="form-group col-lg-2">
                            <label class="control-label">
                                @Html.DisplayNameFor(m => m.BuildingPermits.LandDeedReceiptNo)
                            </label>
                            @Html.TextBoxFor(m => m.BuildingPermits.LandDeedReceiptNo, new { @readonly = "readonly", @class = "form-control", id = "LandDeedReceiptNo", @placeholder = "رقم ايصال سند الملكية" })
                            @Html.ValidationMessageFor(m => m.BuildingPermits.LandDeedReceiptNo, "", new { @style = "color:orange;" })
                        </div>
                        <div class="form-group col-lg-2">
                            <label class="control-label">
                                @Html.DisplayNameFor(m => m.BuildingPermits.LandDeedReceiptDate)
                            </label>
                            @Html.TextBoxFor(m => m.BuildingPermits.LandDeedReceiptDate, new { @readonly = "readonly", @class = "form-control", id = "LandDeedReceiptDate", @placeholder = "تاريخ ايصال سند الملكية" })
                            @Html.ValidationMessageFor(m => m.BuildingPermits.LandDeedReceiptDate, "", new { @style = "color:orange;" })
                        </div>
                    }
                </div>
                <div class="form-group col-lg-12">
                    <h5>بيانات ترخيص البناء</h5>
                    <div class="form-group col-lg-3">
                        <label class="control-label">@Html.DisplayNameFor(m => m.BuildingPermits.LicenseNo)</label>
                        @if (Model.BuildingPermits.ServiceName == "12" || Model.BuildingPermits.ServiceName == "16" || Model.BuildingPermits.ServiceName == "21")
                        {
                            <div style="direction:ltr">
                                @Html.TextBoxFor(m => m.BuildingPermits.LicenseNo, new { @readonly = "raedonly", @class = "form-control", id = "LicenseNo", @placeholder = "رقم الترخيص" })
                            </div>
                        }
                        else
                        {
                            <div style="direction:ltr">
                                @Html.TextBoxFor(m => m.BuildingPermits.MLicenseNo, new { @readonly = "raedonly", @class = "form-control", id = "LicenseNo", @placeholder = "رقم الترخيص" })
                            </div>
                        }
                    </div>
                    <div class="form-group col-lg-2">
                        <label class="control-label">@Html.DisplayNameFor(m => m.BuildingPermits.ConstructedArea)</label>
                        @Html.TextBoxFor(m => m.BuildingPermits.ConstructedArea, new { @readonly = "readonly", @class = "form-control", id = "ConstructedArea", @placeholder = "المساحة المراد تنفيذها" })
                    </div>

                    <div class="form-group col-lg-2">
                        <label class="control-label">
                            @Html.DisplayNameFor(m => m.BuildingPermits.UseTypeID)
                        </label>
                        @Html.DropDownListFor(m => m.BuildingPermits.UseTypeID, (List<SelectListItem>)ViewBag.DDLandUseTypes, new { @disabled = "disabled", style = "padding:0px", @class = "form-control", @data_rel = "chosen", @id = "LandUseTypes" })
                    </div>
                    <div class="form-group col-lg-3">
                        <label class="control-label">@Html.DisplayNameFor(m => m.BuildingPermits.BuildingTypeID)</label>
                        @Html.DropDownListFor(m => m.BuildingPermits.BuildingTypeID, (List<SelectListItem>)ViewBag.DDBuildingTypes, new { @disabled = "disabled", style = "padding:0px", @class = "form-control", @data_rel = "chosen", @id = "BuildingTypes" })
                    </div>
                    <div class="form-group col-lg-2">
                        <label class="control-label">@Html.DisplayNameFor(m => m.BuildingPermits.NumberOfFloors)</label>
                        @Html.TextBoxFor(m => m.BuildingPermits.NumberOfFloors, new { @readonly = "readonly", @class = "form-control", id = "NumberOfFloors", @placeholder = "عدد الطوابق المراد تنفيذها" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div id="divAttachments" class="form-group">
                    @{ Html.RenderPartial("_ListAttachments", Model);}
                </div>

                @if (Model.PaymentDetailsList != null && Model.PaymentDetailsList.Count > 0)
                {
                    <div id="divDues" class="form-group">
                        @{ Html.RenderPartial("_ListDues", Model);}
                    </div>
                }

                @if (Model.BuildingPermits.WorkflowStatus > 28)
                {
                    <div id="divPrints" class="form-group">
                        @{ Html.RenderPartial("_ListPrints", Model);}
                    </div>
                }
            </div>

            <div class="row">
                <div class="box col-lg-6">
                    <div class="col-lg-4">
                        <label class="control-label">@Html.DisplayNameFor(m => m.BuildingPermits.DmFileNumber)</label>
                        @Html.TextAreaFor(m => m.BuildingPermits.DmFileNumber, new { @class = "form-control", id = "DmFileNumber", @placeholder = "رقم الملف" })
                    </div>

                    <div class="col-lg-4">
                        <label class="control-label">@Html.DisplayNameFor(m => m.BuildingPermits.DmEngineerComments)</label>
                        @Html.TextAreaFor(m => m.BuildingPermits.DmEngineerComments, new { @class = "form-control", id = "DmEngineerComments", @placeholder = "ملاحظات" })
                    </div>
                    @if (Model.BuildingPermits.DMLicenseComments == null)
                    {
                        <div class="col-lg-4">
                            <label class="control-label">@Html.DisplayNameFor(m => m.BuildingPermits.DMLicenseComments)</label>
                            @Html.TextAreaFor(m => m.BuildingPermits.DMLicenseComments, new { @class = "form-control", id = "DMLicenseComments", @placeholder = "بيان الترخيص" })
                        </div>
                    }
                    else
                    {
                        <div class="col-lg-4">
                            <label class="control-label">@Html.DisplayNameFor(m => m.BuildingPermits.DMLicenseComments)</label>
                            @Html.TextAreaFor(m => m.BuildingPermits.DMLicenseComments, new { @readonly = "readonly", @class = "form-control", id = "DMLicenseComments", @placeholder = "بيان الترخيص" })
                        </div>
                    }
                    @if (Model.BuildingPermits.ServiceName == "21" && Model.BuildingPermits.MLicenseStatement != null)
                    {
                        <div class="col-lg-4">
                            <label class="control-label">@Html.DisplayNameFor(m => m.BuildingPermits.MLicenseStatement)</label>
                            @Html.TextAreaFor(m => m.BuildingPermits.MLicenseStatement, new { @class = "form-control", id = "MLicenseStatement", @placeholder = "بيان التعديل او الاضافة" })
                        </div>
                    }
                </div>

                <div class="box col-lg-6">
                    <div class="col-lg-4">
                        <label class="control-label">@Html.DisplayNameFor(m => m.BuildingPermits.DMManagerNotes)</label>
                        @Html.TextAreaFor(m => m.BuildingPermits.DMManagerNotes, new { @readonly = "readonly", @class = "form-control", id = "DMManagerNotes", @placeholder = "ملاحظات مدير الدائرة" })
                    </div>
                    <div class="col-lg-4">
                        <label class="control-label">@Html.DisplayNameFor(m => m.BuildingPermits.DMEngineerNotes)</label>
                        @Html.TextAreaFor(m => m.BuildingPermits.DMEngineerNotes, new { @class = "form-control", id = "DMEngineerNotes", @placeholder = "تعليق مهندس تراخيص البناء" })
                    </div>
                    <div class="col-lg-4">
                        <label class="control-label">@Html.DisplayNameFor(m => m.BuildingPermits.WorkflowStatus)</label>
                        @Html.DropDownListFor(m => m.BuildingPermits.WorkflowStatus, (List<SelectListItem>)ViewBag.DDPermitsStatus, new { @class = "form-control dropdown-toggle", Id = "PermitsStatus" })
                        @Html.ValidationMessageFor(m => m.BuildingPermits.WorkflowStatus, "", new { @style = "color:orange;" })
                    </div>
                </div>
            </div>

            <div class="row">
                <button class="btn btn-primary" id="Save" @*onclick="return confirm('هل انت متاكد من حفظ التعديلات !');"*@>
                    <i class="glyphicon glyphicon-ok"></i> حفظ
                </button>
                <a onclick="return Loading();" class="btn btn-primary" id="btnFees" href="@Url.Action( "PermitFees","BuildingPermits", new {@id= Model.BuildingPermits.Id})" role="button">
                    <i class="glyphicon glyphicon-credit-card"></i> تحديد الرسوم
                </a>
                <a onclick="return Loading();" class="btn btn-primary" id="btnPrint" href="@Url.Action( "PermitPrint","BuildingPermits", new {@id= Model.BuildingPermits.Id})" role="button">
                    <i class="glyphicon glyphicon-print"></i> طباعة الترخيص
                </a>
                <a style="float:left" href="@Url.Action( "Index","BuildingPermits")" onclick="return Loading();" class="btn btn-primary" role="button">الصفحة السابقة</a>
            </div>
        }

    </div>

    @if (ViewBag.ErrorMessage != null)
    {
        <script type="text/javascript">

            window.onload = function () {
                $('#ErrorModal').find('.modal-content').text('@ViewBag.ErrorMessage');
                $("#ErrorModal").modal("show");
                @*$("#lblError").html('@Html.Raw(ViewBag.ErrorMessage)');*@
                /*$("#MainModal").modal("show");*/
            };
        </script>
    }
</div>


@*<script src="~/Scripts/jquery-1.10.2.js"></script>*@
<script src="~/Scripts/jquery-ui.js"></script>
<script src="~/Scripts/jquery-ui-timepicker-addon.js"></script>
@*<script src="~/Scripts/jquery-1.10.2.min.js"></script>*@
<script type="text/javascript">
        $(function () {
            //Country Dropdown Selectedchange event
            $("#Welayah").change(function () {

                $("#Region").empty();

                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetRegions")', // Calling json method
                    dataType: 'json',
                    data: { id: $("#Welayah").val() },
                    // Get Selected Welayah ID.
                    success: function (regions) {
                        $.each(regions, function (i, region) {
                            $("#Region").append('<option value="' + region.Value + '">' + region.Text + '</option>');
                        });
					    $("[data-rel='chosen']").trigger("chosen:updated");
                    },
                    error: function (ex) {
                        alert('Failed to retrieve Regions.' + ex);
                    }
                });
                return false;
            });
        });

</script>

<script>
    function stopVlidations() {
        $("#LandDeedReceiptNo").rules('remove', 'required');
        $('#LandDeedReceiptNo').removeAttr('required');
        $("#PersonalFile").rules('remove', 'required');
        $('#PersonalFile').removeAttr('required');
        $("#DistrictNo").rules('remove', 'required');
        $('#DistrictNo').removeAttr('required');
        $("#LandArea").rules('remove', 'required');
        $('#LandArea').removeAttr('required');
        $("#KrokiNO").rules('remove', 'required');
        $('#KrokiNO').removeAttr('required');
        $("#LandDeedReceiptDate").rules('remove', 'required');
        $('#LandDeedReceiptDate').removeAttr('required');
        $("#ConstructedArea").rules('remove', 'required');
        $('#ConstructedArea').removeAttr('required');
        $("#NumberOfFloors").rules('remove', 'required');
        $('#NumberOfFloors').removeAttr('required');
    }

    $(document).ready(function () {
        let arr1 = [12, 15];
        let arr2 = [13, 14];
        let arr3 = [16];
        if ($('#ServiceType').val() == "") {
            $('#ServiceType').val("12");
        }
        let selectedVal = parseInt($('#ServiceType').val());
        if (arr1.includes(selectedVal)) {

            $("#permitNo").hide();
            /*alert($('#ServiceType').find('option:selected').text());*/
        } else if (arr2.includes(selectedVal)) {
            $("#permitNo").show();

        } else if (arr3.includes(selectedVal)) {
            $("#permitNo").hide();
            $("#landDetails").hide();

            $("#Permitsform").data("validator").settings.ignore = ".ignore, :hidden";
            $("#LandDeedReceiptNo").rules('remove', 'required');
            $('#LandDeedReceiptNo').removeAttr('required');
            $('#LandDeedReceiptDate').rules('remove', 'required');
            $('#LandDeedReceiptDate').removeAttr('required');
            $('#KrokiNO').rules('remove', 'required');
            $('#KrokiNO').removeAttr('required');
        }
        $("#PermitsStatus option[value='0']").attr("disabled", "disabled");

        $("#Save").click(function () {
            stopVlidations();
            Loading();
            $("#Permitsform").submit();
        });
        //var date = $('#datepicker').datepicker({ dateFormat: 'dd-mm-yy' }).val();
        $("#pickerAppointmentDate").datetimepicker({
            dateFormat: 'dd/mm/yy',
            timeFormat: 'HH:mm',
            changeMonth: false,
            changeYear: false,
            showTime: true,
            stepHour: 1,
            stepMinute: 15,

        });
        if ($("#bldAppointment").val() == "0") {
            $("#AcceptAppointment").show();
            $("#RefuseAppointment").show();
            $("#RefuseAppointment").attr('disabled', true);
            $("#CancelAppointment").hide();
        } else if ($("#bldAppointment").val() == "1") {
            $("#AcceptAppointment").show();
            $("#RefuseAppointment").show();
            $("#CancelAppointment").hide();
        } else if ($("#bldAppointment").val() == "2") {
            $("#AcceptAppointment").hide();
            $("#RefuseAppointment").hide();
            $("#CancelAppointment").show();
        } else if ($("#bldAppointment").val() == "3") {
            $("#AcceptAppointment").show();
            $("#RefuseAppointment").show();
            $("#CancelAppointment").hide();
        } else {
            $("#AcceptAppointment").hide();
            $("#RefuseAppointment").hide();
            $("#CancelAppointment").hide();
        }
        $("#divAppointmentDate").hide();

        $("#AcceptAppointment").click(function () {
            Loading();
            $("#divAppointmentDate").show();
        });

        $("#DetrmineAppointment").click(function () {
            Loading();
            var data = new FormData();
            var url = "@Url.Action("AcceptAppointment", "BuildingPermits")";
            data.append("bldID", $("#bldID").val());
            data.append("appointmentDate", $("#pickerAppointmentDate").val());
            $.ajax({
                url: url,
                type: "POST",
                processData: false,
                contentType: false,
                data: data,
                success: function (response) {
                    if (response.msg) {
                        var error = response.msg;
                        $('.modal-content').css({ fontSize: "12px", color: "green" });
                        $("#ErrorModal").find('.modal-content').text(error);
                        $("#ErrorModal").modal("show");
                        var date = $("#pickerAppointmentDate").val();
                        /*console.log(date);*/
                        //    let year = date.getFullYear();
                        //let month = (1 + date.getMonth()).toString().padStart(2, '0');
                        //let day = date.getDate().toString().padStart(2, '0');

                        //let fulldate = year + '/' + month + '/' + day + ' - ';
                        $('#lblAppointmentDateD').text("تم تحديد طلب المقابلة" + ' - ' + date);
                        $('#lblAppointmentDateP').text("تم تحديد طلب المقابلة" + ' - ' + date);
                        $('#lblAppointmentDateR').text("تم تحديد طلب المقابلة" + ' - ' + date);
                        $('#lblAppointmentDateE').text("تم تحديد طلب المقابلة" + ' - ' + date);

                        /*$("#appointmentDate").val(response);*/
                        $('#RefuseAppointment').hide();
                        $('#AcceptAppointment').hide();
                        $("#CancelAppointment").show();
                        $("#divAppointmentDate").hide();
                    }
                },
                error: function (er) {
                    console.log(er);
                    $('#DetrmineAppointment').attr('disabled', true);
                }
            });
        });

        $("#RefuseAppointment").click(function () {
            Loading();
            var data = new FormData();
            var url = "@Url.Action("RefuseAppointment", "BuildingPermits")";
            data.append("bldID", $("#bldID").val());
            $.ajax({
                url: url,
                type: "POST",
                processData: false,
                contentType: false,
                data: data,
                success: function (response) {
                    if (response.msg) {
                        var error = response.msg;
                        $('.modal-content').css({ fontSize: "12px", color: "red" });
                        $('.modal-content').find('.modal-content').text(error);
                        $("#ErrorModal").modal("show");
                        $('#lblAppointmentDateD').text("تم رفض طلب المقابلة");
                        $('#lblAppointmentDateP').text("تم رفض طلب المقابلة");
                        $('#lblAppointmentDateR').text("تم رفض طلب المقابلة");
                        $('#lblAppointmentDateE').text("تم رفض طلب المقابلة");
                        $('#RefuseAppointment').attr('disabled', true);
                        $('#AcceptAppointment').attr('disabled', true);
                    }
                },
                error: function (er) {
                    console.log(er);
                    $('#RefuseAppointment').attr('disabled', true);
                }
            });
        });

        $("#CancelAppointment").click(function () {
            Loading();
            var data = new FormData();
            var url = "@Url.Action("CancelAppointment", "BuildingPermits")";
            data.append("bldID", $("#bldID").val());
            $.ajax({
                url: url,
                type: "POST",
                processData: false,
                contentType: false,
                data: data,
                success: function (response) {
                    if (response.msg) {
                        var error = response.msg;
                        $('.modal-content').css({ fontSize: "12px", color: "green" });
                        $('.modal-content').find('.modal-content').text(error);
                        $("#ErrorModal").modal("show");
                        $('#lblAppointmentDateD').text("تمت المقابلة");
                        $('#lblAppointmentDateP').text("تمت المقابلة");
                        $('#lblAppointmentDateR').text("تمت المقابلة");
                        $('#lblAppointmentDateE').text("تمت المقابلة");

                        $('#RefuseAppointment').attr('disabled', false);
                        $('#AcceptAppointment').attr('disabled', false);
                        $("#CancelAppointment").hide();
                        $('#RefuseAppointment').show();
                        $('#AcceptAppointment').show();
                    }
                },
                error: function (er) {
                    console.log(er);
                    $('#MakeAppointment').attr('disabled', true);
                }
            });
        });
    });
</script>
