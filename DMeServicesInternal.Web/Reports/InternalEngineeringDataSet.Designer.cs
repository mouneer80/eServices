//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace DMeServicesInternal.Web.Reports
{


    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("InternalEngineeringDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class InternalEngineeringDataSet : global::System.Data.DataSet
    {

        private BldPermitsDataTable tableBldPermits;

        private BldRegionsDataTable tableBldRegions;

        private BldSquareLettersDataTable tableBldSquareLetters;

        private BldWelyatDataTable tableBldWelyat;

        private BldPaymentDataTable tableBldPayment;

        private BldBuildingTypesDataTable tableBldBuildingTypes;

        private BldLandUseTypesDataTable tableBldLandUseTypes;

        private BldSupervisionServicesDataTable tableBldSupervisionServices;

        private BldSupervisionServicesTypesDataTable tableBldSupervisionServicesTypes;

        private UnpaidServicesDataTable tableUnpaidServices;

        private AlreadyPaidServicesDataTable tableAlreadyPaidServices;

        private SpecialSignsDataTable tableSpecialSigns;

        private global::System.Data.DataRelation relationFK_BldPermits_BldBuildingTypes;

        private global::System.Data.DataRelation relationFK_BldPermits_BldLandUseTypes;

        private global::System.Data.DataRelation relationFK_BldPermits_BldRegions;

        private global::System.Data.DataRelation relationFK_BldPermits_BldSquareLetters;

        private global::System.Data.DataRelation relationFK_BldPermits_BldWelyat;

        private global::System.Data.DataRelation relationFK_BldRegions_BldWelyat;

        private global::System.Data.DataRelation relationFK_BldPayment_BldPermits;

        private global::System.Data.DataRelation relationFK_BldSupervisionServices_BldSupervisionServicesTypes;

        private global::System.Data.DataRelation relationFK_BldSupervisionServices_BldSupervisionServicesTypes1;

        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public InternalEngineeringDataSet()
        {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected InternalEngineeringDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                base(info, context, false)
        {
            if ((this.IsBinarySerialized(info, context) == true))
            {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema))
            {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["BldPermits"] != null))
                {
                    base.Tables.Add(new BldPermitsDataTable(ds.Tables["BldPermits"]));
                }
                if ((ds.Tables["BldRegions"] != null))
                {
                    base.Tables.Add(new BldRegionsDataTable(ds.Tables["BldRegions"]));
                }
                if ((ds.Tables["BldSquareLetters"] != null))
                {
                    base.Tables.Add(new BldSquareLettersDataTable(ds.Tables["BldSquareLetters"]));
                }
                if ((ds.Tables["BldWelyat"] != null))
                {
                    base.Tables.Add(new BldWelyatDataTable(ds.Tables["BldWelyat"]));
                }
                if ((ds.Tables["BldPayment"] != null))
                {
                    base.Tables.Add(new BldPaymentDataTable(ds.Tables["BldPayment"]));
                }
                if ((ds.Tables["BldBuildingTypes"] != null))
                {
                    base.Tables.Add(new BldBuildingTypesDataTable(ds.Tables["BldBuildingTypes"]));
                }
                if ((ds.Tables["BldLandUseTypes"] != null))
                {
                    base.Tables.Add(new BldLandUseTypesDataTable(ds.Tables["BldLandUseTypes"]));
                }
                if ((ds.Tables["BldSupervisionServices"] != null))
                {
                    base.Tables.Add(new BldSupervisionServicesDataTable(ds.Tables["BldSupervisionServices"]));
                }
                if ((ds.Tables["BldSupervisionServicesTypes"] != null))
                {
                    base.Tables.Add(new BldSupervisionServicesTypesDataTable(ds.Tables["BldSupervisionServicesTypes"]));
                }
                if ((ds.Tables["UnpaidServices"] != null))
                {
                    base.Tables.Add(new UnpaidServicesDataTable(ds.Tables["UnpaidServices"]));
                }
                if ((ds.Tables["AlreadyPaidServices"] != null))
                {
                    base.Tables.Add(new AlreadyPaidServicesDataTable(ds.Tables["AlreadyPaidServices"]));
                }
                if ((ds.Tables["SpecialSigns"] != null))
                {
                    base.Tables.Add(new SpecialSignsDataTable(ds.Tables["SpecialSigns"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else
            {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BldPermitsDataTable BldPermits
        {
            get
            {
                return this.tableBldPermits;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BldRegionsDataTable BldRegions
        {
            get
            {
                return this.tableBldRegions;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BldSquareLettersDataTable BldSquareLetters
        {
            get
            {
                return this.tableBldSquareLetters;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BldWelyatDataTable BldWelyat
        {
            get
            {
                return this.tableBldWelyat;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BldPaymentDataTable BldPayment
        {
            get
            {
                return this.tableBldPayment;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BldBuildingTypesDataTable BldBuildingTypes
        {
            get
            {
                return this.tableBldBuildingTypes;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BldLandUseTypesDataTable BldLandUseTypes
        {
            get
            {
                return this.tableBldLandUseTypes;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BldSupervisionServicesDataTable BldSupervisionServices
        {
            get
            {
                return this.tableBldSupervisionServices;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BldSupervisionServicesTypesDataTable BldSupervisionServicesTypes
        {
            get
            {
                return this.tableBldSupervisionServicesTypes;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public UnpaidServicesDataTable UnpaidServices
        {
            get
            {
                return this.tableUnpaidServices;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AlreadyPaidServicesDataTable AlreadyPaidServices
        {
            get
            {
                return this.tableAlreadyPaidServices;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SpecialSignsDataTable SpecialSigns
        {
            get
            {
                return this.tableSpecialSigns;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode
        {
            get
            {
                return this._schemaSerializationMode;
            }
            set
            {
                this._schemaSerializationMode = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables
        {
            get
            {
                return base.Tables;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations
        {
            get
            {
                return base.Relations;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void InitializeDerivedDataSet()
        {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public override global::System.Data.DataSet Clone()
        {
            InternalEngineeringDataSet cln = ((InternalEngineeringDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeTables()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeRelations()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader)
        {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema))
            {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["BldPermits"] != null))
                {
                    base.Tables.Add(new BldPermitsDataTable(ds.Tables["BldPermits"]));
                }
                if ((ds.Tables["BldRegions"] != null))
                {
                    base.Tables.Add(new BldRegionsDataTable(ds.Tables["BldRegions"]));
                }
                if ((ds.Tables["BldSquareLetters"] != null))
                {
                    base.Tables.Add(new BldSquareLettersDataTable(ds.Tables["BldSquareLetters"]));
                }
                if ((ds.Tables["BldWelyat"] != null))
                {
                    base.Tables.Add(new BldWelyatDataTable(ds.Tables["BldWelyat"]));
                }
                if ((ds.Tables["BldPayment"] != null))
                {
                    base.Tables.Add(new BldPaymentDataTable(ds.Tables["BldPayment"]));
                }
                if ((ds.Tables["BldBuildingTypes"] != null))
                {
                    base.Tables.Add(new BldBuildingTypesDataTable(ds.Tables["BldBuildingTypes"]));
                }
                if ((ds.Tables["BldLandUseTypes"] != null))
                {
                    base.Tables.Add(new BldLandUseTypesDataTable(ds.Tables["BldLandUseTypes"]));
                }
                if ((ds.Tables["BldSupervisionServices"] != null))
                {
                    base.Tables.Add(new BldSupervisionServicesDataTable(ds.Tables["BldSupervisionServices"]));
                }
                if ((ds.Tables["BldSupervisionServicesTypes"] != null))
                {
                    base.Tables.Add(new BldSupervisionServicesTypesDataTable(ds.Tables["BldSupervisionServicesTypes"]));
                }
                if ((ds.Tables["UnpaidServices"] != null))
                {
                    base.Tables.Add(new UnpaidServicesDataTable(ds.Tables["UnpaidServices"]));
                }
                if ((ds.Tables["AlreadyPaidServices"] != null))
                {
                    base.Tables.Add(new AlreadyPaidServicesDataTable(ds.Tables["AlreadyPaidServices"]));
                }
                if ((ds.Tables["SpecialSigns"] != null))
                {
                    base.Tables.Add(new SpecialSignsDataTable(ds.Tables["SpecialSigns"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else
            {
                this.ReadXml(reader);
                this.InitVars();
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable()
        {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars()
        {
            this.InitVars(true);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars(bool initTable)
        {
            this.tableBldPermits = ((BldPermitsDataTable)(base.Tables["BldPermits"]));
            if ((initTable == true))
            {
                if ((this.tableBldPermits != null))
                {
                    this.tableBldPermits.InitVars();
                }
            }
            this.tableBldRegions = ((BldRegionsDataTable)(base.Tables["BldRegions"]));
            if ((initTable == true))
            {
                if ((this.tableBldRegions != null))
                {
                    this.tableBldRegions.InitVars();
                }
            }
            this.tableBldSquareLetters = ((BldSquareLettersDataTable)(base.Tables["BldSquareLetters"]));
            if ((initTable == true))
            {
                if ((this.tableBldSquareLetters != null))
                {
                    this.tableBldSquareLetters.InitVars();
                }
            }
            this.tableBldWelyat = ((BldWelyatDataTable)(base.Tables["BldWelyat"]));
            if ((initTable == true))
            {
                if ((this.tableBldWelyat != null))
                {
                    this.tableBldWelyat.InitVars();
                }
            }
            this.tableBldPayment = ((BldPaymentDataTable)(base.Tables["BldPayment"]));
            if ((initTable == true))
            {
                if ((this.tableBldPayment != null))
                {
                    this.tableBldPayment.InitVars();
                }
            }
            this.tableBldBuildingTypes = ((BldBuildingTypesDataTable)(base.Tables["BldBuildingTypes"]));
            if ((initTable == true))
            {
                if ((this.tableBldBuildingTypes != null))
                {
                    this.tableBldBuildingTypes.InitVars();
                }
            }
            this.tableBldLandUseTypes = ((BldLandUseTypesDataTable)(base.Tables["BldLandUseTypes"]));
            if ((initTable == true))
            {
                if ((this.tableBldLandUseTypes != null))
                {
                    this.tableBldLandUseTypes.InitVars();
                }
            }
            this.tableBldSupervisionServices = ((BldSupervisionServicesDataTable)(base.Tables["BldSupervisionServices"]));
            if ((initTable == true))
            {
                if ((this.tableBldSupervisionServices != null))
                {
                    this.tableBldSupervisionServices.InitVars();
                }
            }
            this.tableBldSupervisionServicesTypes = ((BldSupervisionServicesTypesDataTable)(base.Tables["BldSupervisionServicesTypes"]));
            if ((initTable == true))
            {
                if ((this.tableBldSupervisionServicesTypes != null))
                {
                    this.tableBldSupervisionServicesTypes.InitVars();
                }
            }
            this.tableUnpaidServices = ((UnpaidServicesDataTable)(base.Tables["UnpaidServices"]));
            if ((initTable == true))
            {
                if ((this.tableUnpaidServices != null))
                {
                    this.tableUnpaidServices.InitVars();
                }
            }
            this.tableAlreadyPaidServices = ((AlreadyPaidServicesDataTable)(base.Tables["AlreadyPaidServices"]));
            if ((initTable == true))
            {
                if ((this.tableAlreadyPaidServices != null))
                {
                    this.tableAlreadyPaidServices.InitVars();
                }
            }
            this.tableSpecialSigns = ((SpecialSignsDataTable)(base.Tables["SpecialSigns"]));
            if ((initTable == true))
            {
                if ((this.tableSpecialSigns != null))
                {
                    this.tableSpecialSigns.InitVars();
                }
            }
            this.relationFK_BldPermits_BldBuildingTypes = this.Relations["FK_BldPermits_BldBuildingTypes"];
            this.relationFK_BldPermits_BldLandUseTypes = this.Relations["FK_BldPermits_BldLandUseTypes"];
            this.relationFK_BldPermits_BldRegions = this.Relations["FK_BldPermits_BldRegions"];
            this.relationFK_BldPermits_BldSquareLetters = this.Relations["FK_BldPermits_BldSquareLetters"];
            this.relationFK_BldPermits_BldWelyat = this.Relations["FK_BldPermits_BldWelyat"];
            this.relationFK_BldRegions_BldWelyat = this.Relations["FK_BldRegions_BldWelyat"];
            this.relationFK_BldPayment_BldPermits = this.Relations["FK_BldPayment_BldPermits"];
            this.relationFK_BldSupervisionServices_BldSupervisionServicesTypes = this.Relations["FK_BldSupervisionServices_BldSupervisionServicesTypes"];
            this.relationFK_BldSupervisionServices_BldSupervisionServicesTypes1 = this.Relations["FK_BldSupervisionServices_BldSupervisionServicesTypes1"];
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitClass()
        {
            this.DataSetName = "InternalEngineeringDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/InternalEngineeringDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableBldPermits = new BldPermitsDataTable();
            base.Tables.Add(this.tableBldPermits);
            this.tableBldRegions = new BldRegionsDataTable();
            base.Tables.Add(this.tableBldRegions);
            this.tableBldSquareLetters = new BldSquareLettersDataTable();
            base.Tables.Add(this.tableBldSquareLetters);
            this.tableBldWelyat = new BldWelyatDataTable();
            base.Tables.Add(this.tableBldWelyat);
            this.tableBldPayment = new BldPaymentDataTable();
            base.Tables.Add(this.tableBldPayment);
            this.tableBldBuildingTypes = new BldBuildingTypesDataTable();
            base.Tables.Add(this.tableBldBuildingTypes);
            this.tableBldLandUseTypes = new BldLandUseTypesDataTable();
            base.Tables.Add(this.tableBldLandUseTypes);
            this.tableBldSupervisionServices = new BldSupervisionServicesDataTable();
            base.Tables.Add(this.tableBldSupervisionServices);
            this.tableBldSupervisionServicesTypes = new BldSupervisionServicesTypesDataTable();
            base.Tables.Add(this.tableBldSupervisionServicesTypes);
            this.tableUnpaidServices = new UnpaidServicesDataTable();
            base.Tables.Add(this.tableUnpaidServices);
            this.tableAlreadyPaidServices = new AlreadyPaidServicesDataTable();
            base.Tables.Add(this.tableAlreadyPaidServices);
            this.tableSpecialSigns = new SpecialSignsDataTable();
            base.Tables.Add(this.tableSpecialSigns);
            this.relationFK_BldPermits_BldBuildingTypes = new global::System.Data.DataRelation("FK_BldPermits_BldBuildingTypes", new global::System.Data.DataColumn[] {
                        this.tableBldBuildingTypes.IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableBldPermits.BuildingTypeIDColumn}, false);
            this.Relations.Add(this.relationFK_BldPermits_BldBuildingTypes);
            this.relationFK_BldPermits_BldLandUseTypes = new global::System.Data.DataRelation("FK_BldPermits_BldLandUseTypes", new global::System.Data.DataColumn[] {
                        this.tableBldLandUseTypes.IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableBldPermits.UseTypeIDColumn}, false);
            this.Relations.Add(this.relationFK_BldPermits_BldLandUseTypes);
            this.relationFK_BldPermits_BldRegions = new global::System.Data.DataRelation("FK_BldPermits_BldRegions", new global::System.Data.DataColumn[] {
                        this.tableBldRegions.RegionIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableBldPermits.RegionIDColumn}, false);
            this.Relations.Add(this.relationFK_BldPermits_BldRegions);
            this.relationFK_BldPermits_BldSquareLetters = new global::System.Data.DataRelation("FK_BldPermits_BldSquareLetters", new global::System.Data.DataColumn[] {
                        this.tableBldSquareLetters.IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableBldPermits.SquareLetterIDColumn}, false);
            this.Relations.Add(this.relationFK_BldPermits_BldSquareLetters);
            this.relationFK_BldPermits_BldWelyat = new global::System.Data.DataRelation("FK_BldPermits_BldWelyat", new global::System.Data.DataColumn[] {
                        this.tableBldWelyat.WelyahIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableBldPermits.WelayahIDColumn}, false);
            this.Relations.Add(this.relationFK_BldPermits_BldWelyat);
            this.relationFK_BldRegions_BldWelyat = new global::System.Data.DataRelation("FK_BldRegions_BldWelyat", new global::System.Data.DataColumn[] {
                        this.tableBldWelyat.WelyahIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableBldRegions.WelyahIDColumn}, false);
            this.Relations.Add(this.relationFK_BldRegions_BldWelyat);
            this.relationFK_BldPayment_BldPermits = new global::System.Data.DataRelation("FK_BldPayment_BldPermits", new global::System.Data.DataColumn[] {
                        this.tableBldPermits.IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableBldPayment.BldPermitIdColumn}, false);
            this.Relations.Add(this.relationFK_BldPayment_BldPermits);
            this.relationFK_BldSupervisionServices_BldSupervisionServicesTypes = new global::System.Data.DataRelation("FK_BldSupervisionServices_BldSupervisionServicesTypes", new global::System.Data.DataColumn[] {
                        this.tableBldSupervisionServicesTypes.IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableUnpaidServices.ServiceTypeIDColumn}, false);
            this.Relations.Add(this.relationFK_BldSupervisionServices_BldSupervisionServicesTypes);
            this.relationFK_BldSupervisionServices_BldSupervisionServicesTypes1 = new global::System.Data.DataRelation("FK_BldSupervisionServices_BldSupervisionServicesTypes1", new global::System.Data.DataColumn[] {
                        this.tableBldSupervisionServicesTypes.IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableSpecialSigns.ServiceTypeIDColumn}, false);
            this.Relations.Add(this.relationFK_BldSupervisionServices_BldSupervisionServicesTypes1);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeBldPermits()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeBldRegions()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeBldSquareLetters()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeBldWelyat()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeBldPayment()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeBldBuildingTypes()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeBldLandUseTypes()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeBldSupervisionServices()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeBldSupervisionServicesTypes()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeUnpaidServices()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeAlreadyPaidServices()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSpecialSigns()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e)
        {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove))
            {
                this.InitVars();
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs)
        {
            InternalEngineeringDataSet ds = new InternalEngineeringDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace))
            {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try
                {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                    {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length))
                        {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length)
                                        && (s1.ReadByte() == s2.ReadByte()));)
                            {
                                ;
                            }
                            if ((s1.Position == s1.Length))
                            {
                                return type;
                            }
                        }
                    }
                }
                finally
                {
                    if ((s1 != null))
                    {
                        s1.Close();
                    }
                    if ((s2 != null))
                    {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void BldPermitsRowChangeEventHandler(object sender, BldPermitsRowChangeEvent e);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void BldRegionsRowChangeEventHandler(object sender, BldRegionsRowChangeEvent e);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void BldSquareLettersRowChangeEventHandler(object sender, BldSquareLettersRowChangeEvent e);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void BldWelyatRowChangeEventHandler(object sender, BldWelyatRowChangeEvent e);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void BldPaymentRowChangeEventHandler(object sender, BldPaymentRowChangeEvent e);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void BldBuildingTypesRowChangeEventHandler(object sender, BldBuildingTypesRowChangeEvent e);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void BldLandUseTypesRowChangeEventHandler(object sender, BldLandUseTypesRowChangeEvent e);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void BldSupervisionServicesRowChangeEventHandler(object sender, BldSupervisionServicesRowChangeEvent e);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void BldSupervisionServicesTypesRowChangeEventHandler(object sender, BldSupervisionServicesTypesRowChangeEvent e);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void UnpaidServicesRowChangeEventHandler(object sender, UnpaidServicesRowChangeEvent e);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void AlreadyPaidServicesRowChangeEventHandler(object sender, AlreadyPaidServicesRowChangeEvent e);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SpecialSignsRowChangeEventHandler(object sender, SpecialSignsRowChangeEvent e);

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BldPermitsDataTable : global::System.Data.TypedTableBase<BldPermitsRow>
        {

            private global::System.Data.DataColumn columnId;

            private global::System.Data.DataColumn columnTransactNo;

            private global::System.Data.DataColumn columnOwnerName;

            private global::System.Data.DataColumn columnOwnerCivilId;

            private global::System.Data.DataColumn columnOwnerPhoneNo;

            private global::System.Data.DataColumn columnDistrictNo;

            private global::System.Data.DataColumn columnConstructedArea;

            private global::System.Data.DataColumn columnNumberOfFloors;

            private global::System.Data.DataColumn columnConsultantCrNo;

            private global::System.Data.DataColumn columnRequestDate;

            private global::System.Data.DataColumn columnCreatedBy;

            private global::System.Data.DataColumn columnCreatedOn;

            private global::System.Data.DataColumn columnUpdatedBy;

            private global::System.Data.DataColumn columnUpdatedOn;

            private global::System.Data.DataColumn columnLicenseNo;

            private global::System.Data.DataColumn columnWorkflowStatus;

            private global::System.Data.DataColumn columnDmEngineerNo;

            private global::System.Data.DataColumn columnDmEngineerComments;

            private global::System.Data.DataColumn columnConsultantCivilId;

            private global::System.Data.DataColumn columnWelayahID;

            private global::System.Data.DataColumn columnRegionID;

            private global::System.Data.DataColumn columnSquareLetterID;

            private global::System.Data.DataColumn columnUseTypeID;

            private global::System.Data.DataColumn columnBuildingTypeID;

            private global::System.Data.DataColumn columnKrokiNO;

            private global::System.Data.DataColumn columnDmFileNumber;

            private global::System.Data.DataColumn columnLandDeedReceiptNo;

            private global::System.Data.DataColumn columnDMLicenseComments;

            private global::System.Data.DataColumn columnLandArea;

            private global::System.Data.DataColumn columnLandDeedReceiptDate;

            private global::System.Data.DataColumn columnLandDeedNo;

            private global::System.Data.DataColumn columnBuildingType;

            private global::System.Data.DataColumn columnRegionCode;

            private global::System.Data.DataColumn columnRegionArName;

            private global::System.Data.DataColumn columnUseType;

            private global::System.Data.DataColumn columnWelyahArName;

            private global::System.Data.DataColumn columnArLetter;

            private global::System.Data.DataColumn columnowners;

            private global::System.Data.DataColumn columnServiceName;

            private global::System.Data.DataColumn columnBuildingComplex;

            private global::System.Data.DataColumn columnUnitNo;

            private global::System.Data.DataColumn columnAppointmentStatus;

            private global::System.Data.DataColumn columnAppointmentDate;

            private global::System.Data.DataColumn columnDMManagerNotes;

            private global::System.Data.DataColumn columnDMEngineerNotes;

            private global::System.Data.DataColumn columnContractorName;

            private global::System.Data.DataColumn columnMLicenseStatement;

            private global::System.Data.DataColumn columnMLicenseNo;

            private global::System.Data.DataColumn columnFeesRefid;

            private global::System.Data.DataColumn columnFeesPayOn;

            private global::System.Data.DataColumn columnInsuranceRefid;

            private global::System.Data.DataColumn columnInsurancePayOn;

            private global::System.Data.DataColumn columnServiceNameAR;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldPermitsDataTable()
            {
                this.TableName = "BldPermits";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal BldPermitsDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected BldPermitsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IdColumn
            {
                get
                {
                    return this.columnId;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TransactNoColumn
            {
                get
                {
                    return this.columnTransactNo;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OwnerNameColumn
            {
                get
                {
                    return this.columnOwnerName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OwnerCivilIdColumn
            {
                get
                {
                    return this.columnOwnerCivilId;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OwnerPhoneNoColumn
            {
                get
                {
                    return this.columnOwnerPhoneNo;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DistrictNoColumn
            {
                get
                {
                    return this.columnDistrictNo;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ConstructedAreaColumn
            {
                get
                {
                    return this.columnConstructedArea;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NumberOfFloorsColumn
            {
                get
                {
                    return this.columnNumberOfFloors;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ConsultantCrNoColumn
            {
                get
                {
                    return this.columnConsultantCrNo;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RequestDateColumn
            {
                get
                {
                    return this.columnRequestDate;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CreatedByColumn
            {
                get
                {
                    return this.columnCreatedBy;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CreatedOnColumn
            {
                get
                {
                    return this.columnCreatedOn;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UpdatedByColumn
            {
                get
                {
                    return this.columnUpdatedBy;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UpdatedOnColumn
            {
                get
                {
                    return this.columnUpdatedOn;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LicenseNoColumn
            {
                get
                {
                    return this.columnLicenseNo;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn WorkflowStatusColumn
            {
                get
                {
                    return this.columnWorkflowStatus;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DmEngineerNoColumn
            {
                get
                {
                    return this.columnDmEngineerNo;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DmEngineerCommentsColumn
            {
                get
                {
                    return this.columnDmEngineerComments;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ConsultantCivilIdColumn
            {
                get
                {
                    return this.columnConsultantCivilId;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn WelayahIDColumn
            {
                get
                {
                    return this.columnWelayahID;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RegionIDColumn
            {
                get
                {
                    return this.columnRegionID;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SquareLetterIDColumn
            {
                get
                {
                    return this.columnSquareLetterID;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UseTypeIDColumn
            {
                get
                {
                    return this.columnUseTypeID;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BuildingTypeIDColumn
            {
                get
                {
                    return this.columnBuildingTypeID;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KrokiNOColumn
            {
                get
                {
                    return this.columnKrokiNO;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DmFileNumberColumn
            {
                get
                {
                    return this.columnDmFileNumber;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LandDeedReceiptNoColumn
            {
                get
                {
                    return this.columnLandDeedReceiptNo;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DMLicenseCommentsColumn
            {
                get
                {
                    return this.columnDMLicenseComments;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LandAreaColumn
            {
                get
                {
                    return this.columnLandArea;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LandDeedReceiptDateColumn
            {
                get
                {
                    return this.columnLandDeedReceiptDate;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LandDeedNoColumn
            {
                get
                {
                    return this.columnLandDeedNo;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BuildingTypeColumn
            {
                get
                {
                    return this.columnBuildingType;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RegionCodeColumn
            {
                get
                {
                    return this.columnRegionCode;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RegionArNameColumn
            {
                get
                {
                    return this.columnRegionArName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UseTypeColumn
            {
                get
                {
                    return this.columnUseType;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn WelyahArNameColumn
            {
                get
                {
                    return this.columnWelyahArName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ArLetterColumn
            {
                get
                {
                    return this.columnArLetter;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ownersColumn
            {
                get
                {
                    return this.columnowners;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ServiceNameColumn
            {
                get
                {
                    return this.columnServiceName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BuildingComplexColumn
            {
                get
                {
                    return this.columnBuildingComplex;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UnitNoColumn
            {
                get
                {
                    return this.columnUnitNo;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AppointmentStatusColumn
            {
                get
                {
                    return this.columnAppointmentStatus;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AppointmentDateColumn
            {
                get
                {
                    return this.columnAppointmentDate;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DMManagerNotesColumn
            {
                get
                {
                    return this.columnDMManagerNotes;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DMEngineerNotesColumn
            {
                get
                {
                    return this.columnDMEngineerNotes;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ContractorNameColumn
            {
                get
                {
                    return this.columnContractorName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MLicenseStatementColumn
            {
                get
                {
                    return this.columnMLicenseStatement;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MLicenseNoColumn
            {
                get
                {
                    return this.columnMLicenseNo;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FeesRefidColumn
            {
                get
                {
                    return this.columnFeesRefid;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FeesPayOnColumn
            {
                get
                {
                    return this.columnFeesPayOn;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn InsuranceRefidColumn
            {
                get
                {
                    return this.columnInsuranceRefid;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn InsurancePayOnColumn
            {
                get
                {
                    return this.columnInsurancePayOn;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ServiceNameARColumn
            {
                get
                {
                    return this.columnServiceNameAR;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldPermitsRow this[int index]
            {
                get
                {
                    return ((BldPermitsRow)(this.Rows[index]));
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BldPermitsRowChangeEventHandler BldPermitsRowChanging;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BldPermitsRowChangeEventHandler BldPermitsRowChanged;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BldPermitsRowChangeEventHandler BldPermitsRowDeleting;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BldPermitsRowChangeEventHandler BldPermitsRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddBldPermitsRow(BldPermitsRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldPermitsRow AddBldPermitsRow(
                        string TransactNo,
                        string OwnerName,
                        int OwnerCivilId,
                        string OwnerPhoneNo,
                        int DistrictNo,
                        string ConstructedArea,
                        string NumberOfFloors,
                        int ConsultantCrNo,
                        System.DateTime RequestDate,
                        string CreatedBy,
                        System.DateTime CreatedOn,
                        string UpdatedBy,
                        System.DateTime UpdatedOn,
                        string LicenseNo,
                        int WorkflowStatus,
                        int DmEngineerNo,
                        string DmEngineerComments,
                        int ConsultantCivilId,
                        BldWelyatRow parentBldWelyatRowByFK_BldPermits_BldWelyat,
                        BldRegionsRow parentBldRegionsRowByFK_BldPermits_BldRegions,
                        BldSquareLettersRow parentBldSquareLettersRowByFK_BldPermits_BldSquareLetters,
                        BldLandUseTypesRow parentBldLandUseTypesRowByFK_BldPermits_BldLandUseTypes,
                        BldBuildingTypesRow parentBldBuildingTypesRowByFK_BldPermits_BldBuildingTypes,
                        string KrokiNO,
                        string DmFileNumber,
                        string LandDeedReceiptNo,
                        string DMLicenseComments,
                        string LandArea,
                        System.DateTime LandDeedReceiptDate,
                        string LandDeedNo,
                        string BuildingType,
                        int RegionCode,
                        string RegionArName,
                        string UseType,
                        string WelyahArName,
                        string ArLetter,
                        string owners,
                        string ServiceName,
                        string BuildingComplex,
                        string UnitNo,
                        string AppointmentStatus,
                        System.DateTime AppointmentDate,
                        string DMManagerNotes,
                        string DMEngineerNotes,
                        string ContractorName,
                        string MLicenseStatement,
                        string MLicenseNo,
                        string FeesRefid,
                        string FeesPayOn,
                        string InsuranceRefid,
                        string InsurancePayOn,
                        string ServiceNameAR)
            {
                BldPermitsRow rowBldPermitsRow = ((BldPermitsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        TransactNo,
                        OwnerName,
                        OwnerCivilId,
                        OwnerPhoneNo,
                        DistrictNo,
                        ConstructedArea,
                        NumberOfFloors,
                        ConsultantCrNo,
                        RequestDate,
                        CreatedBy,
                        CreatedOn,
                        UpdatedBy,
                        UpdatedOn,
                        LicenseNo,
                        WorkflowStatus,
                        DmEngineerNo,
                        DmEngineerComments,
                        ConsultantCivilId,
                        null,
                        null,
                        null,
                        null,
                        null,
                        KrokiNO,
                        DmFileNumber,
                        LandDeedReceiptNo,
                        DMLicenseComments,
                        LandArea,
                        LandDeedReceiptDate,
                        LandDeedNo,
                        BuildingType,
                        RegionCode,
                        RegionArName,
                        UseType,
                        WelyahArName,
                        ArLetter,
                        owners,
                        ServiceName,
                        BuildingComplex,
                        UnitNo,
                        AppointmentStatus,
                        AppointmentDate,
                        DMManagerNotes,
                        DMEngineerNotes,
                        ContractorName,
                        MLicenseStatement,
                        MLicenseNo,
                        FeesRefid,
                        FeesPayOn,
                        InsuranceRefid,
                        InsurancePayOn,
                        ServiceNameAR};
                if ((parentBldWelyatRowByFK_BldPermits_BldWelyat != null))
                {
                    columnValuesArray[19] = parentBldWelyatRowByFK_BldPermits_BldWelyat[0];
                }
                if ((parentBldRegionsRowByFK_BldPermits_BldRegions != null))
                {
                    columnValuesArray[20] = parentBldRegionsRowByFK_BldPermits_BldRegions[0];
                }
                if ((parentBldSquareLettersRowByFK_BldPermits_BldSquareLetters != null))
                {
                    columnValuesArray[21] = parentBldSquareLettersRowByFK_BldPermits_BldSquareLetters[0];
                }
                if ((parentBldLandUseTypesRowByFK_BldPermits_BldLandUseTypes != null))
                {
                    columnValuesArray[22] = parentBldLandUseTypesRowByFK_BldPermits_BldLandUseTypes[0];
                }
                if ((parentBldBuildingTypesRowByFK_BldPermits_BldBuildingTypes != null))
                {
                    columnValuesArray[23] = parentBldBuildingTypesRowByFK_BldPermits_BldBuildingTypes[0];
                }
                rowBldPermitsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBldPermitsRow);
                return rowBldPermitsRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldPermitsRow FindById(int Id)
            {
                return ((BldPermitsRow)(this.Rows.Find(new object[] {
                            Id})));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone()
            {
                BldPermitsDataTable cln = ((BldPermitsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new BldPermitsDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars()
            {
                this.columnId = base.Columns["Id"];
                this.columnTransactNo = base.Columns["TransactNo"];
                this.columnOwnerName = base.Columns["OwnerName"];
                this.columnOwnerCivilId = base.Columns["OwnerCivilId"];
                this.columnOwnerPhoneNo = base.Columns["OwnerPhoneNo"];
                this.columnDistrictNo = base.Columns["DistrictNo"];
                this.columnConstructedArea = base.Columns["ConstructedArea"];
                this.columnNumberOfFloors = base.Columns["NumberOfFloors"];
                this.columnConsultantCrNo = base.Columns["ConsultantCrNo"];
                this.columnRequestDate = base.Columns["RequestDate"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedOn = base.Columns["CreatedOn"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnUpdatedOn = base.Columns["UpdatedOn"];
                this.columnLicenseNo = base.Columns["LicenseNo"];
                this.columnWorkflowStatus = base.Columns["WorkflowStatus"];
                this.columnDmEngineerNo = base.Columns["DmEngineerNo"];
                this.columnDmEngineerComments = base.Columns["DmEngineerComments"];
                this.columnConsultantCivilId = base.Columns["ConsultantCivilId"];
                this.columnWelayahID = base.Columns["WelayahID"];
                this.columnRegionID = base.Columns["RegionID"];
                this.columnSquareLetterID = base.Columns["SquareLetterID"];
                this.columnUseTypeID = base.Columns["UseTypeID"];
                this.columnBuildingTypeID = base.Columns["BuildingTypeID"];
                this.columnKrokiNO = base.Columns["KrokiNO"];
                this.columnDmFileNumber = base.Columns["DmFileNumber"];
                this.columnLandDeedReceiptNo = base.Columns["LandDeedReceiptNo"];
                this.columnDMLicenseComments = base.Columns["DMLicenseComments"];
                this.columnLandArea = base.Columns["LandArea"];
                this.columnLandDeedReceiptDate = base.Columns["LandDeedReceiptDate"];
                this.columnLandDeedNo = base.Columns["LandDeedNo"];
                this.columnBuildingType = base.Columns["BuildingType"];
                this.columnRegionCode = base.Columns["RegionCode"];
                this.columnRegionArName = base.Columns["RegionArName"];
                this.columnUseType = base.Columns["UseType"];
                this.columnWelyahArName = base.Columns["WelyahArName"];
                this.columnArLetter = base.Columns["ArLetter"];
                this.columnowners = base.Columns["owners"];
                this.columnServiceName = base.Columns["ServiceName"];
                this.columnBuildingComplex = base.Columns["BuildingComplex"];
                this.columnUnitNo = base.Columns["UnitNo"];
                this.columnAppointmentStatus = base.Columns["AppointmentStatus"];
                this.columnAppointmentDate = base.Columns["AppointmentDate"];
                this.columnDMManagerNotes = base.Columns["DMManagerNotes"];
                this.columnDMEngineerNotes = base.Columns["DMEngineerNotes"];
                this.columnContractorName = base.Columns["ContractorName"];
                this.columnMLicenseStatement = base.Columns["MLicenseStatement"];
                this.columnMLicenseNo = base.Columns["MLicenseNo"];
                this.columnFeesRefid = base.Columns["FeesRefid"];
                this.columnFeesPayOn = base.Columns["FeesPayOn"];
                this.columnInsuranceRefid = base.Columns["InsuranceRefid"];
                this.columnInsurancePayOn = base.Columns["InsurancePayOn"];
                this.columnServiceNameAR = base.Columns["ServiceNameAR"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass()
            {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnTransactNo = new global::System.Data.DataColumn("TransactNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransactNo);
                this.columnOwnerName = new global::System.Data.DataColumn("OwnerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnerName);
                this.columnOwnerCivilId = new global::System.Data.DataColumn("OwnerCivilId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnerCivilId);
                this.columnOwnerPhoneNo = new global::System.Data.DataColumn("OwnerPhoneNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnerPhoneNo);
                this.columnDistrictNo = new global::System.Data.DataColumn("DistrictNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrictNo);
                this.columnConstructedArea = new global::System.Data.DataColumn("ConstructedArea", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConstructedArea);
                this.columnNumberOfFloors = new global::System.Data.DataColumn("NumberOfFloors", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumberOfFloors);
                this.columnConsultantCrNo = new global::System.Data.DataColumn("ConsultantCrNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsultantCrNo);
                this.columnRequestDate = new global::System.Data.DataColumn("RequestDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequestDate);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedOn = new global::System.Data.DataColumn("CreatedOn", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedOn);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnUpdatedOn = new global::System.Data.DataColumn("UpdatedOn", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedOn);
                this.columnLicenseNo = new global::System.Data.DataColumn("LicenseNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLicenseNo);
                this.columnWorkflowStatus = new global::System.Data.DataColumn("WorkflowStatus", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkflowStatus);
                this.columnDmEngineerNo = new global::System.Data.DataColumn("DmEngineerNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDmEngineerNo);
                this.columnDmEngineerComments = new global::System.Data.DataColumn("DmEngineerComments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDmEngineerComments);
                this.columnConsultantCivilId = new global::System.Data.DataColumn("ConsultantCivilId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsultantCivilId);
                this.columnWelayahID = new global::System.Data.DataColumn("WelayahID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWelayahID);
                this.columnRegionID = new global::System.Data.DataColumn("RegionID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegionID);
                this.columnSquareLetterID = new global::System.Data.DataColumn("SquareLetterID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSquareLetterID);
                this.columnUseTypeID = new global::System.Data.DataColumn("UseTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUseTypeID);
                this.columnBuildingTypeID = new global::System.Data.DataColumn("BuildingTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBuildingTypeID);
                this.columnKrokiNO = new global::System.Data.DataColumn("KrokiNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKrokiNO);
                this.columnDmFileNumber = new global::System.Data.DataColumn("DmFileNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDmFileNumber);
                this.columnLandDeedReceiptNo = new global::System.Data.DataColumn("LandDeedReceiptNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandDeedReceiptNo);
                this.columnDMLicenseComments = new global::System.Data.DataColumn("DMLicenseComments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDMLicenseComments);
                this.columnLandArea = new global::System.Data.DataColumn("LandArea", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandArea);
                this.columnLandDeedReceiptDate = new global::System.Data.DataColumn("LandDeedReceiptDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandDeedReceiptDate);
                this.columnLandDeedNo = new global::System.Data.DataColumn("LandDeedNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandDeedNo);
                this.columnBuildingType = new global::System.Data.DataColumn("BuildingType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBuildingType);
                this.columnRegionCode = new global::System.Data.DataColumn("RegionCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegionCode);
                this.columnRegionArName = new global::System.Data.DataColumn("RegionArName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegionArName);
                this.columnUseType = new global::System.Data.DataColumn("UseType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUseType);
                this.columnWelyahArName = new global::System.Data.DataColumn("WelyahArName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWelyahArName);
                this.columnArLetter = new global::System.Data.DataColumn("ArLetter", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArLetter);
                this.columnowners = new global::System.Data.DataColumn("owners", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnowners);
                this.columnServiceName = new global::System.Data.DataColumn("ServiceName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceName);
                this.columnBuildingComplex = new global::System.Data.DataColumn("BuildingComplex", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBuildingComplex);
                this.columnUnitNo = new global::System.Data.DataColumn("UnitNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitNo);
                this.columnAppointmentStatus = new global::System.Data.DataColumn("AppointmentStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAppointmentStatus);
                this.columnAppointmentDate = new global::System.Data.DataColumn("AppointmentDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAppointmentDate);
                this.columnDMManagerNotes = new global::System.Data.DataColumn("DMManagerNotes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDMManagerNotes);
                this.columnDMEngineerNotes = new global::System.Data.DataColumn("DMEngineerNotes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDMEngineerNotes);
                this.columnContractorName = new global::System.Data.DataColumn("ContractorName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractorName);
                this.columnMLicenseStatement = new global::System.Data.DataColumn("MLicenseStatement", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMLicenseStatement);
                this.columnMLicenseNo = new global::System.Data.DataColumn("MLicenseNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMLicenseNo);
                this.columnFeesRefid = new global::System.Data.DataColumn("FeesRefid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFeesRefid);
                this.columnFeesPayOn = new global::System.Data.DataColumn("FeesPayOn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFeesPayOn);
                this.columnInsuranceRefid = new global::System.Data.DataColumn("InsuranceRefid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsuranceRefid);
                this.columnInsurancePayOn = new global::System.Data.DataColumn("InsurancePayOn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsurancePayOn);
                this.columnServiceNameAR = new global::System.Data.DataColumn("ServiceNameAR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceNameAR);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AutoIncrement = true;
                this.columnId.AutoIncrementSeed = -1;
                this.columnId.AutoIncrementStep = -1;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
                this.columnTransactNo.AllowDBNull = false;
                this.columnTransactNo.MaxLength = 400;
                this.columnOwnerName.MaxLength = 250;
                this.columnOwnerPhoneNo.MaxLength = 100;
                this.columnConstructedArea.MaxLength = 50;
                this.columnNumberOfFloors.MaxLength = 50;
                this.columnConsultantCrNo.AllowDBNull = false;
                this.columnRequestDate.AllowDBNull = false;
                this.columnCreatedBy.MaxLength = 150;
                this.columnUpdatedBy.MaxLength = 150;
                this.columnLicenseNo.MaxLength = 100;
                this.columnDmEngineerComments.MaxLength = 500;
                this.columnKrokiNO.MaxLength = 50;
                this.columnDmFileNumber.MaxLength = 50;
                this.columnLandDeedReceiptNo.MaxLength = 50;
                this.columnDMLicenseComments.MaxLength = 250;
                this.columnLandArea.MaxLength = 50;
                this.columnLandDeedNo.MaxLength = 50;
                this.columnBuildingType.MaxLength = 50;
                this.columnRegionCode.AllowDBNull = false;
                this.columnRegionArName.AllowDBNull = false;
                this.columnRegionArName.MaxLength = 50;
                this.columnUseType.MaxLength = 50;
                this.columnWelyahArName.AllowDBNull = false;
                this.columnWelyahArName.MaxLength = 50;
                this.columnArLetter.MaxLength = 10;
                this.columnowners.ReadOnly = true;
                this.columnowners.MaxLength = 2147483647;
                this.columnServiceName.MaxLength = 250;
                this.columnBuildingComplex.MaxLength = 50;
                this.columnUnitNo.MaxLength = 50;
                this.columnAppointmentStatus.MaxLength = 250;
                this.columnDMManagerNotes.MaxLength = 250;
                this.columnDMEngineerNotes.MaxLength = 250;
                this.columnContractorName.MaxLength = 50;
                this.columnMLicenseStatement.MaxLength = 250;
                this.columnMLicenseNo.MaxLength = 100;
                this.columnFeesRefid.ReadOnly = true;
                this.columnFeesRefid.MaxLength = 200;
                this.columnFeesPayOn.ReadOnly = true;
                this.columnFeesPayOn.MaxLength = 20;
                this.columnInsuranceRefid.ReadOnly = true;
                this.columnInsuranceRefid.MaxLength = 200;
                this.columnInsurancePayOn.ReadOnly = true;
                this.columnInsurancePayOn.MaxLength = 20;
                this.columnServiceNameAR.AllowDBNull = false;
                this.columnServiceNameAR.MaxLength = 100;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldPermitsRow NewBldPermitsRow()
            {
                return ((BldPermitsRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new BldPermitsRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType()
            {
                return typeof(BldPermitsRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.BldPermitsRowChanged != null))
                {
                    this.BldPermitsRowChanged(this, new BldPermitsRowChangeEvent(((BldPermitsRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.BldPermitsRowChanging != null))
                {
                    this.BldPermitsRowChanging(this, new BldPermitsRowChangeEvent(((BldPermitsRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.BldPermitsRowDeleted != null))
                {
                    this.BldPermitsRowDeleted(this, new BldPermitsRowChangeEvent(((BldPermitsRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.BldPermitsRowDeleting != null))
                {
                    this.BldPermitsRowDeleting(this, new BldPermitsRowChangeEvent(((BldPermitsRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveBldPermitsRow(BldPermitsRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InternalEngineeringDataSet ds = new InternalEngineeringDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BldPermitsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte()));)
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BldRegionsDataTable : global::System.Data.TypedTableBase<BldRegionsRow>
        {

            private global::System.Data.DataColumn columnRegionID;

            private global::System.Data.DataColumn columnRegionCode;

            private global::System.Data.DataColumn columnRegionEnName;

            private global::System.Data.DataColumn columnRegionArName;

            private global::System.Data.DataColumn columnWelyahID;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldRegionsDataTable()
            {
                this.TableName = "BldRegions";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal BldRegionsDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected BldRegionsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RegionIDColumn
            {
                get
                {
                    return this.columnRegionID;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RegionCodeColumn
            {
                get
                {
                    return this.columnRegionCode;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RegionEnNameColumn
            {
                get
                {
                    return this.columnRegionEnName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RegionArNameColumn
            {
                get
                {
                    return this.columnRegionArName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn WelyahIDColumn
            {
                get
                {
                    return this.columnWelyahID;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldRegionsRow this[int index]
            {
                get
                {
                    return ((BldRegionsRow)(this.Rows[index]));
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BldRegionsRowChangeEventHandler BldRegionsRowChanging;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BldRegionsRowChangeEventHandler BldRegionsRowChanged;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BldRegionsRowChangeEventHandler BldRegionsRowDeleting;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BldRegionsRowChangeEventHandler BldRegionsRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddBldRegionsRow(BldRegionsRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldRegionsRow AddBldRegionsRow(int RegionCode, string RegionEnName, string RegionArName, BldWelyatRow parentBldWelyatRowByFK_BldRegions_BldWelyat)
            {
                BldRegionsRow rowBldRegionsRow = ((BldRegionsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        RegionCode,
                        RegionEnName,
                        RegionArName,
                        null};
                if ((parentBldWelyatRowByFK_BldRegions_BldWelyat != null))
                {
                    columnValuesArray[4] = parentBldWelyatRowByFK_BldRegions_BldWelyat[0];
                }
                rowBldRegionsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBldRegionsRow);
                return rowBldRegionsRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldRegionsRow FindByRegionID(int RegionID)
            {
                return ((BldRegionsRow)(this.Rows.Find(new object[] {
                            RegionID})));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone()
            {
                BldRegionsDataTable cln = ((BldRegionsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new BldRegionsDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars()
            {
                this.columnRegionID = base.Columns["RegionID"];
                this.columnRegionCode = base.Columns["RegionCode"];
                this.columnRegionEnName = base.Columns["RegionEnName"];
                this.columnRegionArName = base.Columns["RegionArName"];
                this.columnWelyahID = base.Columns["WelyahID"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass()
            {
                this.columnRegionID = new global::System.Data.DataColumn("RegionID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegionID);
                this.columnRegionCode = new global::System.Data.DataColumn("RegionCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegionCode);
                this.columnRegionEnName = new global::System.Data.DataColumn("RegionEnName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegionEnName);
                this.columnRegionArName = new global::System.Data.DataColumn("RegionArName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegionArName);
                this.columnWelyahID = new global::System.Data.DataColumn("WelyahID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWelyahID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRegionID}, true));
                this.columnRegionID.AutoIncrement = true;
                this.columnRegionID.AutoIncrementSeed = -1;
                this.columnRegionID.AutoIncrementStep = -1;
                this.columnRegionID.AllowDBNull = false;
                this.columnRegionID.ReadOnly = true;
                this.columnRegionID.Unique = true;
                this.columnRegionCode.AllowDBNull = false;
                this.columnRegionEnName.MaxLength = 50;
                this.columnRegionArName.AllowDBNull = false;
                this.columnRegionArName.MaxLength = 50;
                this.columnWelyahID.AllowDBNull = false;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldRegionsRow NewBldRegionsRow()
            {
                return ((BldRegionsRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new BldRegionsRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType()
            {
                return typeof(BldRegionsRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.BldRegionsRowChanged != null))
                {
                    this.BldRegionsRowChanged(this, new BldRegionsRowChangeEvent(((BldRegionsRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.BldRegionsRowChanging != null))
                {
                    this.BldRegionsRowChanging(this, new BldRegionsRowChangeEvent(((BldRegionsRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.BldRegionsRowDeleted != null))
                {
                    this.BldRegionsRowDeleted(this, new BldRegionsRowChangeEvent(((BldRegionsRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.BldRegionsRowDeleting != null))
                {
                    this.BldRegionsRowDeleting(this, new BldRegionsRowChangeEvent(((BldRegionsRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveBldRegionsRow(BldRegionsRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InternalEngineeringDataSet ds = new InternalEngineeringDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BldRegionsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte()));)
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BldSquareLettersDataTable : global::System.Data.TypedTableBase<BldSquareLettersRow>
        {

            private global::System.Data.DataColumn columnID;

            private global::System.Data.DataColumn columnArLetter;

            private global::System.Data.DataColumn columnEnLetter;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldSquareLettersDataTable()
            {
                this.TableName = "BldSquareLetters";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal BldSquareLettersDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected BldSquareLettersDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IDColumn
            {
                get
                {
                    return this.columnID;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ArLetterColumn
            {
                get
                {
                    return this.columnArLetter;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EnLetterColumn
            {
                get
                {
                    return this.columnEnLetter;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldSquareLettersRow this[int index]
            {
                get
                {
                    return ((BldSquareLettersRow)(this.Rows[index]));
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BldSquareLettersRowChangeEventHandler BldSquareLettersRowChanging;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BldSquareLettersRowChangeEventHandler BldSquareLettersRowChanged;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BldSquareLettersRowChangeEventHandler BldSquareLettersRowDeleting;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BldSquareLettersRowChangeEventHandler BldSquareLettersRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddBldSquareLettersRow(BldSquareLettersRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldSquareLettersRow AddBldSquareLettersRow(string ArLetter, string EnLetter)
            {
                BldSquareLettersRow rowBldSquareLettersRow = ((BldSquareLettersRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ArLetter,
                        EnLetter};
                rowBldSquareLettersRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBldSquareLettersRow);
                return rowBldSquareLettersRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldSquareLettersRow FindByID(int ID)
            {
                return ((BldSquareLettersRow)(this.Rows.Find(new object[] {
                            ID})));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone()
            {
                BldSquareLettersDataTable cln = ((BldSquareLettersDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new BldSquareLettersDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars()
            {
                this.columnID = base.Columns["ID"];
                this.columnArLetter = base.Columns["ArLetter"];
                this.columnEnLetter = base.Columns["EnLetter"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass()
            {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnArLetter = new global::System.Data.DataColumn("ArLetter", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArLetter);
                this.columnEnLetter = new global::System.Data.DataColumn("EnLetter", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnLetter);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnArLetter.MaxLength = 10;
                this.columnEnLetter.MaxLength = 5;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldSquareLettersRow NewBldSquareLettersRow()
            {
                return ((BldSquareLettersRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new BldSquareLettersRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType()
            {
                return typeof(BldSquareLettersRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.BldSquareLettersRowChanged != null))
                {
                    this.BldSquareLettersRowChanged(this, new BldSquareLettersRowChangeEvent(((BldSquareLettersRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.BldSquareLettersRowChanging != null))
                {
                    this.BldSquareLettersRowChanging(this, new BldSquareLettersRowChangeEvent(((BldSquareLettersRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.BldSquareLettersRowDeleted != null))
                {
                    this.BldSquareLettersRowDeleted(this, new BldSquareLettersRowChangeEvent(((BldSquareLettersRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.BldSquareLettersRowDeleting != null))
                {
                    this.BldSquareLettersRowDeleting(this, new BldSquareLettersRowChangeEvent(((BldSquareLettersRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveBldSquareLettersRow(BldSquareLettersRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InternalEngineeringDataSet ds = new InternalEngineeringDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BldSquareLettersDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte()));)
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BldWelyatDataTable : global::System.Data.TypedTableBase<BldWelyatRow>
        {

            private global::System.Data.DataColumn columnWelyahID;

            private global::System.Data.DataColumn columnWelyahCode;

            private global::System.Data.DataColumn columnWelyahEnName;

            private global::System.Data.DataColumn columnWelyahArName;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldWelyatDataTable()
            {
                this.TableName = "BldWelyat";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal BldWelyatDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected BldWelyatDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn WelyahIDColumn
            {
                get
                {
                    return this.columnWelyahID;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn WelyahCodeColumn
            {
                get
                {
                    return this.columnWelyahCode;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn WelyahEnNameColumn
            {
                get
                {
                    return this.columnWelyahEnName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn WelyahArNameColumn
            {
                get
                {
                    return this.columnWelyahArName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldWelyatRow this[int index]
            {
                get
                {
                    return ((BldWelyatRow)(this.Rows[index]));
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BldWelyatRowChangeEventHandler BldWelyatRowChanging;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BldWelyatRowChangeEventHandler BldWelyatRowChanged;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BldWelyatRowChangeEventHandler BldWelyatRowDeleting;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BldWelyatRowChangeEventHandler BldWelyatRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddBldWelyatRow(BldWelyatRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldWelyatRow AddBldWelyatRow(int WelyahCode, string WelyahEnName, string WelyahArName)
            {
                BldWelyatRow rowBldWelyatRow = ((BldWelyatRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        WelyahCode,
                        WelyahEnName,
                        WelyahArName};
                rowBldWelyatRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBldWelyatRow);
                return rowBldWelyatRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldWelyatRow FindByWelyahID(int WelyahID)
            {
                return ((BldWelyatRow)(this.Rows.Find(new object[] {
                            WelyahID})));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone()
            {
                BldWelyatDataTable cln = ((BldWelyatDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new BldWelyatDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars()
            {
                this.columnWelyahID = base.Columns["WelyahID"];
                this.columnWelyahCode = base.Columns["WelyahCode"];
                this.columnWelyahEnName = base.Columns["WelyahEnName"];
                this.columnWelyahArName = base.Columns["WelyahArName"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass()
            {
                this.columnWelyahID = new global::System.Data.DataColumn("WelyahID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWelyahID);
                this.columnWelyahCode = new global::System.Data.DataColumn("WelyahCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWelyahCode);
                this.columnWelyahEnName = new global::System.Data.DataColumn("WelyahEnName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWelyahEnName);
                this.columnWelyahArName = new global::System.Data.DataColumn("WelyahArName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWelyahArName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnWelyahID}, true));
                this.columnWelyahID.AutoIncrement = true;
                this.columnWelyahID.AutoIncrementSeed = -1;
                this.columnWelyahID.AutoIncrementStep = -1;
                this.columnWelyahID.AllowDBNull = false;
                this.columnWelyahID.ReadOnly = true;
                this.columnWelyahID.Unique = true;
                this.columnWelyahCode.AllowDBNull = false;
                this.columnWelyahEnName.AllowDBNull = false;
                this.columnWelyahEnName.MaxLength = 50;
                this.columnWelyahArName.AllowDBNull = false;
                this.columnWelyahArName.MaxLength = 50;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldWelyatRow NewBldWelyatRow()
            {
                return ((BldWelyatRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new BldWelyatRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType()
            {
                return typeof(BldWelyatRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.BldWelyatRowChanged != null))
                {
                    this.BldWelyatRowChanged(this, new BldWelyatRowChangeEvent(((BldWelyatRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.BldWelyatRowChanging != null))
                {
                    this.BldWelyatRowChanging(this, new BldWelyatRowChangeEvent(((BldWelyatRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.BldWelyatRowDeleted != null))
                {
                    this.BldWelyatRowDeleted(this, new BldWelyatRowChangeEvent(((BldWelyatRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.BldWelyatRowDeleting != null))
                {
                    this.BldWelyatRowDeleting(this, new BldWelyatRowChangeEvent(((BldWelyatRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveBldWelyatRow(BldWelyatRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InternalEngineeringDataSet ds = new InternalEngineeringDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BldWelyatDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte()));)
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BldPaymentDataTable : global::System.Data.TypedTableBase<BldPaymentRow>
        {

            private global::System.Data.DataColumn columnPaymentID;

            private global::System.Data.DataColumn columnBldPermitId;

            private global::System.Data.DataColumn columnPaymentTotalAmount;

            private global::System.Data.DataColumn columnTokenID;

            private global::System.Data.DataColumn columnBankResponseID;

            private global::System.Data.DataColumn columnPaymentDate;

            private global::System.Data.DataColumn columnFeesDate;

            private global::System.Data.DataColumn columnPaymentType;

            private global::System.Data.DataColumn columnTransactionid;

            private global::System.Data.DataColumn columnPaymentrequestid;

            private global::System.Data.DataColumn columnReferenceid;

            private global::System.Data.DataColumn columnBankpaymentid;

            private global::System.Data.DataColumn columnPaymentStatus;

            private global::System.Data.DataColumn columnSupervisionID;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldPaymentDataTable()
            {
                this.TableName = "BldPayment";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal BldPaymentDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected BldPaymentDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PaymentIDColumn
            {
                get
                {
                    return this.columnPaymentID;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BldPermitIdColumn
            {
                get
                {
                    return this.columnBldPermitId;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PaymentTotalAmountColumn
            {
                get
                {
                    return this.columnPaymentTotalAmount;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TokenIDColumn
            {
                get
                {
                    return this.columnTokenID;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BankResponseIDColumn
            {
                get
                {
                    return this.columnBankResponseID;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PaymentDateColumn
            {
                get
                {
                    return this.columnPaymentDate;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FeesDateColumn
            {
                get
                {
                    return this.columnFeesDate;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PaymentTypeColumn
            {
                get
                {
                    return this.columnPaymentType;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TransactionidColumn
            {
                get
                {
                    return this.columnTransactionid;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PaymentrequestidColumn
            {
                get
                {
                    return this.columnPaymentrequestid;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ReferenceidColumn
            {
                get
                {
                    return this.columnReferenceid;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BankpaymentidColumn
            {
                get
                {
                    return this.columnBankpaymentid;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PaymentStatusColumn
            {
                get
                {
                    return this.columnPaymentStatus;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SupervisionIDColumn
            {
                get
                {
                    return this.columnSupervisionID;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldPaymentRow this[int index]
            {
                get
                {
                    return ((BldPaymentRow)(this.Rows[index]));
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BldPaymentRowChangeEventHandler BldPaymentRowChanging;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BldPaymentRowChangeEventHandler BldPaymentRowChanged;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BldPaymentRowChangeEventHandler BldPaymentRowDeleting;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BldPaymentRowChangeEventHandler BldPaymentRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddBldPaymentRow(BldPaymentRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldPaymentRow AddBldPaymentRow(BldPermitsRow parentBldPermitsRowByFK_BldPayment_BldPermits, decimal PaymentTotalAmount, string TokenID, int BankResponseID, System.DateTime PaymentDate, System.DateTime FeesDate, int PaymentType, string Transactionid, int Paymentrequestid, string Referenceid, string Bankpaymentid, int PaymentStatus, int SupervisionID)
            {
                BldPaymentRow rowBldPaymentRow = ((BldPaymentRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        PaymentTotalAmount,
                        TokenID,
                        BankResponseID,
                        PaymentDate,
                        FeesDate,
                        PaymentType,
                        Transactionid,
                        Paymentrequestid,
                        Referenceid,
                        Bankpaymentid,
                        PaymentStatus,
                        SupervisionID};
                if ((parentBldPermitsRowByFK_BldPayment_BldPermits != null))
                {
                    columnValuesArray[1] = parentBldPermitsRowByFK_BldPayment_BldPermits[0];
                }
                rowBldPaymentRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBldPaymentRow);
                return rowBldPaymentRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldPaymentRow FindByPaymentID(int PaymentID)
            {
                return ((BldPaymentRow)(this.Rows.Find(new object[] {
                            PaymentID})));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone()
            {
                BldPaymentDataTable cln = ((BldPaymentDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new BldPaymentDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars()
            {
                this.columnPaymentID = base.Columns["PaymentID"];
                this.columnBldPermitId = base.Columns["BldPermitId"];
                this.columnPaymentTotalAmount = base.Columns["PaymentTotalAmount"];
                this.columnTokenID = base.Columns["TokenID"];
                this.columnBankResponseID = base.Columns["BankResponseID"];
                this.columnPaymentDate = base.Columns["PaymentDate"];
                this.columnFeesDate = base.Columns["FeesDate"];
                this.columnPaymentType = base.Columns["PaymentType"];
                this.columnTransactionid = base.Columns["Transactionid"];
                this.columnPaymentrequestid = base.Columns["Paymentrequestid"];
                this.columnReferenceid = base.Columns["Referenceid"];
                this.columnBankpaymentid = base.Columns["Bankpaymentid"];
                this.columnPaymentStatus = base.Columns["PaymentStatus"];
                this.columnSupervisionID = base.Columns["SupervisionID"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass()
            {
                this.columnPaymentID = new global::System.Data.DataColumn("PaymentID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentID);
                this.columnBldPermitId = new global::System.Data.DataColumn("BldPermitId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBldPermitId);
                this.columnPaymentTotalAmount = new global::System.Data.DataColumn("PaymentTotalAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentTotalAmount);
                this.columnTokenID = new global::System.Data.DataColumn("TokenID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTokenID);
                this.columnBankResponseID = new global::System.Data.DataColumn("BankResponseID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankResponseID);
                this.columnPaymentDate = new global::System.Data.DataColumn("PaymentDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentDate);
                this.columnFeesDate = new global::System.Data.DataColumn("FeesDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFeesDate);
                this.columnPaymentType = new global::System.Data.DataColumn("PaymentType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentType);
                this.columnTransactionid = new global::System.Data.DataColumn("Transactionid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransactionid);
                this.columnPaymentrequestid = new global::System.Data.DataColumn("Paymentrequestid", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentrequestid);
                this.columnReferenceid = new global::System.Data.DataColumn("Referenceid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReferenceid);
                this.columnBankpaymentid = new global::System.Data.DataColumn("Bankpaymentid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankpaymentid);
                this.columnPaymentStatus = new global::System.Data.DataColumn("PaymentStatus", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentStatus);
                this.columnSupervisionID = new global::System.Data.DataColumn("SupervisionID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupervisionID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPaymentID}, true));
                this.columnPaymentID.AutoIncrement = true;
                this.columnPaymentID.AutoIncrementSeed = -1;
                this.columnPaymentID.AutoIncrementStep = -1;
                this.columnPaymentID.AllowDBNull = false;
                this.columnPaymentID.ReadOnly = true;
                this.columnPaymentID.Unique = true;
                this.columnTokenID.MaxLength = 150;
                this.columnTransactionid.MaxLength = 200;
                this.columnReferenceid.MaxLength = 200;
                this.columnBankpaymentid.MaxLength = 200;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldPaymentRow NewBldPaymentRow()
            {
                return ((BldPaymentRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new BldPaymentRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType()
            {
                return typeof(BldPaymentRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.BldPaymentRowChanged != null))
                {
                    this.BldPaymentRowChanged(this, new BldPaymentRowChangeEvent(((BldPaymentRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.BldPaymentRowChanging != null))
                {
                    this.BldPaymentRowChanging(this, new BldPaymentRowChangeEvent(((BldPaymentRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.BldPaymentRowDeleted != null))
                {
                    this.BldPaymentRowDeleted(this, new BldPaymentRowChangeEvent(((BldPaymentRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.BldPaymentRowDeleting != null))
                {
                    this.BldPaymentRowDeleting(this, new BldPaymentRowChangeEvent(((BldPaymentRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveBldPaymentRow(BldPaymentRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InternalEngineeringDataSet ds = new InternalEngineeringDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BldPaymentDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte()));)
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BldBuildingTypesDataTable : global::System.Data.TypedTableBase<BldBuildingTypesRow>
        {

            private global::System.Data.DataColumn columnID;

            private global::System.Data.DataColumn columnBuildingType;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldBuildingTypesDataTable()
            {
                this.TableName = "BldBuildingTypes";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal BldBuildingTypesDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected BldBuildingTypesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IDColumn
            {
                get
                {
                    return this.columnID;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BuildingTypeColumn
            {
                get
                {
                    return this.columnBuildingType;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldBuildingTypesRow this[int index]
            {
                get
                {
                    return ((BldBuildingTypesRow)(this.Rows[index]));
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BldBuildingTypesRowChangeEventHandler BldBuildingTypesRowChanging;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BldBuildingTypesRowChangeEventHandler BldBuildingTypesRowChanged;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BldBuildingTypesRowChangeEventHandler BldBuildingTypesRowDeleting;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BldBuildingTypesRowChangeEventHandler BldBuildingTypesRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddBldBuildingTypesRow(BldBuildingTypesRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldBuildingTypesRow AddBldBuildingTypesRow(string BuildingType)
            {
                BldBuildingTypesRow rowBldBuildingTypesRow = ((BldBuildingTypesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        BuildingType};
                rowBldBuildingTypesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBldBuildingTypesRow);
                return rowBldBuildingTypesRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldBuildingTypesRow FindByID(int ID)
            {
                return ((BldBuildingTypesRow)(this.Rows.Find(new object[] {
                            ID})));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone()
            {
                BldBuildingTypesDataTable cln = ((BldBuildingTypesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new BldBuildingTypesDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars()
            {
                this.columnID = base.Columns["ID"];
                this.columnBuildingType = base.Columns["BuildingType"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass()
            {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnBuildingType = new global::System.Data.DataColumn("BuildingType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBuildingType);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnBuildingType.MaxLength = 50;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldBuildingTypesRow NewBldBuildingTypesRow()
            {
                return ((BldBuildingTypesRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new BldBuildingTypesRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType()
            {
                return typeof(BldBuildingTypesRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.BldBuildingTypesRowChanged != null))
                {
                    this.BldBuildingTypesRowChanged(this, new BldBuildingTypesRowChangeEvent(((BldBuildingTypesRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.BldBuildingTypesRowChanging != null))
                {
                    this.BldBuildingTypesRowChanging(this, new BldBuildingTypesRowChangeEvent(((BldBuildingTypesRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.BldBuildingTypesRowDeleted != null))
                {
                    this.BldBuildingTypesRowDeleted(this, new BldBuildingTypesRowChangeEvent(((BldBuildingTypesRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.BldBuildingTypesRowDeleting != null))
                {
                    this.BldBuildingTypesRowDeleting(this, new BldBuildingTypesRowChangeEvent(((BldBuildingTypesRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveBldBuildingTypesRow(BldBuildingTypesRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InternalEngineeringDataSet ds = new InternalEngineeringDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BldBuildingTypesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte()));)
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BldLandUseTypesDataTable : global::System.Data.TypedTableBase<BldLandUseTypesRow>
        {

            private global::System.Data.DataColumn columnID;

            private global::System.Data.DataColumn columnUseType;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldLandUseTypesDataTable()
            {
                this.TableName = "BldLandUseTypes";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal BldLandUseTypesDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected BldLandUseTypesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IDColumn
            {
                get
                {
                    return this.columnID;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UseTypeColumn
            {
                get
                {
                    return this.columnUseType;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldLandUseTypesRow this[int index]
            {
                get
                {
                    return ((BldLandUseTypesRow)(this.Rows[index]));
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BldLandUseTypesRowChangeEventHandler BldLandUseTypesRowChanging;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BldLandUseTypesRowChangeEventHandler BldLandUseTypesRowChanged;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BldLandUseTypesRowChangeEventHandler BldLandUseTypesRowDeleting;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BldLandUseTypesRowChangeEventHandler BldLandUseTypesRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddBldLandUseTypesRow(BldLandUseTypesRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldLandUseTypesRow AddBldLandUseTypesRow(string UseType)
            {
                BldLandUseTypesRow rowBldLandUseTypesRow = ((BldLandUseTypesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        UseType};
                rowBldLandUseTypesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBldLandUseTypesRow);
                return rowBldLandUseTypesRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldLandUseTypesRow FindByID(int ID)
            {
                return ((BldLandUseTypesRow)(this.Rows.Find(new object[] {
                            ID})));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone()
            {
                BldLandUseTypesDataTable cln = ((BldLandUseTypesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new BldLandUseTypesDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars()
            {
                this.columnID = base.Columns["ID"];
                this.columnUseType = base.Columns["UseType"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass()
            {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnUseType = new global::System.Data.DataColumn("UseType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUseType);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnUseType.MaxLength = 50;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldLandUseTypesRow NewBldLandUseTypesRow()
            {
                return ((BldLandUseTypesRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new BldLandUseTypesRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType()
            {
                return typeof(BldLandUseTypesRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.BldLandUseTypesRowChanged != null))
                {
                    this.BldLandUseTypesRowChanged(this, new BldLandUseTypesRowChangeEvent(((BldLandUseTypesRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.BldLandUseTypesRowChanging != null))
                {
                    this.BldLandUseTypesRowChanging(this, new BldLandUseTypesRowChangeEvent(((BldLandUseTypesRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.BldLandUseTypesRowDeleted != null))
                {
                    this.BldLandUseTypesRowDeleted(this, new BldLandUseTypesRowChangeEvent(((BldLandUseTypesRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.BldLandUseTypesRowDeleting != null))
                {
                    this.BldLandUseTypesRowDeleting(this, new BldLandUseTypesRowChangeEvent(((BldLandUseTypesRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveBldLandUseTypesRow(BldLandUseTypesRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InternalEngineeringDataSet ds = new InternalEngineeringDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BldLandUseTypesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte()));)
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BldSupervisionServicesDataTable : global::System.Data.TypedTableBase<BldSupervisionServicesRow>
        {

            private global::System.Data.DataColumn columnID;

            private global::System.Data.DataColumn columnKrokiNO;

            private global::System.Data.DataColumn columnLicenseNo;

            private global::System.Data.DataColumn columnDmFileNumber;

            private global::System.Data.DataColumn columnDmInspectorComments;

            private global::System.Data.DataColumn columnConsultantNotes;

            private global::System.Data.DataColumn columnOwnerNotes;

            private global::System.Data.DataColumn columnConsultantCrNo;

            private global::System.Data.DataColumn columnNumberOfFloors;

            private global::System.Data.DataColumn columnConstructedArea;

            private global::System.Data.DataColumn columnDMLicenseComments;

            private global::System.Data.DataColumn columnLandArea;

            private global::System.Data.DataColumn columnLandDeedReceiptDate;

            private global::System.Data.DataColumn columnLandDeedNo;

            private global::System.Data.DataColumn columnFileNumber;

            private global::System.Data.DataColumn columnWelyahArName;

            private global::System.Data.DataColumn columnServiceNameAR;

            private global::System.Data.DataColumn columnServiceNameEn;

            private global::System.Data.DataColumn columnArLetter;

            private global::System.Data.DataColumn columnBuildingType;

            private global::System.Data.DataColumn columnUseType;

            private global::System.Data.DataColumn columnRegionArName;

            private global::System.Data.DataColumn columnRegionEnName;

            private global::System.Data.DataColumn columnRegionCode;

            private global::System.Data.DataColumn columnDistrictNo;

            private global::System.Data.DataColumn columnBldPermitID;

            private global::System.Data.DataColumn columnContractor_Name;

            private global::System.Data.DataColumn columnContractor_CRNumber;

            private global::System.Data.DataColumn columnContractor_CR_Number;

            private global::System.Data.DataColumn columnReferenceid;

            private global::System.Data.DataColumn columnPaymentType;

            private global::System.Data.DataColumn columnPaymentID;

            private global::System.Data.DataColumn columnConsultantCivilId;

            private global::System.Data.DataColumn columnCompanyName;

            private global::System.Data.DataColumn columnPaymentDate;

            private global::System.Data.DataColumn columnSupervisionLicenseNo;

            private global::System.Data.DataColumn columnBuildingComplex;

            private global::System.Data.DataColumn columnRequestDate;

            private global::System.Data.DataColumn columnCreatedBy;

            private global::System.Data.DataColumn columnCreatedOn;

            private global::System.Data.DataColumn columnUpdatedBy;

            private global::System.Data.DataColumn columnUpdatedOn;

            private global::System.Data.DataColumn columnUnitNo;

            private global::System.Data.DataColumn columnowners;

            private global::System.Data.DataColumn columnDMSupervisionStatment;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldSupervisionServicesDataTable()
            {
                this.TableName = "BldSupervisionServices";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal BldSupervisionServicesDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected BldSupervisionServicesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IDColumn
            {
                get
                {
                    return this.columnID;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KrokiNOColumn
            {
                get
                {
                    return this.columnKrokiNO;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LicenseNoColumn
            {
                get
                {
                    return this.columnLicenseNo;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DmFileNumberColumn
            {
                get
                {
                    return this.columnDmFileNumber;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DmInspectorCommentsColumn
            {
                get
                {
                    return this.columnDmInspectorComments;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ConsultantNotesColumn
            {
                get
                {
                    return this.columnConsultantNotes;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OwnerNotesColumn
            {
                get
                {
                    return this.columnOwnerNotes;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ConsultantCrNoColumn
            {
                get
                {
                    return this.columnConsultantCrNo;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NumberOfFloorsColumn
            {
                get
                {
                    return this.columnNumberOfFloors;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ConstructedAreaColumn
            {
                get
                {
                    return this.columnConstructedArea;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DMLicenseCommentsColumn
            {
                get
                {
                    return this.columnDMLicenseComments;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LandAreaColumn
            {
                get
                {
                    return this.columnLandArea;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LandDeedReceiptDateColumn
            {
                get
                {
                    return this.columnLandDeedReceiptDate;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LandDeedNoColumn
            {
                get
                {
                    return this.columnLandDeedNo;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FileNumberColumn
            {
                get
                {
                    return this.columnFileNumber;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn WelyahArNameColumn
            {
                get
                {
                    return this.columnWelyahArName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ServiceNameARColumn
            {
                get
                {
                    return this.columnServiceNameAR;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ServiceNameEnColumn
            {
                get
                {
                    return this.columnServiceNameEn;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ArLetterColumn
            {
                get
                {
                    return this.columnArLetter;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BuildingTypeColumn
            {
                get
                {
                    return this.columnBuildingType;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UseTypeColumn
            {
                get
                {
                    return this.columnUseType;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RegionArNameColumn
            {
                get
                {
                    return this.columnRegionArName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RegionEnNameColumn
            {
                get
                {
                    return this.columnRegionEnName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RegionCodeColumn
            {
                get
                {
                    return this.columnRegionCode;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DistrictNoColumn
            {
                get
                {
                    return this.columnDistrictNo;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BldPermitIDColumn
            {
                get
                {
                    return this.columnBldPermitID;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Contractor_NameColumn
            {
                get
                {
                    return this.columnContractor_Name;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Contractor_CRNumberColumn
            {
                get
                {
                    return this.columnContractor_CRNumber;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Contractor_CR_NumberColumn
            {
                get
                {
                    return this.columnContractor_CR_Number;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ReferenceidColumn
            {
                get
                {
                    return this.columnReferenceid;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PaymentTypeColumn
            {
                get
                {
                    return this.columnPaymentType;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PaymentIDColumn
            {
                get
                {
                    return this.columnPaymentID;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ConsultantCivilIdColumn
            {
                get
                {
                    return this.columnConsultantCivilId;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CompanyNameColumn
            {
                get
                {
                    return this.columnCompanyName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PaymentDateColumn
            {
                get
                {
                    return this.columnPaymentDate;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SupervisionLicenseNoColumn
            {
                get
                {
                    return this.columnSupervisionLicenseNo;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BuildingComplexColumn
            {
                get
                {
                    return this.columnBuildingComplex;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RequestDateColumn
            {
                get
                {
                    return this.columnRequestDate;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CreatedByColumn
            {
                get
                {
                    return this.columnCreatedBy;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CreatedOnColumn
            {
                get
                {
                    return this.columnCreatedOn;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UpdatedByColumn
            {
                get
                {
                    return this.columnUpdatedBy;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UpdatedOnColumn
            {
                get
                {
                    return this.columnUpdatedOn;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UnitNoColumn
            {
                get
                {
                    return this.columnUnitNo;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ownersColumn
            {
                get
                {
                    return this.columnowners;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DMSupervisionStatmentColumn
            {
                get
                {
                    return this.columnDMSupervisionStatment;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldSupervisionServicesRow this[int index]
            {
                get
                {
                    return ((BldSupervisionServicesRow)(this.Rows[index]));
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BldSupervisionServicesRowChangeEventHandler BldSupervisionServicesRowChanging;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BldSupervisionServicesRowChangeEventHandler BldSupervisionServicesRowChanged;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BldSupervisionServicesRowChangeEventHandler BldSupervisionServicesRowDeleting;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BldSupervisionServicesRowChangeEventHandler BldSupervisionServicesRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddBldSupervisionServicesRow(BldSupervisionServicesRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldSupervisionServicesRow AddBldSupervisionServicesRow(
                        string KrokiNO,
                        string LicenseNo,
                        string DmFileNumber,
                        string DmInspectorComments,
                        string ConsultantNotes,
                        string OwnerNotes,
                        int ConsultantCrNo,
                        string NumberOfFloors,
                        string ConstructedArea,
                        string DMLicenseComments,
                        string LandArea,
                        System.DateTime LandDeedReceiptDate,
                        string LandDeedNo,
                        string FileNumber,
                        string WelyahArName,
                        string ServiceNameAR,
                        string ServiceNameEn,
                        string ArLetter,
                        string BuildingType,
                        string UseType,
                        string RegionArName,
                        string RegionEnName,
                        int RegionCode,
                        int DistrictNo,
                        int BldPermitID,
                        string Contractor_Name,
                        int Contractor_CRNumber,
                        int Contractor_CR_Number,
                        string Referenceid,
                        int PaymentType,
                        int PaymentID,
                        int ConsultantCivilId,
                        string CompanyName,
                        System.DateTime PaymentDate,
                        string SupervisionLicenseNo,
                        string BuildingComplex,
                        System.DateTime RequestDate,
                        string CreatedBy,
                        System.DateTime CreatedOn,
                        string UpdatedBy,
                        System.DateTime UpdatedOn,
                        string UnitNo,
                        string owners,
                        string DMSupervisionStatment)
            {
                BldSupervisionServicesRow rowBldSupervisionServicesRow = ((BldSupervisionServicesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        KrokiNO,
                        LicenseNo,
                        DmFileNumber,
                        DmInspectorComments,
                        ConsultantNotes,
                        OwnerNotes,
                        ConsultantCrNo,
                        NumberOfFloors,
                        ConstructedArea,
                        DMLicenseComments,
                        LandArea,
                        LandDeedReceiptDate,
                        LandDeedNo,
                        FileNumber,
                        WelyahArName,
                        ServiceNameAR,
                        ServiceNameEn,
                        ArLetter,
                        BuildingType,
                        UseType,
                        RegionArName,
                        RegionEnName,
                        RegionCode,
                        DistrictNo,
                        BldPermitID,
                        Contractor_Name,
                        Contractor_CRNumber,
                        Contractor_CR_Number,
                        Referenceid,
                        PaymentType,
                        PaymentID,
                        ConsultantCivilId,
                        CompanyName,
                        PaymentDate,
                        SupervisionLicenseNo,
                        BuildingComplex,
                        RequestDate,
                        CreatedBy,
                        CreatedOn,
                        UpdatedBy,
                        UpdatedOn,
                        UnitNo,
                        owners,
                        DMSupervisionStatment};
                rowBldSupervisionServicesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBldSupervisionServicesRow);
                return rowBldSupervisionServicesRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldSupervisionServicesRow FindByID(int ID)
            {
                return ((BldSupervisionServicesRow)(this.Rows.Find(new object[] {
                            ID})));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone()
            {
                BldSupervisionServicesDataTable cln = ((BldSupervisionServicesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new BldSupervisionServicesDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars()
            {
                this.columnID = base.Columns["ID"];
                this.columnKrokiNO = base.Columns["KrokiNO"];
                this.columnLicenseNo = base.Columns["LicenseNo"];
                this.columnDmFileNumber = base.Columns["DmFileNumber"];
                this.columnDmInspectorComments = base.Columns["DmInspectorComments"];
                this.columnConsultantNotes = base.Columns["ConsultantNotes"];
                this.columnOwnerNotes = base.Columns["OwnerNotes"];
                this.columnConsultantCrNo = base.Columns["ConsultantCrNo"];
                this.columnNumberOfFloors = base.Columns["NumberOfFloors"];
                this.columnConstructedArea = base.Columns["ConstructedArea"];
                this.columnDMLicenseComments = base.Columns["DMLicenseComments"];
                this.columnLandArea = base.Columns["LandArea"];
                this.columnLandDeedReceiptDate = base.Columns["LandDeedReceiptDate"];
                this.columnLandDeedNo = base.Columns["LandDeedNo"];
                this.columnFileNumber = base.Columns["FileNumber"];
                this.columnWelyahArName = base.Columns["WelyahArName"];
                this.columnServiceNameAR = base.Columns["ServiceNameAR"];
                this.columnServiceNameEn = base.Columns["ServiceNameEn"];
                this.columnArLetter = base.Columns["ArLetter"];
                this.columnBuildingType = base.Columns["BuildingType"];
                this.columnUseType = base.Columns["UseType"];
                this.columnRegionArName = base.Columns["RegionArName"];
                this.columnRegionEnName = base.Columns["RegionEnName"];
                this.columnRegionCode = base.Columns["RegionCode"];
                this.columnDistrictNo = base.Columns["DistrictNo"];
                this.columnBldPermitID = base.Columns["BldPermitID"];
                this.columnContractor_Name = base.Columns["Contractor_Name"];
                this.columnContractor_CRNumber = base.Columns["Contractor_CRNumber"];
                this.columnContractor_CR_Number = base.Columns["Contractor_CR_Number"];
                this.columnReferenceid = base.Columns["Referenceid"];
                this.columnPaymentType = base.Columns["PaymentType"];
                this.columnPaymentID = base.Columns["PaymentID"];
                this.columnConsultantCivilId = base.Columns["ConsultantCivilId"];
                this.columnCompanyName = base.Columns["CompanyName"];
                this.columnPaymentDate = base.Columns["PaymentDate"];
                this.columnSupervisionLicenseNo = base.Columns["SupervisionLicenseNo"];
                this.columnBuildingComplex = base.Columns["BuildingComplex"];
                this.columnRequestDate = base.Columns["RequestDate"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedOn = base.Columns["CreatedOn"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnUpdatedOn = base.Columns["UpdatedOn"];
                this.columnUnitNo = base.Columns["UnitNo"];
                this.columnowners = base.Columns["owners"];
                this.columnDMSupervisionStatment = base.Columns["DMSupervisionStatment"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass()
            {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnKrokiNO = new global::System.Data.DataColumn("KrokiNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKrokiNO);
                this.columnLicenseNo = new global::System.Data.DataColumn("LicenseNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLicenseNo);
                this.columnDmFileNumber = new global::System.Data.DataColumn("DmFileNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDmFileNumber);
                this.columnDmInspectorComments = new global::System.Data.DataColumn("DmInspectorComments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDmInspectorComments);
                this.columnConsultantNotes = new global::System.Data.DataColumn("ConsultantNotes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsultantNotes);
                this.columnOwnerNotes = new global::System.Data.DataColumn("OwnerNotes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnerNotes);
                this.columnConsultantCrNo = new global::System.Data.DataColumn("ConsultantCrNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsultantCrNo);
                this.columnNumberOfFloors = new global::System.Data.DataColumn("NumberOfFloors", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumberOfFloors);
                this.columnConstructedArea = new global::System.Data.DataColumn("ConstructedArea", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConstructedArea);
                this.columnDMLicenseComments = new global::System.Data.DataColumn("DMLicenseComments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDMLicenseComments);
                this.columnLandArea = new global::System.Data.DataColumn("LandArea", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandArea);
                this.columnLandDeedReceiptDate = new global::System.Data.DataColumn("LandDeedReceiptDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandDeedReceiptDate);
                this.columnLandDeedNo = new global::System.Data.DataColumn("LandDeedNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandDeedNo);
                this.columnFileNumber = new global::System.Data.DataColumn("FileNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFileNumber);
                this.columnWelyahArName = new global::System.Data.DataColumn("WelyahArName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWelyahArName);
                this.columnServiceNameAR = new global::System.Data.DataColumn("ServiceNameAR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceNameAR);
                this.columnServiceNameEn = new global::System.Data.DataColumn("ServiceNameEn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceNameEn);
                this.columnArLetter = new global::System.Data.DataColumn("ArLetter", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArLetter);
                this.columnBuildingType = new global::System.Data.DataColumn("BuildingType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBuildingType);
                this.columnUseType = new global::System.Data.DataColumn("UseType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUseType);
                this.columnRegionArName = new global::System.Data.DataColumn("RegionArName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegionArName);
                this.columnRegionEnName = new global::System.Data.DataColumn("RegionEnName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegionEnName);
                this.columnRegionCode = new global::System.Data.DataColumn("RegionCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegionCode);
                this.columnDistrictNo = new global::System.Data.DataColumn("DistrictNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrictNo);
                this.columnBldPermitID = new global::System.Data.DataColumn("BldPermitID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBldPermitID);
                this.columnContractor_Name = new global::System.Data.DataColumn("Contractor_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractor_Name);
                this.columnContractor_CRNumber = new global::System.Data.DataColumn("Contractor_CRNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractor_CRNumber);
                this.columnContractor_CR_Number = new global::System.Data.DataColumn("Contractor_CR_Number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractor_CR_Number);
                this.columnReferenceid = new global::System.Data.DataColumn("Referenceid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReferenceid);
                this.columnPaymentType = new global::System.Data.DataColumn("PaymentType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentType);
                this.columnPaymentID = new global::System.Data.DataColumn("PaymentID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentID);
                this.columnConsultantCivilId = new global::System.Data.DataColumn("ConsultantCivilId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsultantCivilId);
                this.columnCompanyName = new global::System.Data.DataColumn("CompanyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyName);
                this.columnPaymentDate = new global::System.Data.DataColumn("PaymentDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentDate);
                this.columnSupervisionLicenseNo = new global::System.Data.DataColumn("SupervisionLicenseNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupervisionLicenseNo);
                this.columnBuildingComplex = new global::System.Data.DataColumn("BuildingComplex", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBuildingComplex);
                this.columnRequestDate = new global::System.Data.DataColumn("RequestDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequestDate);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedOn = new global::System.Data.DataColumn("CreatedOn", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedOn);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnUpdatedOn = new global::System.Data.DataColumn("UpdatedOn", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedOn);
                this.columnUnitNo = new global::System.Data.DataColumn("UnitNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitNo);
                this.columnowners = new global::System.Data.DataColumn("owners", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnowners);
                this.columnDMSupervisionStatment = new global::System.Data.DataColumn("DMSupervisionStatment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDMSupervisionStatment);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnKrokiNO.MaxLength = 50;
                this.columnLicenseNo.MaxLength = 100;
                this.columnDmFileNumber.MaxLength = 50;
                this.columnDmInspectorComments.MaxLength = 500;
                this.columnConsultantNotes.MaxLength = 250;
                this.columnOwnerNotes.MaxLength = 250;
                this.columnConsultantCrNo.AllowDBNull = false;
                this.columnNumberOfFloors.MaxLength = 50;
                this.columnConstructedArea.MaxLength = 50;
                this.columnDMLicenseComments.MaxLength = 250;
                this.columnLandArea.MaxLength = 50;
                this.columnLandDeedNo.MaxLength = 50;
                this.columnFileNumber.MaxLength = 50;
                this.columnWelyahArName.AllowDBNull = false;
                this.columnWelyahArName.MaxLength = 50;
                this.columnServiceNameAR.AllowDBNull = false;
                this.columnServiceNameAR.MaxLength = 100;
                this.columnServiceNameEn.MaxLength = 100;
                this.columnArLetter.MaxLength = 10;
                this.columnBuildingType.MaxLength = 50;
                this.columnUseType.MaxLength = 50;
                this.columnRegionArName.AllowDBNull = false;
                this.columnRegionArName.MaxLength = 50;
                this.columnRegionEnName.MaxLength = 50;
                this.columnRegionCode.AllowDBNull = false;
                this.columnBldPermitID.AllowDBNull = false;
                this.columnContractor_Name.MaxLength = 200;
                this.columnReferenceid.MaxLength = 200;
                this.columnCompanyName.MaxLength = 400;
                this.columnSupervisionLicenseNo.MaxLength = 100;
                this.columnBuildingComplex.MaxLength = 50;
                this.columnRequestDate.AllowDBNull = false;
                this.columnCreatedBy.MaxLength = 150;
                this.columnUpdatedBy.MaxLength = 150;
                this.columnUnitNo.MaxLength = 50;
                this.columnowners.ReadOnly = true;
                this.columnowners.MaxLength = 2147483647;
                this.columnDMSupervisionStatment.MaxLength = 250;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldSupervisionServicesRow NewBldSupervisionServicesRow()
            {
                return ((BldSupervisionServicesRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new BldSupervisionServicesRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType()
            {
                return typeof(BldSupervisionServicesRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.BldSupervisionServicesRowChanged != null))
                {
                    this.BldSupervisionServicesRowChanged(this, new BldSupervisionServicesRowChangeEvent(((BldSupervisionServicesRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.BldSupervisionServicesRowChanging != null))
                {
                    this.BldSupervisionServicesRowChanging(this, new BldSupervisionServicesRowChangeEvent(((BldSupervisionServicesRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.BldSupervisionServicesRowDeleted != null))
                {
                    this.BldSupervisionServicesRowDeleted(this, new BldSupervisionServicesRowChangeEvent(((BldSupervisionServicesRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.BldSupervisionServicesRowDeleting != null))
                {
                    this.BldSupervisionServicesRowDeleting(this, new BldSupervisionServicesRowChangeEvent(((BldSupervisionServicesRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveBldSupervisionServicesRow(BldSupervisionServicesRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InternalEngineeringDataSet ds = new InternalEngineeringDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BldSupervisionServicesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte()));)
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BldSupervisionServicesTypesDataTable : global::System.Data.TypedTableBase<BldSupervisionServicesTypesRow>
        {

            private global::System.Data.DataColumn columnID;

            private global::System.Data.DataColumn columnServiceNameAR;

            private global::System.Data.DataColumn columnServiceNameEn;

            private global::System.Data.DataColumn columnServiceStatus;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldSupervisionServicesTypesDataTable()
            {
                this.TableName = "BldSupervisionServicesTypes";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal BldSupervisionServicesTypesDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected BldSupervisionServicesTypesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IDColumn
            {
                get
                {
                    return this.columnID;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ServiceNameARColumn
            {
                get
                {
                    return this.columnServiceNameAR;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ServiceNameEnColumn
            {
                get
                {
                    return this.columnServiceNameEn;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ServiceStatusColumn
            {
                get
                {
                    return this.columnServiceStatus;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldSupervisionServicesTypesRow this[int index]
            {
                get
                {
                    return ((BldSupervisionServicesTypesRow)(this.Rows[index]));
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BldSupervisionServicesTypesRowChangeEventHandler BldSupervisionServicesTypesRowChanging;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BldSupervisionServicesTypesRowChangeEventHandler BldSupervisionServicesTypesRowChanged;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BldSupervisionServicesTypesRowChangeEventHandler BldSupervisionServicesTypesRowDeleting;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BldSupervisionServicesTypesRowChangeEventHandler BldSupervisionServicesTypesRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddBldSupervisionServicesTypesRow(BldSupervisionServicesTypesRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldSupervisionServicesTypesRow AddBldSupervisionServicesTypesRow(string ServiceNameAR, string ServiceNameEn, int ServiceStatus)
            {
                BldSupervisionServicesTypesRow rowBldSupervisionServicesTypesRow = ((BldSupervisionServicesTypesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ServiceNameAR,
                        ServiceNameEn,
                        ServiceStatus};
                rowBldSupervisionServicesTypesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBldSupervisionServicesTypesRow);
                return rowBldSupervisionServicesTypesRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldSupervisionServicesTypesRow FindByID(int ID)
            {
                return ((BldSupervisionServicesTypesRow)(this.Rows.Find(new object[] {
                            ID})));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone()
            {
                BldSupervisionServicesTypesDataTable cln = ((BldSupervisionServicesTypesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new BldSupervisionServicesTypesDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars()
            {
                this.columnID = base.Columns["ID"];
                this.columnServiceNameAR = base.Columns["ServiceNameAR"];
                this.columnServiceNameEn = base.Columns["ServiceNameEn"];
                this.columnServiceStatus = base.Columns["ServiceStatus"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass()
            {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnServiceNameAR = new global::System.Data.DataColumn("ServiceNameAR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceNameAR);
                this.columnServiceNameEn = new global::System.Data.DataColumn("ServiceNameEn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceNameEn);
                this.columnServiceStatus = new global::System.Data.DataColumn("ServiceStatus", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceStatus);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnServiceNameAR.AllowDBNull = false;
                this.columnServiceNameAR.MaxLength = 100;
                this.columnServiceNameEn.MaxLength = 100;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldSupervisionServicesTypesRow NewBldSupervisionServicesTypesRow()
            {
                return ((BldSupervisionServicesTypesRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new BldSupervisionServicesTypesRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType()
            {
                return typeof(BldSupervisionServicesTypesRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.BldSupervisionServicesTypesRowChanged != null))
                {
                    this.BldSupervisionServicesTypesRowChanged(this, new BldSupervisionServicesTypesRowChangeEvent(((BldSupervisionServicesTypesRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.BldSupervisionServicesTypesRowChanging != null))
                {
                    this.BldSupervisionServicesTypesRowChanging(this, new BldSupervisionServicesTypesRowChangeEvent(((BldSupervisionServicesTypesRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.BldSupervisionServicesTypesRowDeleted != null))
                {
                    this.BldSupervisionServicesTypesRowDeleted(this, new BldSupervisionServicesTypesRowChangeEvent(((BldSupervisionServicesTypesRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.BldSupervisionServicesTypesRowDeleting != null))
                {
                    this.BldSupervisionServicesTypesRowDeleting(this, new BldSupervisionServicesTypesRowChangeEvent(((BldSupervisionServicesTypesRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveBldSupervisionServicesTypesRow(BldSupervisionServicesTypesRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InternalEngineeringDataSet ds = new InternalEngineeringDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BldSupervisionServicesTypesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte()));)
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class UnpaidServicesDataTable : global::System.Data.TypedTableBase<UnpaidServicesRow>
        {

            private global::System.Data.DataColumn columnConsultantCrNo;

            private global::System.Data.DataColumn columnNumberOfFloors;

            private global::System.Data.DataColumn columnConstructedArea;

            private global::System.Data.DataColumn columnLicenseNo;

            private global::System.Data.DataColumn columnKrokiNO;

            private global::System.Data.DataColumn columnDmFileNumber;

            private global::System.Data.DataColumn columnDMLicenseComments;

            private global::System.Data.DataColumn columnLandArea;

            private global::System.Data.DataColumn columnLandDeedReceiptDate;

            private global::System.Data.DataColumn columnLandDeedNo;

            private global::System.Data.DataColumn columnOwnerNotes;

            private global::System.Data.DataColumn columnConsultantNotes;

            private global::System.Data.DataColumn columnFileNumber;

            private global::System.Data.DataColumn columnDmInspectorComments;

            private global::System.Data.DataColumn columnTransactNo;

            private global::System.Data.DataColumn columnID;

            private global::System.Data.DataColumn columnWelyahArName;

            private global::System.Data.DataColumn columnWelyahEnName;

            private global::System.Data.DataColumn columnWelyahCode;

            private global::System.Data.DataColumn columnServiceNameAR;

            private global::System.Data.DataColumn columnServiceNameEn;

            private global::System.Data.DataColumn columnArLetter;

            private global::System.Data.DataColumn columnEnLetter;

            private global::System.Data.DataColumn columnBuildingType;

            private global::System.Data.DataColumn columnUseType;

            private global::System.Data.DataColumn columnRegionArName;

            private global::System.Data.DataColumn columnRegionEnName;

            private global::System.Data.DataColumn columnRegionCode;

            private global::System.Data.DataColumn columnDistrictNo;

            private global::System.Data.DataColumn columnBldPermitID;

            private global::System.Data.DataColumn columnContractor_CR_Number;

            private global::System.Data.DataColumn columnConsultantCivilId;

            private global::System.Data.DataColumn columnSupervisionLicenseNo;

            private global::System.Data.DataColumn columnowners;

            private global::System.Data.DataColumn columnDMSupervisionStatment;

            private global::System.Data.DataColumn columnServiceTypeID;

            private global::System.Data.DataColumn columnOwnerCivilId;

            private global::System.Data.DataColumn columnOwnerName;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public UnpaidServicesDataTable()
            {
                this.TableName = "UnpaidServices";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal UnpaidServicesDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected UnpaidServicesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ConsultantCrNoColumn
            {
                get
                {
                    return this.columnConsultantCrNo;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NumberOfFloorsColumn
            {
                get
                {
                    return this.columnNumberOfFloors;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ConstructedAreaColumn
            {
                get
                {
                    return this.columnConstructedArea;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LicenseNoColumn
            {
                get
                {
                    return this.columnLicenseNo;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KrokiNOColumn
            {
                get
                {
                    return this.columnKrokiNO;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DmFileNumberColumn
            {
                get
                {
                    return this.columnDmFileNumber;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DMLicenseCommentsColumn
            {
                get
                {
                    return this.columnDMLicenseComments;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LandAreaColumn
            {
                get
                {
                    return this.columnLandArea;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LandDeedReceiptDateColumn
            {
                get
                {
                    return this.columnLandDeedReceiptDate;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LandDeedNoColumn
            {
                get
                {
                    return this.columnLandDeedNo;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OwnerNotesColumn
            {
                get
                {
                    return this.columnOwnerNotes;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ConsultantNotesColumn
            {
                get
                {
                    return this.columnConsultantNotes;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FileNumberColumn
            {
                get
                {
                    return this.columnFileNumber;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DmInspectorCommentsColumn
            {
                get
                {
                    return this.columnDmInspectorComments;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TransactNoColumn
            {
                get
                {
                    return this.columnTransactNo;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IDColumn
            {
                get
                {
                    return this.columnID;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn WelyahArNameColumn
            {
                get
                {
                    return this.columnWelyahArName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn WelyahEnNameColumn
            {
                get
                {
                    return this.columnWelyahEnName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn WelyahCodeColumn
            {
                get
                {
                    return this.columnWelyahCode;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ServiceNameARColumn
            {
                get
                {
                    return this.columnServiceNameAR;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ServiceNameEnColumn
            {
                get
                {
                    return this.columnServiceNameEn;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ArLetterColumn
            {
                get
                {
                    return this.columnArLetter;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EnLetterColumn
            {
                get
                {
                    return this.columnEnLetter;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BuildingTypeColumn
            {
                get
                {
                    return this.columnBuildingType;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UseTypeColumn
            {
                get
                {
                    return this.columnUseType;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RegionArNameColumn
            {
                get
                {
                    return this.columnRegionArName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RegionEnNameColumn
            {
                get
                {
                    return this.columnRegionEnName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RegionCodeColumn
            {
                get
                {
                    return this.columnRegionCode;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DistrictNoColumn
            {
                get
                {
                    return this.columnDistrictNo;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BldPermitIDColumn
            {
                get
                {
                    return this.columnBldPermitID;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Contractor_CR_NumberColumn
            {
                get
                {
                    return this.columnContractor_CR_Number;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ConsultantCivilIdColumn
            {
                get
                {
                    return this.columnConsultantCivilId;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SupervisionLicenseNoColumn
            {
                get
                {
                    return this.columnSupervisionLicenseNo;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ownersColumn
            {
                get
                {
                    return this.columnowners;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DMSupervisionStatmentColumn
            {
                get
                {
                    return this.columnDMSupervisionStatment;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ServiceTypeIDColumn
            {
                get
                {
                    return this.columnServiceTypeID;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OwnerCivilIdColumn
            {
                get
                {
                    return this.columnOwnerCivilId;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OwnerNameColumn
            {
                get
                {
                    return this.columnOwnerName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public UnpaidServicesRow this[int index]
            {
                get
                {
                    return ((UnpaidServicesRow)(this.Rows[index]));
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event UnpaidServicesRowChangeEventHandler UnpaidServicesRowChanging;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event UnpaidServicesRowChangeEventHandler UnpaidServicesRowChanged;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event UnpaidServicesRowChangeEventHandler UnpaidServicesRowDeleting;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event UnpaidServicesRowChangeEventHandler UnpaidServicesRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddUnpaidServicesRow(UnpaidServicesRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public UnpaidServicesRow AddUnpaidServicesRow(
                        int ConsultantCrNo,
                        string NumberOfFloors,
                        string ConstructedArea,
                        string LicenseNo,
                        string KrokiNO,
                        string DmFileNumber,
                        string DMLicenseComments,
                        string LandArea,
                        System.DateTime LandDeedReceiptDate,
                        string LandDeedNo,
                        string OwnerNotes,
                        string ConsultantNotes,
                        string FileNumber,
                        string DmInspectorComments,
                        string TransactNo,
                        string WelyahArName,
                        string WelyahEnName,
                        int WelyahCode,
                        string ServiceNameAR,
                        string ServiceNameEn,
                        string ArLetter,
                        string EnLetter,
                        string BuildingType,
                        string UseType,
                        string RegionArName,
                        string RegionEnName,
                        int RegionCode,
                        int DistrictNo,
                        int BldPermitID,
                        int Contractor_CR_Number,
                        int ConsultantCivilId,
                        string SupervisionLicenseNo,
                        string owners,
                        string DMSupervisionStatment,
                        BldSupervisionServicesTypesRow parentBldSupervisionServicesTypesRowByFK_BldSupervisionServices_BldSupervisionServicesTypes,
                        int OwnerCivilId,
                        string OwnerName)
            {
                UnpaidServicesRow rowUnpaidServicesRow = ((UnpaidServicesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ConsultantCrNo,
                        NumberOfFloors,
                        ConstructedArea,
                        LicenseNo,
                        KrokiNO,
                        DmFileNumber,
                        DMLicenseComments,
                        LandArea,
                        LandDeedReceiptDate,
                        LandDeedNo,
                        OwnerNotes,
                        ConsultantNotes,
                        FileNumber,
                        DmInspectorComments,
                        TransactNo,
                        null,
                        WelyahArName,
                        WelyahEnName,
                        WelyahCode,
                        ServiceNameAR,
                        ServiceNameEn,
                        ArLetter,
                        EnLetter,
                        BuildingType,
                        UseType,
                        RegionArName,
                        RegionEnName,
                        RegionCode,
                        DistrictNo,
                        BldPermitID,
                        Contractor_CR_Number,
                        ConsultantCivilId,
                        SupervisionLicenseNo,
                        owners,
                        DMSupervisionStatment,
                        null,
                        OwnerCivilId,
                        OwnerName};
                if ((parentBldSupervisionServicesTypesRowByFK_BldSupervisionServices_BldSupervisionServicesTypes != null))
                {
                    columnValuesArray[35] = parentBldSupervisionServicesTypesRowByFK_BldSupervisionServices_BldSupervisionServicesTypes[0];
                }
                rowUnpaidServicesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUnpaidServicesRow);
                return rowUnpaidServicesRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public UnpaidServicesRow FindByID(int ID)
            {
                return ((UnpaidServicesRow)(this.Rows.Find(new object[] {
                            ID})));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone()
            {
                UnpaidServicesDataTable cln = ((UnpaidServicesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new UnpaidServicesDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars()
            {
                this.columnConsultantCrNo = base.Columns["ConsultantCrNo"];
                this.columnNumberOfFloors = base.Columns["NumberOfFloors"];
                this.columnConstructedArea = base.Columns["ConstructedArea"];
                this.columnLicenseNo = base.Columns["LicenseNo"];
                this.columnKrokiNO = base.Columns["KrokiNO"];
                this.columnDmFileNumber = base.Columns["DmFileNumber"];
                this.columnDMLicenseComments = base.Columns["DMLicenseComments"];
                this.columnLandArea = base.Columns["LandArea"];
                this.columnLandDeedReceiptDate = base.Columns["LandDeedReceiptDate"];
                this.columnLandDeedNo = base.Columns["LandDeedNo"];
                this.columnOwnerNotes = base.Columns["OwnerNotes"];
                this.columnConsultantNotes = base.Columns["ConsultantNotes"];
                this.columnFileNumber = base.Columns["FileNumber"];
                this.columnDmInspectorComments = base.Columns["DmInspectorComments"];
                this.columnTransactNo = base.Columns["TransactNo"];
                this.columnID = base.Columns["ID"];
                this.columnWelyahArName = base.Columns["WelyahArName"];
                this.columnWelyahEnName = base.Columns["WelyahEnName"];
                this.columnWelyahCode = base.Columns["WelyahCode"];
                this.columnServiceNameAR = base.Columns["ServiceNameAR"];
                this.columnServiceNameEn = base.Columns["ServiceNameEn"];
                this.columnArLetter = base.Columns["ArLetter"];
                this.columnEnLetter = base.Columns["EnLetter"];
                this.columnBuildingType = base.Columns["BuildingType"];
                this.columnUseType = base.Columns["UseType"];
                this.columnRegionArName = base.Columns["RegionArName"];
                this.columnRegionEnName = base.Columns["RegionEnName"];
                this.columnRegionCode = base.Columns["RegionCode"];
                this.columnDistrictNo = base.Columns["DistrictNo"];
                this.columnBldPermitID = base.Columns["BldPermitID"];
                this.columnContractor_CR_Number = base.Columns["Contractor_CR_Number"];
                this.columnConsultantCivilId = base.Columns["ConsultantCivilId"];
                this.columnSupervisionLicenseNo = base.Columns["SupervisionLicenseNo"];
                this.columnowners = base.Columns["owners"];
                this.columnDMSupervisionStatment = base.Columns["DMSupervisionStatment"];
                this.columnServiceTypeID = base.Columns["ServiceTypeID"];
                this.columnOwnerCivilId = base.Columns["OwnerCivilId"];
                this.columnOwnerName = base.Columns["OwnerName"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass()
            {
                this.columnConsultantCrNo = new global::System.Data.DataColumn("ConsultantCrNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsultantCrNo);
                this.columnNumberOfFloors = new global::System.Data.DataColumn("NumberOfFloors", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumberOfFloors);
                this.columnConstructedArea = new global::System.Data.DataColumn("ConstructedArea", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConstructedArea);
                this.columnLicenseNo = new global::System.Data.DataColumn("LicenseNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLicenseNo);
                this.columnKrokiNO = new global::System.Data.DataColumn("KrokiNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKrokiNO);
                this.columnDmFileNumber = new global::System.Data.DataColumn("DmFileNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDmFileNumber);
                this.columnDMLicenseComments = new global::System.Data.DataColumn("DMLicenseComments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDMLicenseComments);
                this.columnLandArea = new global::System.Data.DataColumn("LandArea", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandArea);
                this.columnLandDeedReceiptDate = new global::System.Data.DataColumn("LandDeedReceiptDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandDeedReceiptDate);
                this.columnLandDeedNo = new global::System.Data.DataColumn("LandDeedNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandDeedNo);
                this.columnOwnerNotes = new global::System.Data.DataColumn("OwnerNotes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnerNotes);
                this.columnConsultantNotes = new global::System.Data.DataColumn("ConsultantNotes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsultantNotes);
                this.columnFileNumber = new global::System.Data.DataColumn("FileNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFileNumber);
                this.columnDmInspectorComments = new global::System.Data.DataColumn("DmInspectorComments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDmInspectorComments);
                this.columnTransactNo = new global::System.Data.DataColumn("TransactNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransactNo);
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnWelyahArName = new global::System.Data.DataColumn("WelyahArName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWelyahArName);
                this.columnWelyahEnName = new global::System.Data.DataColumn("WelyahEnName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWelyahEnName);
                this.columnWelyahCode = new global::System.Data.DataColumn("WelyahCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWelyahCode);
                this.columnServiceNameAR = new global::System.Data.DataColumn("ServiceNameAR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceNameAR);
                this.columnServiceNameEn = new global::System.Data.DataColumn("ServiceNameEn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceNameEn);
                this.columnArLetter = new global::System.Data.DataColumn("ArLetter", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArLetter);
                this.columnEnLetter = new global::System.Data.DataColumn("EnLetter", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnLetter);
                this.columnBuildingType = new global::System.Data.DataColumn("BuildingType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBuildingType);
                this.columnUseType = new global::System.Data.DataColumn("UseType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUseType);
                this.columnRegionArName = new global::System.Data.DataColumn("RegionArName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegionArName);
                this.columnRegionEnName = new global::System.Data.DataColumn("RegionEnName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegionEnName);
                this.columnRegionCode = new global::System.Data.DataColumn("RegionCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegionCode);
                this.columnDistrictNo = new global::System.Data.DataColumn("DistrictNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrictNo);
                this.columnBldPermitID = new global::System.Data.DataColumn("BldPermitID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBldPermitID);
                this.columnContractor_CR_Number = new global::System.Data.DataColumn("Contractor_CR_Number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractor_CR_Number);
                this.columnConsultantCivilId = new global::System.Data.DataColumn("ConsultantCivilId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsultantCivilId);
                this.columnSupervisionLicenseNo = new global::System.Data.DataColumn("SupervisionLicenseNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupervisionLicenseNo);
                this.columnowners = new global::System.Data.DataColumn("owners", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnowners);
                this.columnDMSupervisionStatment = new global::System.Data.DataColumn("DMSupervisionStatment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDMSupervisionStatment);
                this.columnServiceTypeID = new global::System.Data.DataColumn("ServiceTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceTypeID);
                this.columnOwnerCivilId = new global::System.Data.DataColumn("OwnerCivilId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnerCivilId);
                this.columnOwnerName = new global::System.Data.DataColumn("OwnerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnerName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnConsultantCrNo.AllowDBNull = false;
                this.columnNumberOfFloors.MaxLength = 50;
                this.columnConstructedArea.MaxLength = 50;
                this.columnLicenseNo.MaxLength = 100;
                this.columnKrokiNO.MaxLength = 50;
                this.columnDmFileNumber.MaxLength = 50;
                this.columnDMLicenseComments.MaxLength = 250;
                this.columnLandArea.MaxLength = 50;
                this.columnLandDeedNo.MaxLength = 50;
                this.columnOwnerNotes.MaxLength = 250;
                this.columnConsultantNotes.MaxLength = 250;
                this.columnFileNumber.MaxLength = 50;
                this.columnDmInspectorComments.MaxLength = 500;
                this.columnTransactNo.AllowDBNull = false;
                this.columnTransactNo.MaxLength = 400;
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnWelyahArName.AllowDBNull = false;
                this.columnWelyahArName.MaxLength = 50;
                this.columnWelyahEnName.AllowDBNull = false;
                this.columnWelyahEnName.MaxLength = 50;
                this.columnWelyahCode.AllowDBNull = false;
                this.columnServiceNameAR.AllowDBNull = false;
                this.columnServiceNameAR.MaxLength = 100;
                this.columnServiceNameEn.MaxLength = 100;
                this.columnArLetter.MaxLength = 10;
                this.columnEnLetter.MaxLength = 5;
                this.columnBuildingType.MaxLength = 50;
                this.columnUseType.MaxLength = 50;
                this.columnRegionArName.AllowDBNull = false;
                this.columnRegionArName.MaxLength = 50;
                this.columnRegionEnName.MaxLength = 50;
                this.columnRegionCode.AllowDBNull = false;
                this.columnBldPermitID.AllowDBNull = false;
                this.columnSupervisionLicenseNo.MaxLength = 100;
                this.columnowners.ReadOnly = true;
                this.columnowners.MaxLength = 2147483647;
                this.columnDMSupervisionStatment.MaxLength = 250;
                this.columnServiceTypeID.AllowDBNull = false;
                this.columnOwnerName.MaxLength = 250;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public UnpaidServicesRow NewUnpaidServicesRow()
            {
                return ((UnpaidServicesRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new UnpaidServicesRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType()
            {
                return typeof(UnpaidServicesRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.UnpaidServicesRowChanged != null))
                {
                    this.UnpaidServicesRowChanged(this, new UnpaidServicesRowChangeEvent(((UnpaidServicesRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.UnpaidServicesRowChanging != null))
                {
                    this.UnpaidServicesRowChanging(this, new UnpaidServicesRowChangeEvent(((UnpaidServicesRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.UnpaidServicesRowDeleted != null))
                {
                    this.UnpaidServicesRowDeleted(this, new UnpaidServicesRowChangeEvent(((UnpaidServicesRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.UnpaidServicesRowDeleting != null))
                {
                    this.UnpaidServicesRowDeleting(this, new UnpaidServicesRowChangeEvent(((UnpaidServicesRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveUnpaidServicesRow(UnpaidServicesRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InternalEngineeringDataSet ds = new InternalEngineeringDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "UnpaidServicesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte()));)
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AlreadyPaidServicesDataTable : global::System.Data.TypedTableBase<AlreadyPaidServicesRow>
        {

            private global::System.Data.DataColumn columnConsultantCrNo;

            private global::System.Data.DataColumn columnNumberOfFloors;

            private global::System.Data.DataColumn columnConstructedArea;

            private global::System.Data.DataColumn columnLicenseNo;

            private global::System.Data.DataColumn columnKrokiNO;

            private global::System.Data.DataColumn columnDmFileNumber;

            private global::System.Data.DataColumn columnDMLicenseComments;

            private global::System.Data.DataColumn columnLandArea;

            private global::System.Data.DataColumn columnLandDeedReceiptDate;

            private global::System.Data.DataColumn columnLandDeedNo;

            private global::System.Data.DataColumn columnOwnerNotes;

            private global::System.Data.DataColumn columnConsultantNotes;

            private global::System.Data.DataColumn columnFileNumber;

            private global::System.Data.DataColumn columnDmInspectorComments;

            private global::System.Data.DataColumn columnID;

            private global::System.Data.DataColumn columnWelyahArName;

            private global::System.Data.DataColumn columnServiceNameAR;

            private global::System.Data.DataColumn columnServiceNameEn;

            private global::System.Data.DataColumn columnArLetter;

            private global::System.Data.DataColumn columnBuildingType;

            private global::System.Data.DataColumn columnUseType;

            private global::System.Data.DataColumn columnRegionArName;

            private global::System.Data.DataColumn columnRegionEnName;

            private global::System.Data.DataColumn columnRegionCode;

            private global::System.Data.DataColumn columnDistrictNo;

            private global::System.Data.DataColumn columnBldPermitID;

            private global::System.Data.DataColumn columnContractor_Name;

            private global::System.Data.DataColumn columnContractor_CRNumber;

            private global::System.Data.DataColumn columnContractor_CR_Number;

            private global::System.Data.DataColumn columnReferenceid;

            private global::System.Data.DataColumn columnPaymentType;

            private global::System.Data.DataColumn columnPaymentID;

            private global::System.Data.DataColumn columnConsultantCivilId;

            private global::System.Data.DataColumn columnCompanyName;

            private global::System.Data.DataColumn columnPaymentDate;

            private global::System.Data.DataColumn columnSupervisionLicenseNo;

            private global::System.Data.DataColumn columnBuildingComplex;

            private global::System.Data.DataColumn columnRequestDate;

            private global::System.Data.DataColumn columnCreatedBy;

            private global::System.Data.DataColumn columnCreatedOn;

            private global::System.Data.DataColumn columnUpdatedBy;

            private global::System.Data.DataColumn columnUpdatedOn;

            private global::System.Data.DataColumn columnUnitNo;

            private global::System.Data.DataColumn columnowners;

            private global::System.Data.DataColumn columnDMSupervisionStatment;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public AlreadyPaidServicesDataTable()
            {
                this.TableName = "AlreadyPaidServices";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal AlreadyPaidServicesDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected AlreadyPaidServicesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ConsultantCrNoColumn
            {
                get
                {
                    return this.columnConsultantCrNo;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NumberOfFloorsColumn
            {
                get
                {
                    return this.columnNumberOfFloors;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ConstructedAreaColumn
            {
                get
                {
                    return this.columnConstructedArea;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LicenseNoColumn
            {
                get
                {
                    return this.columnLicenseNo;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KrokiNOColumn
            {
                get
                {
                    return this.columnKrokiNO;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DmFileNumberColumn
            {
                get
                {
                    return this.columnDmFileNumber;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DMLicenseCommentsColumn
            {
                get
                {
                    return this.columnDMLicenseComments;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LandAreaColumn
            {
                get
                {
                    return this.columnLandArea;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LandDeedReceiptDateColumn
            {
                get
                {
                    return this.columnLandDeedReceiptDate;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LandDeedNoColumn
            {
                get
                {
                    return this.columnLandDeedNo;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OwnerNotesColumn
            {
                get
                {
                    return this.columnOwnerNotes;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ConsultantNotesColumn
            {
                get
                {
                    return this.columnConsultantNotes;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FileNumberColumn
            {
                get
                {
                    return this.columnFileNumber;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DmInspectorCommentsColumn
            {
                get
                {
                    return this.columnDmInspectorComments;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IDColumn
            {
                get
                {
                    return this.columnID;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn WelyahArNameColumn
            {
                get
                {
                    return this.columnWelyahArName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ServiceNameARColumn
            {
                get
                {
                    return this.columnServiceNameAR;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ServiceNameEnColumn
            {
                get
                {
                    return this.columnServiceNameEn;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ArLetterColumn
            {
                get
                {
                    return this.columnArLetter;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BuildingTypeColumn
            {
                get
                {
                    return this.columnBuildingType;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UseTypeColumn
            {
                get
                {
                    return this.columnUseType;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RegionArNameColumn
            {
                get
                {
                    return this.columnRegionArName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RegionEnNameColumn
            {
                get
                {
                    return this.columnRegionEnName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RegionCodeColumn
            {
                get
                {
                    return this.columnRegionCode;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DistrictNoColumn
            {
                get
                {
                    return this.columnDistrictNo;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BldPermitIDColumn
            {
                get
                {
                    return this.columnBldPermitID;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Contractor_NameColumn
            {
                get
                {
                    return this.columnContractor_Name;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Contractor_CRNumberColumn
            {
                get
                {
                    return this.columnContractor_CRNumber;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Contractor_CR_NumberColumn
            {
                get
                {
                    return this.columnContractor_CR_Number;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ReferenceidColumn
            {
                get
                {
                    return this.columnReferenceid;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PaymentTypeColumn
            {
                get
                {
                    return this.columnPaymentType;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PaymentIDColumn
            {
                get
                {
                    return this.columnPaymentID;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ConsultantCivilIdColumn
            {
                get
                {
                    return this.columnConsultantCivilId;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CompanyNameColumn
            {
                get
                {
                    return this.columnCompanyName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PaymentDateColumn
            {
                get
                {
                    return this.columnPaymentDate;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SupervisionLicenseNoColumn
            {
                get
                {
                    return this.columnSupervisionLicenseNo;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BuildingComplexColumn
            {
                get
                {
                    return this.columnBuildingComplex;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RequestDateColumn
            {
                get
                {
                    return this.columnRequestDate;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CreatedByColumn
            {
                get
                {
                    return this.columnCreatedBy;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CreatedOnColumn
            {
                get
                {
                    return this.columnCreatedOn;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UpdatedByColumn
            {
                get
                {
                    return this.columnUpdatedBy;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UpdatedOnColumn
            {
                get
                {
                    return this.columnUpdatedOn;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UnitNoColumn
            {
                get
                {
                    return this.columnUnitNo;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ownersColumn
            {
                get
                {
                    return this.columnowners;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DMSupervisionStatmentColumn
            {
                get
                {
                    return this.columnDMSupervisionStatment;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public AlreadyPaidServicesRow this[int index]
            {
                get
                {
                    return ((AlreadyPaidServicesRow)(this.Rows[index]));
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event AlreadyPaidServicesRowChangeEventHandler AlreadyPaidServicesRowChanging;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event AlreadyPaidServicesRowChangeEventHandler AlreadyPaidServicesRowChanged;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event AlreadyPaidServicesRowChangeEventHandler AlreadyPaidServicesRowDeleting;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event AlreadyPaidServicesRowChangeEventHandler AlreadyPaidServicesRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddAlreadyPaidServicesRow(AlreadyPaidServicesRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public AlreadyPaidServicesRow AddAlreadyPaidServicesRow(
                        int ConsultantCrNo,
                        string NumberOfFloors,
                        string ConstructedArea,
                        string LicenseNo,
                        string KrokiNO,
                        string DmFileNumber,
                        string DMLicenseComments,
                        string LandArea,
                        System.DateTime LandDeedReceiptDate,
                        string LandDeedNo,
                        string OwnerNotes,
                        string ConsultantNotes,
                        string FileNumber,
                        string DmInspectorComments,
                        string WelyahArName,
                        string ServiceNameAR,
                        string ServiceNameEn,
                        string ArLetter,
                        string BuildingType,
                        string UseType,
                        string RegionArName,
                        string RegionEnName,
                        int RegionCode,
                        int DistrictNo,
                        int BldPermitID,
                        string Contractor_Name,
                        int Contractor_CRNumber,
                        int Contractor_CR_Number,
                        string Referenceid,
                        int PaymentType,
                        int PaymentID,
                        int ConsultantCivilId,
                        string CompanyName,
                        System.DateTime PaymentDate,
                        string SupervisionLicenseNo,
                        string BuildingComplex,
                        System.DateTime RequestDate,
                        string CreatedBy,
                        System.DateTime CreatedOn,
                        string UpdatedBy,
                        System.DateTime UpdatedOn,
                        string UnitNo,
                        string owners,
                        string DMSupervisionStatment)
            {
                AlreadyPaidServicesRow rowAlreadyPaidServicesRow = ((AlreadyPaidServicesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ConsultantCrNo,
                        NumberOfFloors,
                        ConstructedArea,
                        LicenseNo,
                        KrokiNO,
                        DmFileNumber,
                        DMLicenseComments,
                        LandArea,
                        LandDeedReceiptDate,
                        LandDeedNo,
                        OwnerNotes,
                        ConsultantNotes,
                        FileNumber,
                        DmInspectorComments,
                        null,
                        WelyahArName,
                        ServiceNameAR,
                        ServiceNameEn,
                        ArLetter,
                        BuildingType,
                        UseType,
                        RegionArName,
                        RegionEnName,
                        RegionCode,
                        DistrictNo,
                        BldPermitID,
                        Contractor_Name,
                        Contractor_CRNumber,
                        Contractor_CR_Number,
                        Referenceid,
                        PaymentType,
                        PaymentID,
                        ConsultantCivilId,
                        CompanyName,
                        PaymentDate,
                        SupervisionLicenseNo,
                        BuildingComplex,
                        RequestDate,
                        CreatedBy,
                        CreatedOn,
                        UpdatedBy,
                        UpdatedOn,
                        UnitNo,
                        owners,
                        DMSupervisionStatment};
                rowAlreadyPaidServicesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAlreadyPaidServicesRow);
                return rowAlreadyPaidServicesRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public AlreadyPaidServicesRow FindByID(int ID)
            {
                return ((AlreadyPaidServicesRow)(this.Rows.Find(new object[] {
                            ID})));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone()
            {
                AlreadyPaidServicesDataTable cln = ((AlreadyPaidServicesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new AlreadyPaidServicesDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars()
            {
                this.columnConsultantCrNo = base.Columns["ConsultantCrNo"];
                this.columnNumberOfFloors = base.Columns["NumberOfFloors"];
                this.columnConstructedArea = base.Columns["ConstructedArea"];
                this.columnLicenseNo = base.Columns["LicenseNo"];
                this.columnKrokiNO = base.Columns["KrokiNO"];
                this.columnDmFileNumber = base.Columns["DmFileNumber"];
                this.columnDMLicenseComments = base.Columns["DMLicenseComments"];
                this.columnLandArea = base.Columns["LandArea"];
                this.columnLandDeedReceiptDate = base.Columns["LandDeedReceiptDate"];
                this.columnLandDeedNo = base.Columns["LandDeedNo"];
                this.columnOwnerNotes = base.Columns["OwnerNotes"];
                this.columnConsultantNotes = base.Columns["ConsultantNotes"];
                this.columnFileNumber = base.Columns["FileNumber"];
                this.columnDmInspectorComments = base.Columns["DmInspectorComments"];
                this.columnID = base.Columns["ID"];
                this.columnWelyahArName = base.Columns["WelyahArName"];
                this.columnServiceNameAR = base.Columns["ServiceNameAR"];
                this.columnServiceNameEn = base.Columns["ServiceNameEn"];
                this.columnArLetter = base.Columns["ArLetter"];
                this.columnBuildingType = base.Columns["BuildingType"];
                this.columnUseType = base.Columns["UseType"];
                this.columnRegionArName = base.Columns["RegionArName"];
                this.columnRegionEnName = base.Columns["RegionEnName"];
                this.columnRegionCode = base.Columns["RegionCode"];
                this.columnDistrictNo = base.Columns["DistrictNo"];
                this.columnBldPermitID = base.Columns["BldPermitID"];
                this.columnContractor_Name = base.Columns["Contractor_Name"];
                this.columnContractor_CRNumber = base.Columns["Contractor_CRNumber"];
                this.columnContractor_CR_Number = base.Columns["Contractor_CR_Number"];
                this.columnReferenceid = base.Columns["Referenceid"];
                this.columnPaymentType = base.Columns["PaymentType"];
                this.columnPaymentID = base.Columns["PaymentID"];
                this.columnConsultantCivilId = base.Columns["ConsultantCivilId"];
                this.columnCompanyName = base.Columns["CompanyName"];
                this.columnPaymentDate = base.Columns["PaymentDate"];
                this.columnSupervisionLicenseNo = base.Columns["SupervisionLicenseNo"];
                this.columnBuildingComplex = base.Columns["BuildingComplex"];
                this.columnRequestDate = base.Columns["RequestDate"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedOn = base.Columns["CreatedOn"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnUpdatedOn = base.Columns["UpdatedOn"];
                this.columnUnitNo = base.Columns["UnitNo"];
                this.columnowners = base.Columns["owners"];
                this.columnDMSupervisionStatment = base.Columns["DMSupervisionStatment"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass()
            {
                this.columnConsultantCrNo = new global::System.Data.DataColumn("ConsultantCrNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsultantCrNo);
                this.columnNumberOfFloors = new global::System.Data.DataColumn("NumberOfFloors", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumberOfFloors);
                this.columnConstructedArea = new global::System.Data.DataColumn("ConstructedArea", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConstructedArea);
                this.columnLicenseNo = new global::System.Data.DataColumn("LicenseNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLicenseNo);
                this.columnKrokiNO = new global::System.Data.DataColumn("KrokiNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKrokiNO);
                this.columnDmFileNumber = new global::System.Data.DataColumn("DmFileNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDmFileNumber);
                this.columnDMLicenseComments = new global::System.Data.DataColumn("DMLicenseComments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDMLicenseComments);
                this.columnLandArea = new global::System.Data.DataColumn("LandArea", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandArea);
                this.columnLandDeedReceiptDate = new global::System.Data.DataColumn("LandDeedReceiptDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandDeedReceiptDate);
                this.columnLandDeedNo = new global::System.Data.DataColumn("LandDeedNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandDeedNo);
                this.columnOwnerNotes = new global::System.Data.DataColumn("OwnerNotes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnerNotes);
                this.columnConsultantNotes = new global::System.Data.DataColumn("ConsultantNotes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsultantNotes);
                this.columnFileNumber = new global::System.Data.DataColumn("FileNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFileNumber);
                this.columnDmInspectorComments = new global::System.Data.DataColumn("DmInspectorComments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDmInspectorComments);
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnWelyahArName = new global::System.Data.DataColumn("WelyahArName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWelyahArName);
                this.columnServiceNameAR = new global::System.Data.DataColumn("ServiceNameAR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceNameAR);
                this.columnServiceNameEn = new global::System.Data.DataColumn("ServiceNameEn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceNameEn);
                this.columnArLetter = new global::System.Data.DataColumn("ArLetter", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArLetter);
                this.columnBuildingType = new global::System.Data.DataColumn("BuildingType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBuildingType);
                this.columnUseType = new global::System.Data.DataColumn("UseType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUseType);
                this.columnRegionArName = new global::System.Data.DataColumn("RegionArName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegionArName);
                this.columnRegionEnName = new global::System.Data.DataColumn("RegionEnName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegionEnName);
                this.columnRegionCode = new global::System.Data.DataColumn("RegionCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegionCode);
                this.columnDistrictNo = new global::System.Data.DataColumn("DistrictNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrictNo);
                this.columnBldPermitID = new global::System.Data.DataColumn("BldPermitID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBldPermitID);
                this.columnContractor_Name = new global::System.Data.DataColumn("Contractor_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractor_Name);
                this.columnContractor_CRNumber = new global::System.Data.DataColumn("Contractor_CRNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractor_CRNumber);
                this.columnContractor_CR_Number = new global::System.Data.DataColumn("Contractor_CR_Number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractor_CR_Number);
                this.columnReferenceid = new global::System.Data.DataColumn("Referenceid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReferenceid);
                this.columnPaymentType = new global::System.Data.DataColumn("PaymentType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentType);
                this.columnPaymentID = new global::System.Data.DataColumn("PaymentID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentID);
                this.columnConsultantCivilId = new global::System.Data.DataColumn("ConsultantCivilId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsultantCivilId);
                this.columnCompanyName = new global::System.Data.DataColumn("CompanyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyName);
                this.columnPaymentDate = new global::System.Data.DataColumn("PaymentDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentDate);
                this.columnSupervisionLicenseNo = new global::System.Data.DataColumn("SupervisionLicenseNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupervisionLicenseNo);
                this.columnBuildingComplex = new global::System.Data.DataColumn("BuildingComplex", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBuildingComplex);
                this.columnRequestDate = new global::System.Data.DataColumn("RequestDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequestDate);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedOn = new global::System.Data.DataColumn("CreatedOn", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedOn);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnUpdatedOn = new global::System.Data.DataColumn("UpdatedOn", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedOn);
                this.columnUnitNo = new global::System.Data.DataColumn("UnitNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitNo);
                this.columnowners = new global::System.Data.DataColumn("owners", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnowners);
                this.columnDMSupervisionStatment = new global::System.Data.DataColumn("DMSupervisionStatment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDMSupervisionStatment);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnConsultantCrNo.AllowDBNull = false;
                this.columnNumberOfFloors.MaxLength = 50;
                this.columnConstructedArea.MaxLength = 50;
                this.columnLicenseNo.MaxLength = 100;
                this.columnKrokiNO.MaxLength = 50;
                this.columnDmFileNumber.MaxLength = 50;
                this.columnDMLicenseComments.MaxLength = 250;
                this.columnLandArea.MaxLength = 50;
                this.columnLandDeedNo.MaxLength = 50;
                this.columnOwnerNotes.MaxLength = 250;
                this.columnConsultantNotes.MaxLength = 250;
                this.columnFileNumber.MaxLength = 50;
                this.columnDmInspectorComments.MaxLength = 500;
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnWelyahArName.AllowDBNull = false;
                this.columnWelyahArName.MaxLength = 50;
                this.columnServiceNameAR.AllowDBNull = false;
                this.columnServiceNameAR.MaxLength = 100;
                this.columnServiceNameEn.MaxLength = 100;
                this.columnArLetter.MaxLength = 10;
                this.columnBuildingType.MaxLength = 50;
                this.columnUseType.MaxLength = 50;
                this.columnRegionArName.AllowDBNull = false;
                this.columnRegionArName.MaxLength = 50;
                this.columnRegionEnName.MaxLength = 50;
                this.columnRegionCode.AllowDBNull = false;
                this.columnBldPermitID.AllowDBNull = false;
                this.columnContractor_Name.MaxLength = 200;
                this.columnReferenceid.MaxLength = 200;
                this.columnCompanyName.MaxLength = 400;
                this.columnSupervisionLicenseNo.MaxLength = 100;
                this.columnBuildingComplex.MaxLength = 50;
                this.columnRequestDate.AllowDBNull = false;
                this.columnCreatedBy.MaxLength = 150;
                this.columnUpdatedBy.MaxLength = 150;
                this.columnUnitNo.MaxLength = 50;
                this.columnowners.ReadOnly = true;
                this.columnowners.MaxLength = 2147483647;
                this.columnDMSupervisionStatment.MaxLength = 250;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public AlreadyPaidServicesRow NewAlreadyPaidServicesRow()
            {
                return ((AlreadyPaidServicesRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new AlreadyPaidServicesRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType()
            {
                return typeof(AlreadyPaidServicesRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.AlreadyPaidServicesRowChanged != null))
                {
                    this.AlreadyPaidServicesRowChanged(this, new AlreadyPaidServicesRowChangeEvent(((AlreadyPaidServicesRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.AlreadyPaidServicesRowChanging != null))
                {
                    this.AlreadyPaidServicesRowChanging(this, new AlreadyPaidServicesRowChangeEvent(((AlreadyPaidServicesRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.AlreadyPaidServicesRowDeleted != null))
                {
                    this.AlreadyPaidServicesRowDeleted(this, new AlreadyPaidServicesRowChangeEvent(((AlreadyPaidServicesRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.AlreadyPaidServicesRowDeleting != null))
                {
                    this.AlreadyPaidServicesRowDeleting(this, new AlreadyPaidServicesRowChangeEvent(((AlreadyPaidServicesRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveAlreadyPaidServicesRow(AlreadyPaidServicesRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InternalEngineeringDataSet ds = new InternalEngineeringDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AlreadyPaidServicesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte()));)
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SpecialSignsDataTable : global::System.Data.TypedTableBase<SpecialSignsRow>
        {

            private global::System.Data.DataColumn columnID;

            private global::System.Data.DataColumn columnServiceTypeID;

            private global::System.Data.DataColumn columnStatus;

            private global::System.Data.DataColumn columnOwnerCivilId;

            private global::System.Data.DataColumn columnKrokiNO;

            private global::System.Data.DataColumn columnOwnerName;

            private global::System.Data.DataColumn columnOwnerPhoneNo;

            private global::System.Data.DataColumn columnCreatedBy;

            private global::System.Data.DataColumn columnCreatedOn;

            private global::System.Data.DataColumn columnUpdatedBy;

            private global::System.Data.DataColumn columnUpdatedOn;

            private global::System.Data.DataColumn columnLicenseNo;

            private global::System.Data.DataColumn columnServiceNameAR;

            private global::System.Data.DataColumn columnTransactNo;

            private global::System.Data.DataColumn columnWelayahID;

            private global::System.Data.DataColumn columnRegionID;

            private global::System.Data.DataColumn columnSquareLetterID;

            private global::System.Data.DataColumn columnDistrictNo;

            private global::System.Data.DataColumn columnUseTypeID;

            private global::System.Data.DataColumn columnLandArea;

            private global::System.Data.DataColumn columnDMSupervisionStatment;

            private global::System.Data.DataColumn columnRegionArName;

            private global::System.Data.DataColumn columnWelyahArName;

            private global::System.Data.DataColumn columnArLetter;

            private global::System.Data.DataColumn columnUseType;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SpecialSignsDataTable()
            {
                this.TableName = "SpecialSigns";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SpecialSignsDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SpecialSignsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IDColumn
            {
                get
                {
                    return this.columnID;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ServiceTypeIDColumn
            {
                get
                {
                    return this.columnServiceTypeID;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn StatusColumn
            {
                get
                {
                    return this.columnStatus;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OwnerCivilIdColumn
            {
                get
                {
                    return this.columnOwnerCivilId;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KrokiNOColumn
            {
                get
                {
                    return this.columnKrokiNO;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OwnerNameColumn
            {
                get
                {
                    return this.columnOwnerName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OwnerPhoneNoColumn
            {
                get
                {
                    return this.columnOwnerPhoneNo;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CreatedByColumn
            {
                get
                {
                    return this.columnCreatedBy;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CreatedOnColumn
            {
                get
                {
                    return this.columnCreatedOn;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UpdatedByColumn
            {
                get
                {
                    return this.columnUpdatedBy;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UpdatedOnColumn
            {
                get
                {
                    return this.columnUpdatedOn;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LicenseNoColumn
            {
                get
                {
                    return this.columnLicenseNo;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ServiceNameARColumn
            {
                get
                {
                    return this.columnServiceNameAR;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TransactNoColumn
            {
                get
                {
                    return this.columnTransactNo;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn WelayahIDColumn
            {
                get
                {
                    return this.columnWelayahID;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RegionIDColumn
            {
                get
                {
                    return this.columnRegionID;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SquareLetterIDColumn
            {
                get
                {
                    return this.columnSquareLetterID;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DistrictNoColumn
            {
                get
                {
                    return this.columnDistrictNo;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UseTypeIDColumn
            {
                get
                {
                    return this.columnUseTypeID;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LandAreaColumn
            {
                get
                {
                    return this.columnLandArea;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DMSupervisionStatmentColumn
            {
                get
                {
                    return this.columnDMSupervisionStatment;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RegionArNameColumn
            {
                get
                {
                    return this.columnRegionArName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn WelyahArNameColumn
            {
                get
                {
                    return this.columnWelyahArName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ArLetterColumn
            {
                get
                {
                    return this.columnArLetter;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UseTypeColumn
            {
                get
                {
                    return this.columnUseType;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SpecialSignsRow this[int index]
            {
                get
                {
                    return ((SpecialSignsRow)(this.Rows[index]));
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SpecialSignsRowChangeEventHandler SpecialSignsRowChanging;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SpecialSignsRowChangeEventHandler SpecialSignsRowChanged;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SpecialSignsRowChangeEventHandler SpecialSignsRowDeleting;

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SpecialSignsRowChangeEventHandler SpecialSignsRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSpecialSignsRow(SpecialSignsRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SpecialSignsRow AddSpecialSignsRow(
                        BldSupervisionServicesTypesRow parentBldSupervisionServicesTypesRowByFK_BldSupervisionServices_BldSupervisionServicesTypes1,
                        int Status,
                        int OwnerCivilId,
                        string KrokiNO,
                        string OwnerName,
                        string OwnerPhoneNo,
                        string CreatedBy,
                        System.DateTime CreatedOn,
                        string UpdatedBy,
                        System.DateTime UpdatedOn,
                        string LicenseNo,
                        string ServiceNameAR,
                        string TransactNo,
                        int WelayahID,
                        int RegionID,
                        int SquareLetterID,
                        int DistrictNo,
                        int UseTypeID,
                        string LandArea,
                        string DMSupervisionStatment,
                        string RegionArName,
                        string WelyahArName,
                        string ArLetter,
                        string UseType)
            {
                SpecialSignsRow rowSpecialSignsRow = ((SpecialSignsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        Status,
                        OwnerCivilId,
                        KrokiNO,
                        OwnerName,
                        OwnerPhoneNo,
                        CreatedBy,
                        CreatedOn,
                        UpdatedBy,
                        UpdatedOn,
                        LicenseNo,
                        ServiceNameAR,
                        TransactNo,
                        WelayahID,
                        RegionID,
                        SquareLetterID,
                        DistrictNo,
                        UseTypeID,
                        LandArea,
                        DMSupervisionStatment,
                        RegionArName,
                        WelyahArName,
                        ArLetter,
                        UseType};
                if ((parentBldSupervisionServicesTypesRowByFK_BldSupervisionServices_BldSupervisionServicesTypes1 != null))
                {
                    columnValuesArray[1] = parentBldSupervisionServicesTypesRowByFK_BldSupervisionServices_BldSupervisionServicesTypes1[0];
                }
                rowSpecialSignsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSpecialSignsRow);
                return rowSpecialSignsRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SpecialSignsRow FindByID(int ID)
            {
                return ((SpecialSignsRow)(this.Rows.Find(new object[] {
                            ID})));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone()
            {
                SpecialSignsDataTable cln = ((SpecialSignsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new SpecialSignsDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars()
            {
                this.columnID = base.Columns["ID"];
                this.columnServiceTypeID = base.Columns["ServiceTypeID"];
                this.columnStatus = base.Columns["Status"];
                this.columnOwnerCivilId = base.Columns["OwnerCivilId"];
                this.columnKrokiNO = base.Columns["KrokiNO"];
                this.columnOwnerName = base.Columns["OwnerName"];
                this.columnOwnerPhoneNo = base.Columns["OwnerPhoneNo"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedOn = base.Columns["CreatedOn"];
                this.columnUpdatedBy = base.Columns["UpdatedBy"];
                this.columnUpdatedOn = base.Columns["UpdatedOn"];
                this.columnLicenseNo = base.Columns["LicenseNo"];
                this.columnServiceNameAR = base.Columns["ServiceNameAR"];
                this.columnTransactNo = base.Columns["TransactNo"];
                this.columnWelayahID = base.Columns["WelayahID"];
                this.columnRegionID = base.Columns["RegionID"];
                this.columnSquareLetterID = base.Columns["SquareLetterID"];
                this.columnDistrictNo = base.Columns["DistrictNo"];
                this.columnUseTypeID = base.Columns["UseTypeID"];
                this.columnLandArea = base.Columns["LandArea"];
                this.columnDMSupervisionStatment = base.Columns["DMSupervisionStatment"];
                this.columnRegionArName = base.Columns["RegionArName"];
                this.columnWelyahArName = base.Columns["WelyahArName"];
                this.columnArLetter = base.Columns["ArLetter"];
                this.columnUseType = base.Columns["UseType"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass()
            {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnServiceTypeID = new global::System.Data.DataColumn("ServiceTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceTypeID);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnOwnerCivilId = new global::System.Data.DataColumn("OwnerCivilId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnerCivilId);
                this.columnKrokiNO = new global::System.Data.DataColumn("KrokiNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKrokiNO);
                this.columnOwnerName = new global::System.Data.DataColumn("OwnerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnerName);
                this.columnOwnerPhoneNo = new global::System.Data.DataColumn("OwnerPhoneNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnerPhoneNo);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedOn = new global::System.Data.DataColumn("CreatedOn", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedOn);
                this.columnUpdatedBy = new global::System.Data.DataColumn("UpdatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedBy);
                this.columnUpdatedOn = new global::System.Data.DataColumn("UpdatedOn", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedOn);
                this.columnLicenseNo = new global::System.Data.DataColumn("LicenseNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLicenseNo);
                this.columnServiceNameAR = new global::System.Data.DataColumn("ServiceNameAR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceNameAR);
                this.columnTransactNo = new global::System.Data.DataColumn("TransactNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransactNo);
                this.columnWelayahID = new global::System.Data.DataColumn("WelayahID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWelayahID);
                this.columnRegionID = new global::System.Data.DataColumn("RegionID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegionID);
                this.columnSquareLetterID = new global::System.Data.DataColumn("SquareLetterID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSquareLetterID);
                this.columnDistrictNo = new global::System.Data.DataColumn("DistrictNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrictNo);
                this.columnUseTypeID = new global::System.Data.DataColumn("UseTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUseTypeID);
                this.columnLandArea = new global::System.Data.DataColumn("LandArea", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandArea);
                this.columnDMSupervisionStatment = new global::System.Data.DataColumn("DMSupervisionStatment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDMSupervisionStatment);
                this.columnRegionArName = new global::System.Data.DataColumn("RegionArName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegionArName);
                this.columnWelyahArName = new global::System.Data.DataColumn("WelyahArName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWelyahArName);
                this.columnArLetter = new global::System.Data.DataColumn("ArLetter", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArLetter);
                this.columnUseType = new global::System.Data.DataColumn("UseType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUseType);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnServiceTypeID.AllowDBNull = false;
                this.columnKrokiNO.MaxLength = 50;
                this.columnOwnerName.MaxLength = 250;
                this.columnOwnerPhoneNo.MaxLength = 100;
                this.columnCreatedBy.MaxLength = 150;
                this.columnUpdatedBy.MaxLength = 150;
                this.columnLicenseNo.MaxLength = 100;
                this.columnServiceNameAR.AllowDBNull = false;
                this.columnServiceNameAR.MaxLength = 100;
                this.columnTransactNo.AllowDBNull = false;
                this.columnTransactNo.MaxLength = 400;
                this.columnLandArea.MaxLength = 50;
                this.columnDMSupervisionStatment.MaxLength = 250;
                this.columnRegionArName.AllowDBNull = false;
                this.columnRegionArName.MaxLength = 50;
                this.columnWelyahArName.AllowDBNull = false;
                this.columnWelyahArName.MaxLength = 50;
                this.columnArLetter.MaxLength = 10;
                this.columnUseType.MaxLength = 50;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SpecialSignsRow NewSpecialSignsRow()
            {
                return ((SpecialSignsRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new SpecialSignsRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType()
            {
                return typeof(SpecialSignsRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.SpecialSignsRowChanged != null))
                {
                    this.SpecialSignsRowChanged(this, new SpecialSignsRowChangeEvent(((SpecialSignsRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.SpecialSignsRowChanging != null))
                {
                    this.SpecialSignsRowChanging(this, new SpecialSignsRowChangeEvent(((SpecialSignsRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.SpecialSignsRowDeleted != null))
                {
                    this.SpecialSignsRowDeleted(this, new SpecialSignsRowChangeEvent(((SpecialSignsRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.SpecialSignsRowDeleting != null))
                {
                    this.SpecialSignsRowDeleting(this, new SpecialSignsRowChangeEvent(((SpecialSignsRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSpecialSignsRow(SpecialSignsRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InternalEngineeringDataSet ds = new InternalEngineeringDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SpecialSignsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte()));)
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class BldPermitsRow : global::System.Data.DataRow
        {

            private BldPermitsDataTable tableBldPermits;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal BldPermitsRow(global::System.Data.DataRowBuilder rb) :
                    base(rb)
            {
                this.tableBldPermits = ((BldPermitsDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Id
            {
                get
                {
                    return ((int)(this[this.tableBldPermits.IdColumn]));
                }
                set
                {
                    this[this.tableBldPermits.IdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TransactNo
            {
                get
                {
                    return ((string)(this[this.tableBldPermits.TransactNoColumn]));
                }
                set
                {
                    this[this.tableBldPermits.TransactNoColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string OwnerName
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldPermits.OwnerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'OwnerName\' in table \'BldPermits\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldPermits.OwnerNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int OwnerCivilId
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableBldPermits.OwnerCivilIdColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'OwnerCivilId\' in table \'BldPermits\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldPermits.OwnerCivilIdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string OwnerPhoneNo
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldPermits.OwnerPhoneNoColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'OwnerPhoneNo\' in table \'BldPermits\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldPermits.OwnerPhoneNoColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int DistrictNo
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableBldPermits.DistrictNoColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistrictNo\' in table \'BldPermits\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldPermits.DistrictNoColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ConstructedArea
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldPermits.ConstructedAreaColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConstructedArea\' in table \'BldPermits\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldPermits.ConstructedAreaColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NumberOfFloors
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldPermits.NumberOfFloorsColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumberOfFloors\' in table \'BldPermits\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldPermits.NumberOfFloorsColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ConsultantCrNo
            {
                get
                {
                    return ((int)(this[this.tableBldPermits.ConsultantCrNoColumn]));
                }
                set
                {
                    this[this.tableBldPermits.ConsultantCrNoColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime RequestDate
            {
                get
                {
                    return ((global::System.DateTime)(this[this.tableBldPermits.RequestDateColumn]));
                }
                set
                {
                    this[this.tableBldPermits.RequestDateColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CreatedBy
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldPermits.CreatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedBy\' in table \'BldPermits\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldPermits.CreatedByColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime CreatedOn
            {
                get
                {
                    try
                    {
                        return ((global::System.DateTime)(this[this.tableBldPermits.CreatedOnColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedOn\' in table \'BldPermits\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldPermits.CreatedOnColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string UpdatedBy
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldPermits.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'BldPermits\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldPermits.UpdatedByColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime UpdatedOn
            {
                get
                {
                    try
                    {
                        return ((global::System.DateTime)(this[this.tableBldPermits.UpdatedOnColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedOn\' in table \'BldPermits\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldPermits.UpdatedOnColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LicenseNo
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldPermits.LicenseNoColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LicenseNo\' in table \'BldPermits\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldPermits.LicenseNoColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int WorkflowStatus
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableBldPermits.WorkflowStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'WorkflowStatus\' in table \'BldPermits\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldPermits.WorkflowStatusColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int DmEngineerNo
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableBldPermits.DmEngineerNoColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DmEngineerNo\' in table \'BldPermits\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldPermits.DmEngineerNoColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DmEngineerComments
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldPermits.DmEngineerCommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DmEngineerComments\' in table \'BldPermits\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldPermits.DmEngineerCommentsColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ConsultantCivilId
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableBldPermits.ConsultantCivilIdColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConsultantCivilId\' in table \'BldPermits\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldPermits.ConsultantCivilIdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int WelayahID
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableBldPermits.WelayahIDColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'WelayahID\' in table \'BldPermits\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldPermits.WelayahIDColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int RegionID
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableBldPermits.RegionIDColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'RegionID\' in table \'BldPermits\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldPermits.RegionIDColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int SquareLetterID
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableBldPermits.SquareLetterIDColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'SquareLetterID\' in table \'BldPermits\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldPermits.SquareLetterIDColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int UseTypeID
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableBldPermits.UseTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'UseTypeID\' in table \'BldPermits\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldPermits.UseTypeIDColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int BuildingTypeID
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableBldPermits.BuildingTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'BuildingTypeID\' in table \'BldPermits\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldPermits.BuildingTypeIDColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string KrokiNO
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldPermits.KrokiNOColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'KrokiNO\' in table \'BldPermits\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldPermits.KrokiNOColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DmFileNumber
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldPermits.DmFileNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DmFileNumber\' in table \'BldPermits\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldPermits.DmFileNumberColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LandDeedReceiptNo
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldPermits.LandDeedReceiptNoColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LandDeedReceiptNo\' in table \'BldPermits\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldPermits.LandDeedReceiptNoColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DMLicenseComments
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldPermits.DMLicenseCommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DMLicenseComments\' in table \'BldPermits\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldPermits.DMLicenseCommentsColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LandArea
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldPermits.LandAreaColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LandArea\' in table \'BldPermits\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldPermits.LandAreaColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime LandDeedReceiptDate
            {
                get
                {
                    try
                    {
                        return ((global::System.DateTime)(this[this.tableBldPermits.LandDeedReceiptDateColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LandDeedReceiptDate\' in table \'BldPermits\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldPermits.LandDeedReceiptDateColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LandDeedNo
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldPermits.LandDeedNoColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LandDeedNo\' in table \'BldPermits\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldPermits.LandDeedNoColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BuildingType
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldPermits.BuildingTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'BuildingType\' in table \'BldPermits\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldPermits.BuildingTypeColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int RegionCode
            {
                get
                {
                    return ((int)(this[this.tableBldPermits.RegionCodeColumn]));
                }
                set
                {
                    this[this.tableBldPermits.RegionCodeColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RegionArName
            {
                get
                {
                    return ((string)(this[this.tableBldPermits.RegionArNameColumn]));
                }
                set
                {
                    this[this.tableBldPermits.RegionArNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string UseType
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldPermits.UseTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'UseType\' in table \'BldPermits\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldPermits.UseTypeColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string WelyahArName
            {
                get
                {
                    return ((string)(this[this.tableBldPermits.WelyahArNameColumn]));
                }
                set
                {
                    this[this.tableBldPermits.WelyahArNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ArLetter
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldPermits.ArLetterColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ArLetter\' in table \'BldPermits\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldPermits.ArLetterColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string owners
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldPermits.ownersColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'owners\' in table \'BldPermits\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldPermits.ownersColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ServiceName
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldPermits.ServiceNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceName\' in table \'BldPermits\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldPermits.ServiceNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BuildingComplex
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldPermits.BuildingComplexColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'BuildingComplex\' in table \'BldPermits\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldPermits.BuildingComplexColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string UnitNo
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldPermits.UnitNoColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitNo\' in table \'BldPermits\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldPermits.UnitNoColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string AppointmentStatus
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldPermits.AppointmentStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'AppointmentStatus\' in table \'BldPermits\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldPermits.AppointmentStatusColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime AppointmentDate
            {
                get
                {
                    try
                    {
                        return ((global::System.DateTime)(this[this.tableBldPermits.AppointmentDateColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'AppointmentDate\' in table \'BldPermits\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldPermits.AppointmentDateColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DMManagerNotes
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldPermits.DMManagerNotesColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DMManagerNotes\' in table \'BldPermits\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldPermits.DMManagerNotesColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DMEngineerNotes
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldPermits.DMEngineerNotesColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DMEngineerNotes\' in table \'BldPermits\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldPermits.DMEngineerNotesColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ContractorName
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldPermits.ContractorNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContractorName\' in table \'BldPermits\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldPermits.ContractorNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MLicenseStatement
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldPermits.MLicenseStatementColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'MLicenseStatement\' in table \'BldPermits\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldPermits.MLicenseStatementColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MLicenseNo
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldPermits.MLicenseNoColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'MLicenseNo\' in table \'BldPermits\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldPermits.MLicenseNoColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string FeesRefid
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldPermits.FeesRefidColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'FeesRefid\' in table \'BldPermits\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldPermits.FeesRefidColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string FeesPayOn
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldPermits.FeesPayOnColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'FeesPayOn\' in table \'BldPermits\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldPermits.FeesPayOnColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string InsuranceRefid
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldPermits.InsuranceRefidColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsuranceRefid\' in table \'BldPermits\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldPermits.InsuranceRefidColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string InsurancePayOn
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldPermits.InsurancePayOnColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsurancePayOn\' in table \'BldPermits\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldPermits.InsurancePayOnColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ServiceNameAR
            {
                get
                {
                    return ((string)(this[this.tableBldPermits.ServiceNameARColumn]));
                }
                set
                {
                    this[this.tableBldPermits.ServiceNameARColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldBuildingTypesRow BldBuildingTypesRow
            {
                get
                {
                    return ((BldBuildingTypesRow)(this.GetParentRow(this.Table.ParentRelations["FK_BldPermits_BldBuildingTypes"])));
                }
                set
                {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_BldPermits_BldBuildingTypes"]);
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldLandUseTypesRow BldLandUseTypesRow
            {
                get
                {
                    return ((BldLandUseTypesRow)(this.GetParentRow(this.Table.ParentRelations["FK_BldPermits_BldLandUseTypes"])));
                }
                set
                {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_BldPermits_BldLandUseTypes"]);
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldRegionsRow BldRegionsRow
            {
                get
                {
                    return ((BldRegionsRow)(this.GetParentRow(this.Table.ParentRelations["FK_BldPermits_BldRegions"])));
                }
                set
                {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_BldPermits_BldRegions"]);
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldSquareLettersRow BldSquareLettersRow
            {
                get
                {
                    return ((BldSquareLettersRow)(this.GetParentRow(this.Table.ParentRelations["FK_BldPermits_BldSquareLetters"])));
                }
                set
                {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_BldPermits_BldSquareLetters"]);
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldWelyatRow BldWelyatRow
            {
                get
                {
                    return ((BldWelyatRow)(this.GetParentRow(this.Table.ParentRelations["FK_BldPermits_BldWelyat"])));
                }
                set
                {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_BldPermits_BldWelyat"]);
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsOwnerNameNull()
            {
                return this.IsNull(this.tableBldPermits.OwnerNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetOwnerNameNull()
            {
                this[this.tableBldPermits.OwnerNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsOwnerCivilIdNull()
            {
                return this.IsNull(this.tableBldPermits.OwnerCivilIdColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetOwnerCivilIdNull()
            {
                this[this.tableBldPermits.OwnerCivilIdColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsOwnerPhoneNoNull()
            {
                return this.IsNull(this.tableBldPermits.OwnerPhoneNoColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetOwnerPhoneNoNull()
            {
                this[this.tableBldPermits.OwnerPhoneNoColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDistrictNoNull()
            {
                return this.IsNull(this.tableBldPermits.DistrictNoColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDistrictNoNull()
            {
                this[this.tableBldPermits.DistrictNoColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsConstructedAreaNull()
            {
                return this.IsNull(this.tableBldPermits.ConstructedAreaColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetConstructedAreaNull()
            {
                this[this.tableBldPermits.ConstructedAreaColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNumberOfFloorsNull()
            {
                return this.IsNull(this.tableBldPermits.NumberOfFloorsColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNumberOfFloorsNull()
            {
                this[this.tableBldPermits.NumberOfFloorsColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCreatedByNull()
            {
                return this.IsNull(this.tableBldPermits.CreatedByColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCreatedByNull()
            {
                this[this.tableBldPermits.CreatedByColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCreatedOnNull()
            {
                return this.IsNull(this.tableBldPermits.CreatedOnColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCreatedOnNull()
            {
                this[this.tableBldPermits.CreatedOnColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUpdatedByNull()
            {
                return this.IsNull(this.tableBldPermits.UpdatedByColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUpdatedByNull()
            {
                this[this.tableBldPermits.UpdatedByColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUpdatedOnNull()
            {
                return this.IsNull(this.tableBldPermits.UpdatedOnColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUpdatedOnNull()
            {
                this[this.tableBldPermits.UpdatedOnColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLicenseNoNull()
            {
                return this.IsNull(this.tableBldPermits.LicenseNoColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLicenseNoNull()
            {
                this[this.tableBldPermits.LicenseNoColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsWorkflowStatusNull()
            {
                return this.IsNull(this.tableBldPermits.WorkflowStatusColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetWorkflowStatusNull()
            {
                this[this.tableBldPermits.WorkflowStatusColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDmEngineerNoNull()
            {
                return this.IsNull(this.tableBldPermits.DmEngineerNoColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDmEngineerNoNull()
            {
                this[this.tableBldPermits.DmEngineerNoColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDmEngineerCommentsNull()
            {
                return this.IsNull(this.tableBldPermits.DmEngineerCommentsColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDmEngineerCommentsNull()
            {
                this[this.tableBldPermits.DmEngineerCommentsColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsConsultantCivilIdNull()
            {
                return this.IsNull(this.tableBldPermits.ConsultantCivilIdColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetConsultantCivilIdNull()
            {
                this[this.tableBldPermits.ConsultantCivilIdColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsWelayahIDNull()
            {
                return this.IsNull(this.tableBldPermits.WelayahIDColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetWelayahIDNull()
            {
                this[this.tableBldPermits.WelayahIDColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRegionIDNull()
            {
                return this.IsNull(this.tableBldPermits.RegionIDColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRegionIDNull()
            {
                this[this.tableBldPermits.RegionIDColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSquareLetterIDNull()
            {
                return this.IsNull(this.tableBldPermits.SquareLetterIDColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSquareLetterIDNull()
            {
                this[this.tableBldPermits.SquareLetterIDColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUseTypeIDNull()
            {
                return this.IsNull(this.tableBldPermits.UseTypeIDColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUseTypeIDNull()
            {
                this[this.tableBldPermits.UseTypeIDColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBuildingTypeIDNull()
            {
                return this.IsNull(this.tableBldPermits.BuildingTypeIDColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBuildingTypeIDNull()
            {
                this[this.tableBldPermits.BuildingTypeIDColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsKrokiNONull()
            {
                return this.IsNull(this.tableBldPermits.KrokiNOColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetKrokiNONull()
            {
                this[this.tableBldPermits.KrokiNOColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDmFileNumberNull()
            {
                return this.IsNull(this.tableBldPermits.DmFileNumberColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDmFileNumberNull()
            {
                this[this.tableBldPermits.DmFileNumberColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLandDeedReceiptNoNull()
            {
                return this.IsNull(this.tableBldPermits.LandDeedReceiptNoColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLandDeedReceiptNoNull()
            {
                this[this.tableBldPermits.LandDeedReceiptNoColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDMLicenseCommentsNull()
            {
                return this.IsNull(this.tableBldPermits.DMLicenseCommentsColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDMLicenseCommentsNull()
            {
                this[this.tableBldPermits.DMLicenseCommentsColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLandAreaNull()
            {
                return this.IsNull(this.tableBldPermits.LandAreaColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLandAreaNull()
            {
                this[this.tableBldPermits.LandAreaColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLandDeedReceiptDateNull()
            {
                return this.IsNull(this.tableBldPermits.LandDeedReceiptDateColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLandDeedReceiptDateNull()
            {
                this[this.tableBldPermits.LandDeedReceiptDateColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLandDeedNoNull()
            {
                return this.IsNull(this.tableBldPermits.LandDeedNoColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLandDeedNoNull()
            {
                this[this.tableBldPermits.LandDeedNoColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBuildingTypeNull()
            {
                return this.IsNull(this.tableBldPermits.BuildingTypeColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBuildingTypeNull()
            {
                this[this.tableBldPermits.BuildingTypeColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUseTypeNull()
            {
                return this.IsNull(this.tableBldPermits.UseTypeColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUseTypeNull()
            {
                this[this.tableBldPermits.UseTypeColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsArLetterNull()
            {
                return this.IsNull(this.tableBldPermits.ArLetterColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetArLetterNull()
            {
                this[this.tableBldPermits.ArLetterColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsownersNull()
            {
                return this.IsNull(this.tableBldPermits.ownersColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetownersNull()
            {
                this[this.tableBldPermits.ownersColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsServiceNameNull()
            {
                return this.IsNull(this.tableBldPermits.ServiceNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetServiceNameNull()
            {
                this[this.tableBldPermits.ServiceNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBuildingComplexNull()
            {
                return this.IsNull(this.tableBldPermits.BuildingComplexColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBuildingComplexNull()
            {
                this[this.tableBldPermits.BuildingComplexColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUnitNoNull()
            {
                return this.IsNull(this.tableBldPermits.UnitNoColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUnitNoNull()
            {
                this[this.tableBldPermits.UnitNoColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAppointmentStatusNull()
            {
                return this.IsNull(this.tableBldPermits.AppointmentStatusColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAppointmentStatusNull()
            {
                this[this.tableBldPermits.AppointmentStatusColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAppointmentDateNull()
            {
                return this.IsNull(this.tableBldPermits.AppointmentDateColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAppointmentDateNull()
            {
                this[this.tableBldPermits.AppointmentDateColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDMManagerNotesNull()
            {
                return this.IsNull(this.tableBldPermits.DMManagerNotesColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDMManagerNotesNull()
            {
                this[this.tableBldPermits.DMManagerNotesColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDMEngineerNotesNull()
            {
                return this.IsNull(this.tableBldPermits.DMEngineerNotesColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDMEngineerNotesNull()
            {
                this[this.tableBldPermits.DMEngineerNotesColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsContractorNameNull()
            {
                return this.IsNull(this.tableBldPermits.ContractorNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetContractorNameNull()
            {
                this[this.tableBldPermits.ContractorNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMLicenseStatementNull()
            {
                return this.IsNull(this.tableBldPermits.MLicenseStatementColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMLicenseStatementNull()
            {
                this[this.tableBldPermits.MLicenseStatementColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMLicenseNoNull()
            {
                return this.IsNull(this.tableBldPermits.MLicenseNoColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMLicenseNoNull()
            {
                this[this.tableBldPermits.MLicenseNoColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFeesRefidNull()
            {
                return this.IsNull(this.tableBldPermits.FeesRefidColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFeesRefidNull()
            {
                this[this.tableBldPermits.FeesRefidColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFeesPayOnNull()
            {
                return this.IsNull(this.tableBldPermits.FeesPayOnColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFeesPayOnNull()
            {
                this[this.tableBldPermits.FeesPayOnColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsInsuranceRefidNull()
            {
                return this.IsNull(this.tableBldPermits.InsuranceRefidColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetInsuranceRefidNull()
            {
                this[this.tableBldPermits.InsuranceRefidColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsInsurancePayOnNull()
            {
                return this.IsNull(this.tableBldPermits.InsurancePayOnColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetInsurancePayOnNull()
            {
                this[this.tableBldPermits.InsurancePayOnColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldPaymentRow[] GetBldPaymentRows()
            {
                if ((this.Table.ChildRelations["FK_BldPayment_BldPermits"] == null))
                {
                    return new BldPaymentRow[0];
                }
                else
                {
                    return ((BldPaymentRow[])(base.GetChildRows(this.Table.ChildRelations["FK_BldPayment_BldPermits"])));
                }
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class BldRegionsRow : global::System.Data.DataRow
        {

            private BldRegionsDataTable tableBldRegions;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal BldRegionsRow(global::System.Data.DataRowBuilder rb) :
                    base(rb)
            {
                this.tableBldRegions = ((BldRegionsDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int RegionID
            {
                get
                {
                    return ((int)(this[this.tableBldRegions.RegionIDColumn]));
                }
                set
                {
                    this[this.tableBldRegions.RegionIDColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int RegionCode
            {
                get
                {
                    return ((int)(this[this.tableBldRegions.RegionCodeColumn]));
                }
                set
                {
                    this[this.tableBldRegions.RegionCodeColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RegionEnName
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldRegions.RegionEnNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'RegionEnName\' in table \'BldRegions\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldRegions.RegionEnNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RegionArName
            {
                get
                {
                    return ((string)(this[this.tableBldRegions.RegionArNameColumn]));
                }
                set
                {
                    this[this.tableBldRegions.RegionArNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int WelyahID
            {
                get
                {
                    return ((int)(this[this.tableBldRegions.WelyahIDColumn]));
                }
                set
                {
                    this[this.tableBldRegions.WelyahIDColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldWelyatRow BldWelyatRow
            {
                get
                {
                    return ((BldWelyatRow)(this.GetParentRow(this.Table.ParentRelations["FK_BldRegions_BldWelyat"])));
                }
                set
                {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_BldRegions_BldWelyat"]);
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRegionEnNameNull()
            {
                return this.IsNull(this.tableBldRegions.RegionEnNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRegionEnNameNull()
            {
                this[this.tableBldRegions.RegionEnNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldPermitsRow[] GetBldPermitsRows()
            {
                if ((this.Table.ChildRelations["FK_BldPermits_BldRegions"] == null))
                {
                    return new BldPermitsRow[0];
                }
                else
                {
                    return ((BldPermitsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_BldPermits_BldRegions"])));
                }
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class BldSquareLettersRow : global::System.Data.DataRow
        {

            private BldSquareLettersDataTable tableBldSquareLetters;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal BldSquareLettersRow(global::System.Data.DataRowBuilder rb) :
                    base(rb)
            {
                this.tableBldSquareLetters = ((BldSquareLettersDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID
            {
                get
                {
                    return ((int)(this[this.tableBldSquareLetters.IDColumn]));
                }
                set
                {
                    this[this.tableBldSquareLetters.IDColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ArLetter
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldSquareLetters.ArLetterColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ArLetter\' in table \'BldSquareLetters\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldSquareLetters.ArLetterColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string EnLetter
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldSquareLetters.EnLetterColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'EnLetter\' in table \'BldSquareLetters\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldSquareLetters.EnLetterColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsArLetterNull()
            {
                return this.IsNull(this.tableBldSquareLetters.ArLetterColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetArLetterNull()
            {
                this[this.tableBldSquareLetters.ArLetterColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEnLetterNull()
            {
                return this.IsNull(this.tableBldSquareLetters.EnLetterColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEnLetterNull()
            {
                this[this.tableBldSquareLetters.EnLetterColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldPermitsRow[] GetBldPermitsRows()
            {
                if ((this.Table.ChildRelations["FK_BldPermits_BldSquareLetters"] == null))
                {
                    return new BldPermitsRow[0];
                }
                else
                {
                    return ((BldPermitsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_BldPermits_BldSquareLetters"])));
                }
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class BldWelyatRow : global::System.Data.DataRow
        {

            private BldWelyatDataTable tableBldWelyat;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal BldWelyatRow(global::System.Data.DataRowBuilder rb) :
                    base(rb)
            {
                this.tableBldWelyat = ((BldWelyatDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int WelyahID
            {
                get
                {
                    return ((int)(this[this.tableBldWelyat.WelyahIDColumn]));
                }
                set
                {
                    this[this.tableBldWelyat.WelyahIDColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int WelyahCode
            {
                get
                {
                    return ((int)(this[this.tableBldWelyat.WelyahCodeColumn]));
                }
                set
                {
                    this[this.tableBldWelyat.WelyahCodeColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string WelyahEnName
            {
                get
                {
                    return ((string)(this[this.tableBldWelyat.WelyahEnNameColumn]));
                }
                set
                {
                    this[this.tableBldWelyat.WelyahEnNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string WelyahArName
            {
                get
                {
                    return ((string)(this[this.tableBldWelyat.WelyahArNameColumn]));
                }
                set
                {
                    this[this.tableBldWelyat.WelyahArNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldPermitsRow[] GetBldPermitsRows()
            {
                if ((this.Table.ChildRelations["FK_BldPermits_BldWelyat"] == null))
                {
                    return new BldPermitsRow[0];
                }
                else
                {
                    return ((BldPermitsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_BldPermits_BldWelyat"])));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldRegionsRow[] GetBldRegionsRows()
            {
                if ((this.Table.ChildRelations["FK_BldRegions_BldWelyat"] == null))
                {
                    return new BldRegionsRow[0];
                }
                else
                {
                    return ((BldRegionsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_BldRegions_BldWelyat"])));
                }
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class BldPaymentRow : global::System.Data.DataRow
        {

            private BldPaymentDataTable tableBldPayment;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal BldPaymentRow(global::System.Data.DataRowBuilder rb) :
                    base(rb)
            {
                this.tableBldPayment = ((BldPaymentDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int PaymentID
            {
                get
                {
                    return ((int)(this[this.tableBldPayment.PaymentIDColumn]));
                }
                set
                {
                    this[this.tableBldPayment.PaymentIDColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int BldPermitId
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableBldPayment.BldPermitIdColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'BldPermitId\' in table \'BldPayment\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldPayment.BldPermitIdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal PaymentTotalAmount
            {
                get
                {
                    try
                    {
                        return ((decimal)(this[this.tableBldPayment.PaymentTotalAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaymentTotalAmount\' in table \'BldPayment\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldPayment.PaymentTotalAmountColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TokenID
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldPayment.TokenIDColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'TokenID\' in table \'BldPayment\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldPayment.TokenIDColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int BankResponseID
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableBldPayment.BankResponseIDColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankResponseID\' in table \'BldPayment\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldPayment.BankResponseIDColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime PaymentDate
            {
                get
                {
                    try
                    {
                        return ((global::System.DateTime)(this[this.tableBldPayment.PaymentDateColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaymentDate\' in table \'BldPayment\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldPayment.PaymentDateColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime FeesDate
            {
                get
                {
                    try
                    {
                        return ((global::System.DateTime)(this[this.tableBldPayment.FeesDateColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'FeesDate\' in table \'BldPayment\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldPayment.FeesDateColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int PaymentType
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableBldPayment.PaymentTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaymentType\' in table \'BldPayment\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldPayment.PaymentTypeColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Transactionid
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldPayment.TransactionidColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Transactionid\' in table \'BldPayment\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldPayment.TransactionidColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Paymentrequestid
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableBldPayment.PaymentrequestidColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Paymentrequestid\' in table \'BldPayment\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldPayment.PaymentrequestidColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Referenceid
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldPayment.ReferenceidColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Referenceid\' in table \'BldPayment\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldPayment.ReferenceidColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Bankpaymentid
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldPayment.BankpaymentidColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bankpaymentid\' in table \'BldPayment\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldPayment.BankpaymentidColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int PaymentStatus
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableBldPayment.PaymentStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaymentStatus\' in table \'BldPayment\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldPayment.PaymentStatusColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int SupervisionID
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableBldPayment.SupervisionIDColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'SupervisionID\' in table \'BldPayment\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldPayment.SupervisionIDColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldPermitsRow BldPermitsRow
            {
                get
                {
                    return ((BldPermitsRow)(this.GetParentRow(this.Table.ParentRelations["FK_BldPayment_BldPermits"])));
                }
                set
                {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_BldPayment_BldPermits"]);
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBldPermitIdNull()
            {
                return this.IsNull(this.tableBldPayment.BldPermitIdColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBldPermitIdNull()
            {
                this[this.tableBldPayment.BldPermitIdColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPaymentTotalAmountNull()
            {
                return this.IsNull(this.tableBldPayment.PaymentTotalAmountColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPaymentTotalAmountNull()
            {
                this[this.tableBldPayment.PaymentTotalAmountColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTokenIDNull()
            {
                return this.IsNull(this.tableBldPayment.TokenIDColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTokenIDNull()
            {
                this[this.tableBldPayment.TokenIDColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBankResponseIDNull()
            {
                return this.IsNull(this.tableBldPayment.BankResponseIDColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBankResponseIDNull()
            {
                this[this.tableBldPayment.BankResponseIDColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPaymentDateNull()
            {
                return this.IsNull(this.tableBldPayment.PaymentDateColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPaymentDateNull()
            {
                this[this.tableBldPayment.PaymentDateColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFeesDateNull()
            {
                return this.IsNull(this.tableBldPayment.FeesDateColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFeesDateNull()
            {
                this[this.tableBldPayment.FeesDateColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPaymentTypeNull()
            {
                return this.IsNull(this.tableBldPayment.PaymentTypeColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPaymentTypeNull()
            {
                this[this.tableBldPayment.PaymentTypeColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTransactionidNull()
            {
                return this.IsNull(this.tableBldPayment.TransactionidColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTransactionidNull()
            {
                this[this.tableBldPayment.TransactionidColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPaymentrequestidNull()
            {
                return this.IsNull(this.tableBldPayment.PaymentrequestidColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPaymentrequestidNull()
            {
                this[this.tableBldPayment.PaymentrequestidColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsReferenceidNull()
            {
                return this.IsNull(this.tableBldPayment.ReferenceidColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetReferenceidNull()
            {
                this[this.tableBldPayment.ReferenceidColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBankpaymentidNull()
            {
                return this.IsNull(this.tableBldPayment.BankpaymentidColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBankpaymentidNull()
            {
                this[this.tableBldPayment.BankpaymentidColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPaymentStatusNull()
            {
                return this.IsNull(this.tableBldPayment.PaymentStatusColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPaymentStatusNull()
            {
                this[this.tableBldPayment.PaymentStatusColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSupervisionIDNull()
            {
                return this.IsNull(this.tableBldPayment.SupervisionIDColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSupervisionIDNull()
            {
                this[this.tableBldPayment.SupervisionIDColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class BldBuildingTypesRow : global::System.Data.DataRow
        {

            private BldBuildingTypesDataTable tableBldBuildingTypes;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal BldBuildingTypesRow(global::System.Data.DataRowBuilder rb) :
                    base(rb)
            {
                this.tableBldBuildingTypes = ((BldBuildingTypesDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID
            {
                get
                {
                    return ((int)(this[this.tableBldBuildingTypes.IDColumn]));
                }
                set
                {
                    this[this.tableBldBuildingTypes.IDColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BuildingType
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldBuildingTypes.BuildingTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'BuildingType\' in table \'BldBuildingTypes\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldBuildingTypes.BuildingTypeColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBuildingTypeNull()
            {
                return this.IsNull(this.tableBldBuildingTypes.BuildingTypeColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBuildingTypeNull()
            {
                this[this.tableBldBuildingTypes.BuildingTypeColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldPermitsRow[] GetBldPermitsRows()
            {
                if ((this.Table.ChildRelations["FK_BldPermits_BldBuildingTypes"] == null))
                {
                    return new BldPermitsRow[0];
                }
                else
                {
                    return ((BldPermitsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_BldPermits_BldBuildingTypes"])));
                }
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class BldLandUseTypesRow : global::System.Data.DataRow
        {

            private BldLandUseTypesDataTable tableBldLandUseTypes;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal BldLandUseTypesRow(global::System.Data.DataRowBuilder rb) :
                    base(rb)
            {
                this.tableBldLandUseTypes = ((BldLandUseTypesDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID
            {
                get
                {
                    return ((int)(this[this.tableBldLandUseTypes.IDColumn]));
                }
                set
                {
                    this[this.tableBldLandUseTypes.IDColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string UseType
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldLandUseTypes.UseTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'UseType\' in table \'BldLandUseTypes\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldLandUseTypes.UseTypeColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUseTypeNull()
            {
                return this.IsNull(this.tableBldLandUseTypes.UseTypeColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUseTypeNull()
            {
                this[this.tableBldLandUseTypes.UseTypeColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldPermitsRow[] GetBldPermitsRows()
            {
                if ((this.Table.ChildRelations["FK_BldPermits_BldLandUseTypes"] == null))
                {
                    return new BldPermitsRow[0];
                }
                else
                {
                    return ((BldPermitsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_BldPermits_BldLandUseTypes"])));
                }
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class BldSupervisionServicesRow : global::System.Data.DataRow
        {

            private BldSupervisionServicesDataTable tableBldSupervisionServices;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal BldSupervisionServicesRow(global::System.Data.DataRowBuilder rb) :
                    base(rb)
            {
                this.tableBldSupervisionServices = ((BldSupervisionServicesDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID
            {
                get
                {
                    return ((int)(this[this.tableBldSupervisionServices.IDColumn]));
                }
                set
                {
                    this[this.tableBldSupervisionServices.IDColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string KrokiNO
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldSupervisionServices.KrokiNOColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'KrokiNO\' in table \'BldSupervisionServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldSupervisionServices.KrokiNOColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LicenseNo
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldSupervisionServices.LicenseNoColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LicenseNo\' in table \'BldSupervisionServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldSupervisionServices.LicenseNoColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DmFileNumber
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldSupervisionServices.DmFileNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DmFileNumber\' in table \'BldSupervisionServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldSupervisionServices.DmFileNumberColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DmInspectorComments
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldSupervisionServices.DmInspectorCommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DmInspectorComments\' in table \'BldSupervisionServices\' is D" +
                                "BNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldSupervisionServices.DmInspectorCommentsColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ConsultantNotes
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldSupervisionServices.ConsultantNotesColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConsultantNotes\' in table \'BldSupervisionServices\' is DBNul" +
                                "l.", e);
                    }
                }
                set
                {
                    this[this.tableBldSupervisionServices.ConsultantNotesColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string OwnerNotes
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldSupervisionServices.OwnerNotesColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'OwnerNotes\' in table \'BldSupervisionServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldSupervisionServices.OwnerNotesColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ConsultantCrNo
            {
                get
                {
                    return ((int)(this[this.tableBldSupervisionServices.ConsultantCrNoColumn]));
                }
                set
                {
                    this[this.tableBldSupervisionServices.ConsultantCrNoColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NumberOfFloors
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldSupervisionServices.NumberOfFloorsColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumberOfFloors\' in table \'BldSupervisionServices\' is DBNull" +
                                ".", e);
                    }
                }
                set
                {
                    this[this.tableBldSupervisionServices.NumberOfFloorsColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ConstructedArea
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldSupervisionServices.ConstructedAreaColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConstructedArea\' in table \'BldSupervisionServices\' is DBNul" +
                                "l.", e);
                    }
                }
                set
                {
                    this[this.tableBldSupervisionServices.ConstructedAreaColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DMLicenseComments
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldSupervisionServices.DMLicenseCommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DMLicenseComments\' in table \'BldSupervisionServices\' is DBN" +
                                "ull.", e);
                    }
                }
                set
                {
                    this[this.tableBldSupervisionServices.DMLicenseCommentsColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LandArea
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldSupervisionServices.LandAreaColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LandArea\' in table \'BldSupervisionServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldSupervisionServices.LandAreaColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime LandDeedReceiptDate
            {
                get
                {
                    try
                    {
                        return ((global::System.DateTime)(this[this.tableBldSupervisionServices.LandDeedReceiptDateColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LandDeedReceiptDate\' in table \'BldSupervisionServices\' is D" +
                                "BNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldSupervisionServices.LandDeedReceiptDateColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LandDeedNo
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldSupervisionServices.LandDeedNoColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LandDeedNo\' in table \'BldSupervisionServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldSupervisionServices.LandDeedNoColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string FileNumber
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldSupervisionServices.FileNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'FileNumber\' in table \'BldSupervisionServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldSupervisionServices.FileNumberColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string WelyahArName
            {
                get
                {
                    return ((string)(this[this.tableBldSupervisionServices.WelyahArNameColumn]));
                }
                set
                {
                    this[this.tableBldSupervisionServices.WelyahArNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ServiceNameAR
            {
                get
                {
                    return ((string)(this[this.tableBldSupervisionServices.ServiceNameARColumn]));
                }
                set
                {
                    this[this.tableBldSupervisionServices.ServiceNameARColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ServiceNameEn
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldSupervisionServices.ServiceNameEnColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceNameEn\' in table \'BldSupervisionServices\' is DBNull." +
                                "", e);
                    }
                }
                set
                {
                    this[this.tableBldSupervisionServices.ServiceNameEnColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ArLetter
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldSupervisionServices.ArLetterColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ArLetter\' in table \'BldSupervisionServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldSupervisionServices.ArLetterColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BuildingType
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldSupervisionServices.BuildingTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'BuildingType\' in table \'BldSupervisionServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldSupervisionServices.BuildingTypeColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string UseType
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldSupervisionServices.UseTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'UseType\' in table \'BldSupervisionServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldSupervisionServices.UseTypeColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RegionArName
            {
                get
                {
                    return ((string)(this[this.tableBldSupervisionServices.RegionArNameColumn]));
                }
                set
                {
                    this[this.tableBldSupervisionServices.RegionArNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RegionEnName
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldSupervisionServices.RegionEnNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'RegionEnName\' in table \'BldSupervisionServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldSupervisionServices.RegionEnNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int RegionCode
            {
                get
                {
                    return ((int)(this[this.tableBldSupervisionServices.RegionCodeColumn]));
                }
                set
                {
                    this[this.tableBldSupervisionServices.RegionCodeColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int DistrictNo
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableBldSupervisionServices.DistrictNoColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistrictNo\' in table \'BldSupervisionServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldSupervisionServices.DistrictNoColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int BldPermitID
            {
                get
                {
                    return ((int)(this[this.tableBldSupervisionServices.BldPermitIDColumn]));
                }
                set
                {
                    this[this.tableBldSupervisionServices.BldPermitIDColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Contractor_Name
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldSupervisionServices.Contractor_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Contractor_Name\' in table \'BldSupervisionServices\' is DBNul" +
                                "l.", e);
                    }
                }
                set
                {
                    this[this.tableBldSupervisionServices.Contractor_NameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Contractor_CRNumber
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableBldSupervisionServices.Contractor_CRNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Contractor_CRNumber\' in table \'BldSupervisionServices\' is D" +
                                "BNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldSupervisionServices.Contractor_CRNumberColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Contractor_CR_Number
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableBldSupervisionServices.Contractor_CR_NumberColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Contractor_CR_Number\' in table \'BldSupervisionServices\' is " +
                                "DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldSupervisionServices.Contractor_CR_NumberColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Referenceid
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldSupervisionServices.ReferenceidColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Referenceid\' in table \'BldSupervisionServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldSupervisionServices.ReferenceidColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int PaymentType
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableBldSupervisionServices.PaymentTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaymentType\' in table \'BldSupervisionServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldSupervisionServices.PaymentTypeColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int PaymentID
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableBldSupervisionServices.PaymentIDColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaymentID\' in table \'BldSupervisionServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldSupervisionServices.PaymentIDColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ConsultantCivilId
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableBldSupervisionServices.ConsultantCivilIdColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConsultantCivilId\' in table \'BldSupervisionServices\' is DBN" +
                                "ull.", e);
                    }
                }
                set
                {
                    this[this.tableBldSupervisionServices.ConsultantCivilIdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CompanyName
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldSupervisionServices.CompanyNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyName\' in table \'BldSupervisionServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldSupervisionServices.CompanyNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime PaymentDate
            {
                get
                {
                    try
                    {
                        return ((global::System.DateTime)(this[this.tableBldSupervisionServices.PaymentDateColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaymentDate\' in table \'BldSupervisionServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldSupervisionServices.PaymentDateColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SupervisionLicenseNo
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldSupervisionServices.SupervisionLicenseNoColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'SupervisionLicenseNo\' in table \'BldSupervisionServices\' is " +
                                "DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldSupervisionServices.SupervisionLicenseNoColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BuildingComplex
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldSupervisionServices.BuildingComplexColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'BuildingComplex\' in table \'BldSupervisionServices\' is DBNul" +
                                "l.", e);
                    }
                }
                set
                {
                    this[this.tableBldSupervisionServices.BuildingComplexColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime RequestDate
            {
                get
                {
                    return ((global::System.DateTime)(this[this.tableBldSupervisionServices.RequestDateColumn]));
                }
                set
                {
                    this[this.tableBldSupervisionServices.RequestDateColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CreatedBy
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldSupervisionServices.CreatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedBy\' in table \'BldSupervisionServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldSupervisionServices.CreatedByColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime CreatedOn
            {
                get
                {
                    try
                    {
                        return ((global::System.DateTime)(this[this.tableBldSupervisionServices.CreatedOnColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedOn\' in table \'BldSupervisionServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldSupervisionServices.CreatedOnColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string UpdatedBy
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldSupervisionServices.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'BldSupervisionServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldSupervisionServices.UpdatedByColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime UpdatedOn
            {
                get
                {
                    try
                    {
                        return ((global::System.DateTime)(this[this.tableBldSupervisionServices.UpdatedOnColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedOn\' in table \'BldSupervisionServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldSupervisionServices.UpdatedOnColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string UnitNo
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldSupervisionServices.UnitNoColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitNo\' in table \'BldSupervisionServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldSupervisionServices.UnitNoColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string owners
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldSupervisionServices.ownersColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'owners\' in table \'BldSupervisionServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldSupervisionServices.ownersColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DMSupervisionStatment
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldSupervisionServices.DMSupervisionStatmentColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DMSupervisionStatment\' in table \'BldSupervisionServices\' is" +
                                " DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableBldSupervisionServices.DMSupervisionStatmentColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsKrokiNONull()
            {
                return this.IsNull(this.tableBldSupervisionServices.KrokiNOColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetKrokiNONull()
            {
                this[this.tableBldSupervisionServices.KrokiNOColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLicenseNoNull()
            {
                return this.IsNull(this.tableBldSupervisionServices.LicenseNoColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLicenseNoNull()
            {
                this[this.tableBldSupervisionServices.LicenseNoColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDmFileNumberNull()
            {
                return this.IsNull(this.tableBldSupervisionServices.DmFileNumberColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDmFileNumberNull()
            {
                this[this.tableBldSupervisionServices.DmFileNumberColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDmInspectorCommentsNull()
            {
                return this.IsNull(this.tableBldSupervisionServices.DmInspectorCommentsColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDmInspectorCommentsNull()
            {
                this[this.tableBldSupervisionServices.DmInspectorCommentsColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsConsultantNotesNull()
            {
                return this.IsNull(this.tableBldSupervisionServices.ConsultantNotesColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetConsultantNotesNull()
            {
                this[this.tableBldSupervisionServices.ConsultantNotesColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsOwnerNotesNull()
            {
                return this.IsNull(this.tableBldSupervisionServices.OwnerNotesColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetOwnerNotesNull()
            {
                this[this.tableBldSupervisionServices.OwnerNotesColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNumberOfFloorsNull()
            {
                return this.IsNull(this.tableBldSupervisionServices.NumberOfFloorsColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNumberOfFloorsNull()
            {
                this[this.tableBldSupervisionServices.NumberOfFloorsColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsConstructedAreaNull()
            {
                return this.IsNull(this.tableBldSupervisionServices.ConstructedAreaColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetConstructedAreaNull()
            {
                this[this.tableBldSupervisionServices.ConstructedAreaColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDMLicenseCommentsNull()
            {
                return this.IsNull(this.tableBldSupervisionServices.DMLicenseCommentsColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDMLicenseCommentsNull()
            {
                this[this.tableBldSupervisionServices.DMLicenseCommentsColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLandAreaNull()
            {
                return this.IsNull(this.tableBldSupervisionServices.LandAreaColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLandAreaNull()
            {
                this[this.tableBldSupervisionServices.LandAreaColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLandDeedReceiptDateNull()
            {
                return this.IsNull(this.tableBldSupervisionServices.LandDeedReceiptDateColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLandDeedReceiptDateNull()
            {
                this[this.tableBldSupervisionServices.LandDeedReceiptDateColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLandDeedNoNull()
            {
                return this.IsNull(this.tableBldSupervisionServices.LandDeedNoColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLandDeedNoNull()
            {
                this[this.tableBldSupervisionServices.LandDeedNoColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFileNumberNull()
            {
                return this.IsNull(this.tableBldSupervisionServices.FileNumberColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFileNumberNull()
            {
                this[this.tableBldSupervisionServices.FileNumberColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsServiceNameEnNull()
            {
                return this.IsNull(this.tableBldSupervisionServices.ServiceNameEnColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetServiceNameEnNull()
            {
                this[this.tableBldSupervisionServices.ServiceNameEnColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsArLetterNull()
            {
                return this.IsNull(this.tableBldSupervisionServices.ArLetterColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetArLetterNull()
            {
                this[this.tableBldSupervisionServices.ArLetterColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBuildingTypeNull()
            {
                return this.IsNull(this.tableBldSupervisionServices.BuildingTypeColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBuildingTypeNull()
            {
                this[this.tableBldSupervisionServices.BuildingTypeColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUseTypeNull()
            {
                return this.IsNull(this.tableBldSupervisionServices.UseTypeColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUseTypeNull()
            {
                this[this.tableBldSupervisionServices.UseTypeColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRegionEnNameNull()
            {
                return this.IsNull(this.tableBldSupervisionServices.RegionEnNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRegionEnNameNull()
            {
                this[this.tableBldSupervisionServices.RegionEnNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDistrictNoNull()
            {
                return this.IsNull(this.tableBldSupervisionServices.DistrictNoColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDistrictNoNull()
            {
                this[this.tableBldSupervisionServices.DistrictNoColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsContractor_NameNull()
            {
                return this.IsNull(this.tableBldSupervisionServices.Contractor_NameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetContractor_NameNull()
            {
                this[this.tableBldSupervisionServices.Contractor_NameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsContractor_CRNumberNull()
            {
                return this.IsNull(this.tableBldSupervisionServices.Contractor_CRNumberColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetContractor_CRNumberNull()
            {
                this[this.tableBldSupervisionServices.Contractor_CRNumberColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsContractor_CR_NumberNull()
            {
                return this.IsNull(this.tableBldSupervisionServices.Contractor_CR_NumberColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetContractor_CR_NumberNull()
            {
                this[this.tableBldSupervisionServices.Contractor_CR_NumberColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsReferenceidNull()
            {
                return this.IsNull(this.tableBldSupervisionServices.ReferenceidColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetReferenceidNull()
            {
                this[this.tableBldSupervisionServices.ReferenceidColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPaymentTypeNull()
            {
                return this.IsNull(this.tableBldSupervisionServices.PaymentTypeColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPaymentTypeNull()
            {
                this[this.tableBldSupervisionServices.PaymentTypeColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPaymentIDNull()
            {
                return this.IsNull(this.tableBldSupervisionServices.PaymentIDColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPaymentIDNull()
            {
                this[this.tableBldSupervisionServices.PaymentIDColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsConsultantCivilIdNull()
            {
                return this.IsNull(this.tableBldSupervisionServices.ConsultantCivilIdColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetConsultantCivilIdNull()
            {
                this[this.tableBldSupervisionServices.ConsultantCivilIdColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCompanyNameNull()
            {
                return this.IsNull(this.tableBldSupervisionServices.CompanyNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCompanyNameNull()
            {
                this[this.tableBldSupervisionServices.CompanyNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPaymentDateNull()
            {
                return this.IsNull(this.tableBldSupervisionServices.PaymentDateColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPaymentDateNull()
            {
                this[this.tableBldSupervisionServices.PaymentDateColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSupervisionLicenseNoNull()
            {
                return this.IsNull(this.tableBldSupervisionServices.SupervisionLicenseNoColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSupervisionLicenseNoNull()
            {
                this[this.tableBldSupervisionServices.SupervisionLicenseNoColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBuildingComplexNull()
            {
                return this.IsNull(this.tableBldSupervisionServices.BuildingComplexColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBuildingComplexNull()
            {
                this[this.tableBldSupervisionServices.BuildingComplexColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCreatedByNull()
            {
                return this.IsNull(this.tableBldSupervisionServices.CreatedByColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCreatedByNull()
            {
                this[this.tableBldSupervisionServices.CreatedByColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCreatedOnNull()
            {
                return this.IsNull(this.tableBldSupervisionServices.CreatedOnColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCreatedOnNull()
            {
                this[this.tableBldSupervisionServices.CreatedOnColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUpdatedByNull()
            {
                return this.IsNull(this.tableBldSupervisionServices.UpdatedByColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUpdatedByNull()
            {
                this[this.tableBldSupervisionServices.UpdatedByColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUpdatedOnNull()
            {
                return this.IsNull(this.tableBldSupervisionServices.UpdatedOnColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUpdatedOnNull()
            {
                this[this.tableBldSupervisionServices.UpdatedOnColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUnitNoNull()
            {
                return this.IsNull(this.tableBldSupervisionServices.UnitNoColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUnitNoNull()
            {
                this[this.tableBldSupervisionServices.UnitNoColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsownersNull()
            {
                return this.IsNull(this.tableBldSupervisionServices.ownersColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetownersNull()
            {
                this[this.tableBldSupervisionServices.ownersColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDMSupervisionStatmentNull()
            {
                return this.IsNull(this.tableBldSupervisionServices.DMSupervisionStatmentColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDMSupervisionStatmentNull()
            {
                this[this.tableBldSupervisionServices.DMSupervisionStatmentColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class BldSupervisionServicesTypesRow : global::System.Data.DataRow
        {

            private BldSupervisionServicesTypesDataTable tableBldSupervisionServicesTypes;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal BldSupervisionServicesTypesRow(global::System.Data.DataRowBuilder rb) :
                    base(rb)
            {
                this.tableBldSupervisionServicesTypes = ((BldSupervisionServicesTypesDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID
            {
                get
                {
                    return ((int)(this[this.tableBldSupervisionServicesTypes.IDColumn]));
                }
                set
                {
                    this[this.tableBldSupervisionServicesTypes.IDColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ServiceNameAR
            {
                get
                {
                    return ((string)(this[this.tableBldSupervisionServicesTypes.ServiceNameARColumn]));
                }
                set
                {
                    this[this.tableBldSupervisionServicesTypes.ServiceNameARColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ServiceNameEn
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableBldSupervisionServicesTypes.ServiceNameEnColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceNameEn\' in table \'BldSupervisionServicesTypes\' is DB" +
                                "Null.", e);
                    }
                }
                set
                {
                    this[this.tableBldSupervisionServicesTypes.ServiceNameEnColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ServiceStatus
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableBldSupervisionServicesTypes.ServiceStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceStatus\' in table \'BldSupervisionServicesTypes\' is DB" +
                                "Null.", e);
                    }
                }
                set
                {
                    this[this.tableBldSupervisionServicesTypes.ServiceStatusColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsServiceNameEnNull()
            {
                return this.IsNull(this.tableBldSupervisionServicesTypes.ServiceNameEnColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetServiceNameEnNull()
            {
                this[this.tableBldSupervisionServicesTypes.ServiceNameEnColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsServiceStatusNull()
            {
                return this.IsNull(this.tableBldSupervisionServicesTypes.ServiceStatusColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetServiceStatusNull()
            {
                this[this.tableBldSupervisionServicesTypes.ServiceStatusColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public UnpaidServicesRow[] GetUnpaidServicesRows()
            {
                if ((this.Table.ChildRelations["FK_BldSupervisionServices_BldSupervisionServicesTypes"] == null))
                {
                    return new UnpaidServicesRow[0];
                }
                else
                {
                    return ((UnpaidServicesRow[])(base.GetChildRows(this.Table.ChildRelations["FK_BldSupervisionServices_BldSupervisionServicesTypes"])));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SpecialSignsRow[] GetSpecialSignsRows()
            {
                if ((this.Table.ChildRelations["FK_BldSupervisionServices_BldSupervisionServicesTypes1"] == null))
                {
                    return new SpecialSignsRow[0];
                }
                else
                {
                    return ((SpecialSignsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_BldSupervisionServices_BldSupervisionServicesTypes1"])));
                }
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class UnpaidServicesRow : global::System.Data.DataRow
        {

            private UnpaidServicesDataTable tableUnpaidServices;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal UnpaidServicesRow(global::System.Data.DataRowBuilder rb) :
                    base(rb)
            {
                this.tableUnpaidServices = ((UnpaidServicesDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ConsultantCrNo
            {
                get
                {
                    return ((int)(this[this.tableUnpaidServices.ConsultantCrNoColumn]));
                }
                set
                {
                    this[this.tableUnpaidServices.ConsultantCrNoColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NumberOfFloors
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableUnpaidServices.NumberOfFloorsColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumberOfFloors\' in table \'UnpaidServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableUnpaidServices.NumberOfFloorsColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ConstructedArea
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableUnpaidServices.ConstructedAreaColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConstructedArea\' in table \'UnpaidServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableUnpaidServices.ConstructedAreaColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LicenseNo
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableUnpaidServices.LicenseNoColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LicenseNo\' in table \'UnpaidServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableUnpaidServices.LicenseNoColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string KrokiNO
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableUnpaidServices.KrokiNOColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'KrokiNO\' in table \'UnpaidServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableUnpaidServices.KrokiNOColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DmFileNumber
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableUnpaidServices.DmFileNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DmFileNumber\' in table \'UnpaidServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableUnpaidServices.DmFileNumberColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DMLicenseComments
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableUnpaidServices.DMLicenseCommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DMLicenseComments\' in table \'UnpaidServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableUnpaidServices.DMLicenseCommentsColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LandArea
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableUnpaidServices.LandAreaColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LandArea\' in table \'UnpaidServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableUnpaidServices.LandAreaColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime LandDeedReceiptDate
            {
                get
                {
                    try
                    {
                        return ((global::System.DateTime)(this[this.tableUnpaidServices.LandDeedReceiptDateColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LandDeedReceiptDate\' in table \'UnpaidServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableUnpaidServices.LandDeedReceiptDateColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LandDeedNo
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableUnpaidServices.LandDeedNoColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LandDeedNo\' in table \'UnpaidServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableUnpaidServices.LandDeedNoColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string OwnerNotes
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableUnpaidServices.OwnerNotesColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'OwnerNotes\' in table \'UnpaidServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableUnpaidServices.OwnerNotesColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ConsultantNotes
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableUnpaidServices.ConsultantNotesColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConsultantNotes\' in table \'UnpaidServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableUnpaidServices.ConsultantNotesColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string FileNumber
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableUnpaidServices.FileNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'FileNumber\' in table \'UnpaidServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableUnpaidServices.FileNumberColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DmInspectorComments
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableUnpaidServices.DmInspectorCommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DmInspectorComments\' in table \'UnpaidServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableUnpaidServices.DmInspectorCommentsColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TransactNo
            {
                get
                {
                    return ((string)(this[this.tableUnpaidServices.TransactNoColumn]));
                }
                set
                {
                    this[this.tableUnpaidServices.TransactNoColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID
            {
                get
                {
                    return ((int)(this[this.tableUnpaidServices.IDColumn]));
                }
                set
                {
                    this[this.tableUnpaidServices.IDColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string WelyahArName
            {
                get
                {
                    return ((string)(this[this.tableUnpaidServices.WelyahArNameColumn]));
                }
                set
                {
                    this[this.tableUnpaidServices.WelyahArNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string WelyahEnName
            {
                get
                {
                    return ((string)(this[this.tableUnpaidServices.WelyahEnNameColumn]));
                }
                set
                {
                    this[this.tableUnpaidServices.WelyahEnNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int WelyahCode
            {
                get
                {
                    return ((int)(this[this.tableUnpaidServices.WelyahCodeColumn]));
                }
                set
                {
                    this[this.tableUnpaidServices.WelyahCodeColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ServiceNameAR
            {
                get
                {
                    return ((string)(this[this.tableUnpaidServices.ServiceNameARColumn]));
                }
                set
                {
                    this[this.tableUnpaidServices.ServiceNameARColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ServiceNameEn
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableUnpaidServices.ServiceNameEnColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceNameEn\' in table \'UnpaidServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableUnpaidServices.ServiceNameEnColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ArLetter
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableUnpaidServices.ArLetterColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ArLetter\' in table \'UnpaidServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableUnpaidServices.ArLetterColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string EnLetter
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableUnpaidServices.EnLetterColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'EnLetter\' in table \'UnpaidServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableUnpaidServices.EnLetterColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BuildingType
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableUnpaidServices.BuildingTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'BuildingType\' in table \'UnpaidServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableUnpaidServices.BuildingTypeColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string UseType
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableUnpaidServices.UseTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'UseType\' in table \'UnpaidServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableUnpaidServices.UseTypeColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RegionArName
            {
                get
                {
                    return ((string)(this[this.tableUnpaidServices.RegionArNameColumn]));
                }
                set
                {
                    this[this.tableUnpaidServices.RegionArNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RegionEnName
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableUnpaidServices.RegionEnNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'RegionEnName\' in table \'UnpaidServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableUnpaidServices.RegionEnNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int RegionCode
            {
                get
                {
                    return ((int)(this[this.tableUnpaidServices.RegionCodeColumn]));
                }
                set
                {
                    this[this.tableUnpaidServices.RegionCodeColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int DistrictNo
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableUnpaidServices.DistrictNoColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistrictNo\' in table \'UnpaidServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableUnpaidServices.DistrictNoColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int BldPermitID
            {
                get
                {
                    return ((int)(this[this.tableUnpaidServices.BldPermitIDColumn]));
                }
                set
                {
                    this[this.tableUnpaidServices.BldPermitIDColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Contractor_CR_Number
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableUnpaidServices.Contractor_CR_NumberColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Contractor_CR_Number\' in table \'UnpaidServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableUnpaidServices.Contractor_CR_NumberColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ConsultantCivilId
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableUnpaidServices.ConsultantCivilIdColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConsultantCivilId\' in table \'UnpaidServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableUnpaidServices.ConsultantCivilIdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SupervisionLicenseNo
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableUnpaidServices.SupervisionLicenseNoColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'SupervisionLicenseNo\' in table \'UnpaidServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableUnpaidServices.SupervisionLicenseNoColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string owners
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableUnpaidServices.ownersColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'owners\' in table \'UnpaidServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableUnpaidServices.ownersColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DMSupervisionStatment
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableUnpaidServices.DMSupervisionStatmentColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DMSupervisionStatment\' in table \'UnpaidServices\' is DBNull." +
                                "", e);
                    }
                }
                set
                {
                    this[this.tableUnpaidServices.DMSupervisionStatmentColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ServiceTypeID
            {
                get
                {
                    return ((int)(this[this.tableUnpaidServices.ServiceTypeIDColumn]));
                }
                set
                {
                    this[this.tableUnpaidServices.ServiceTypeIDColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int OwnerCivilId
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableUnpaidServices.OwnerCivilIdColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'OwnerCivilId\' in table \'UnpaidServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableUnpaidServices.OwnerCivilIdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string OwnerName
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableUnpaidServices.OwnerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'OwnerName\' in table \'UnpaidServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableUnpaidServices.OwnerNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldSupervisionServicesTypesRow BldSupervisionServicesTypesRow
            {
                get
                {
                    return ((BldSupervisionServicesTypesRow)(this.GetParentRow(this.Table.ParentRelations["FK_BldSupervisionServices_BldSupervisionServicesTypes"])));
                }
                set
                {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_BldSupervisionServices_BldSupervisionServicesTypes"]);
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNumberOfFloorsNull()
            {
                return this.IsNull(this.tableUnpaidServices.NumberOfFloorsColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNumberOfFloorsNull()
            {
                this[this.tableUnpaidServices.NumberOfFloorsColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsConstructedAreaNull()
            {
                return this.IsNull(this.tableUnpaidServices.ConstructedAreaColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetConstructedAreaNull()
            {
                this[this.tableUnpaidServices.ConstructedAreaColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLicenseNoNull()
            {
                return this.IsNull(this.tableUnpaidServices.LicenseNoColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLicenseNoNull()
            {
                this[this.tableUnpaidServices.LicenseNoColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsKrokiNONull()
            {
                return this.IsNull(this.tableUnpaidServices.KrokiNOColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetKrokiNONull()
            {
                this[this.tableUnpaidServices.KrokiNOColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDmFileNumberNull()
            {
                return this.IsNull(this.tableUnpaidServices.DmFileNumberColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDmFileNumberNull()
            {
                this[this.tableUnpaidServices.DmFileNumberColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDMLicenseCommentsNull()
            {
                return this.IsNull(this.tableUnpaidServices.DMLicenseCommentsColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDMLicenseCommentsNull()
            {
                this[this.tableUnpaidServices.DMLicenseCommentsColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLandAreaNull()
            {
                return this.IsNull(this.tableUnpaidServices.LandAreaColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLandAreaNull()
            {
                this[this.tableUnpaidServices.LandAreaColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLandDeedReceiptDateNull()
            {
                return this.IsNull(this.tableUnpaidServices.LandDeedReceiptDateColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLandDeedReceiptDateNull()
            {
                this[this.tableUnpaidServices.LandDeedReceiptDateColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLandDeedNoNull()
            {
                return this.IsNull(this.tableUnpaidServices.LandDeedNoColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLandDeedNoNull()
            {
                this[this.tableUnpaidServices.LandDeedNoColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsOwnerNotesNull()
            {
                return this.IsNull(this.tableUnpaidServices.OwnerNotesColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetOwnerNotesNull()
            {
                this[this.tableUnpaidServices.OwnerNotesColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsConsultantNotesNull()
            {
                return this.IsNull(this.tableUnpaidServices.ConsultantNotesColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetConsultantNotesNull()
            {
                this[this.tableUnpaidServices.ConsultantNotesColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFileNumberNull()
            {
                return this.IsNull(this.tableUnpaidServices.FileNumberColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFileNumberNull()
            {
                this[this.tableUnpaidServices.FileNumberColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDmInspectorCommentsNull()
            {
                return this.IsNull(this.tableUnpaidServices.DmInspectorCommentsColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDmInspectorCommentsNull()
            {
                this[this.tableUnpaidServices.DmInspectorCommentsColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsServiceNameEnNull()
            {
                return this.IsNull(this.tableUnpaidServices.ServiceNameEnColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetServiceNameEnNull()
            {
                this[this.tableUnpaidServices.ServiceNameEnColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsArLetterNull()
            {
                return this.IsNull(this.tableUnpaidServices.ArLetterColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetArLetterNull()
            {
                this[this.tableUnpaidServices.ArLetterColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEnLetterNull()
            {
                return this.IsNull(this.tableUnpaidServices.EnLetterColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEnLetterNull()
            {
                this[this.tableUnpaidServices.EnLetterColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBuildingTypeNull()
            {
                return this.IsNull(this.tableUnpaidServices.BuildingTypeColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBuildingTypeNull()
            {
                this[this.tableUnpaidServices.BuildingTypeColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUseTypeNull()
            {
                return this.IsNull(this.tableUnpaidServices.UseTypeColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUseTypeNull()
            {
                this[this.tableUnpaidServices.UseTypeColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRegionEnNameNull()
            {
                return this.IsNull(this.tableUnpaidServices.RegionEnNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRegionEnNameNull()
            {
                this[this.tableUnpaidServices.RegionEnNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDistrictNoNull()
            {
                return this.IsNull(this.tableUnpaidServices.DistrictNoColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDistrictNoNull()
            {
                this[this.tableUnpaidServices.DistrictNoColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsContractor_CR_NumberNull()
            {
                return this.IsNull(this.tableUnpaidServices.Contractor_CR_NumberColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetContractor_CR_NumberNull()
            {
                this[this.tableUnpaidServices.Contractor_CR_NumberColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsConsultantCivilIdNull()
            {
                return this.IsNull(this.tableUnpaidServices.ConsultantCivilIdColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetConsultantCivilIdNull()
            {
                this[this.tableUnpaidServices.ConsultantCivilIdColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSupervisionLicenseNoNull()
            {
                return this.IsNull(this.tableUnpaidServices.SupervisionLicenseNoColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSupervisionLicenseNoNull()
            {
                this[this.tableUnpaidServices.SupervisionLicenseNoColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsownersNull()
            {
                return this.IsNull(this.tableUnpaidServices.ownersColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetownersNull()
            {
                this[this.tableUnpaidServices.ownersColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDMSupervisionStatmentNull()
            {
                return this.IsNull(this.tableUnpaidServices.DMSupervisionStatmentColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDMSupervisionStatmentNull()
            {
                this[this.tableUnpaidServices.DMSupervisionStatmentColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsOwnerCivilIdNull()
            {
                return this.IsNull(this.tableUnpaidServices.OwnerCivilIdColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetOwnerCivilIdNull()
            {
                this[this.tableUnpaidServices.OwnerCivilIdColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsOwnerNameNull()
            {
                return this.IsNull(this.tableUnpaidServices.OwnerNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetOwnerNameNull()
            {
                this[this.tableUnpaidServices.OwnerNameColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class AlreadyPaidServicesRow : global::System.Data.DataRow
        {

            private AlreadyPaidServicesDataTable tableAlreadyPaidServices;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal AlreadyPaidServicesRow(global::System.Data.DataRowBuilder rb) :
                    base(rb)
            {
                this.tableAlreadyPaidServices = ((AlreadyPaidServicesDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ConsultantCrNo
            {
                get
                {
                    return ((int)(this[this.tableAlreadyPaidServices.ConsultantCrNoColumn]));
                }
                set
                {
                    this[this.tableAlreadyPaidServices.ConsultantCrNoColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NumberOfFloors
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableAlreadyPaidServices.NumberOfFloorsColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumberOfFloors\' in table \'AlreadyPaidServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableAlreadyPaidServices.NumberOfFloorsColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ConstructedArea
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableAlreadyPaidServices.ConstructedAreaColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConstructedArea\' in table \'AlreadyPaidServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableAlreadyPaidServices.ConstructedAreaColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LicenseNo
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableAlreadyPaidServices.LicenseNoColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LicenseNo\' in table \'AlreadyPaidServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableAlreadyPaidServices.LicenseNoColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string KrokiNO
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableAlreadyPaidServices.KrokiNOColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'KrokiNO\' in table \'AlreadyPaidServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableAlreadyPaidServices.KrokiNOColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DmFileNumber
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableAlreadyPaidServices.DmFileNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DmFileNumber\' in table \'AlreadyPaidServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableAlreadyPaidServices.DmFileNumberColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DMLicenseComments
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableAlreadyPaidServices.DMLicenseCommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DMLicenseComments\' in table \'AlreadyPaidServices\' is DBNull" +
                                ".", e);
                    }
                }
                set
                {
                    this[this.tableAlreadyPaidServices.DMLicenseCommentsColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LandArea
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableAlreadyPaidServices.LandAreaColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LandArea\' in table \'AlreadyPaidServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableAlreadyPaidServices.LandAreaColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime LandDeedReceiptDate
            {
                get
                {
                    try
                    {
                        return ((global::System.DateTime)(this[this.tableAlreadyPaidServices.LandDeedReceiptDateColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LandDeedReceiptDate\' in table \'AlreadyPaidServices\' is DBNu" +
                                "ll.", e);
                    }
                }
                set
                {
                    this[this.tableAlreadyPaidServices.LandDeedReceiptDateColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LandDeedNo
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableAlreadyPaidServices.LandDeedNoColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LandDeedNo\' in table \'AlreadyPaidServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableAlreadyPaidServices.LandDeedNoColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string OwnerNotes
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableAlreadyPaidServices.OwnerNotesColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'OwnerNotes\' in table \'AlreadyPaidServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableAlreadyPaidServices.OwnerNotesColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ConsultantNotes
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableAlreadyPaidServices.ConsultantNotesColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConsultantNotes\' in table \'AlreadyPaidServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableAlreadyPaidServices.ConsultantNotesColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string FileNumber
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableAlreadyPaidServices.FileNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'FileNumber\' in table \'AlreadyPaidServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableAlreadyPaidServices.FileNumberColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DmInspectorComments
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableAlreadyPaidServices.DmInspectorCommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DmInspectorComments\' in table \'AlreadyPaidServices\' is DBNu" +
                                "ll.", e);
                    }
                }
                set
                {
                    this[this.tableAlreadyPaidServices.DmInspectorCommentsColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID
            {
                get
                {
                    return ((int)(this[this.tableAlreadyPaidServices.IDColumn]));
                }
                set
                {
                    this[this.tableAlreadyPaidServices.IDColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string WelyahArName
            {
                get
                {
                    return ((string)(this[this.tableAlreadyPaidServices.WelyahArNameColumn]));
                }
                set
                {
                    this[this.tableAlreadyPaidServices.WelyahArNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ServiceNameAR
            {
                get
                {
                    return ((string)(this[this.tableAlreadyPaidServices.ServiceNameARColumn]));
                }
                set
                {
                    this[this.tableAlreadyPaidServices.ServiceNameARColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ServiceNameEn
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableAlreadyPaidServices.ServiceNameEnColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceNameEn\' in table \'AlreadyPaidServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableAlreadyPaidServices.ServiceNameEnColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ArLetter
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableAlreadyPaidServices.ArLetterColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ArLetter\' in table \'AlreadyPaidServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableAlreadyPaidServices.ArLetterColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BuildingType
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableAlreadyPaidServices.BuildingTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'BuildingType\' in table \'AlreadyPaidServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableAlreadyPaidServices.BuildingTypeColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string UseType
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableAlreadyPaidServices.UseTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'UseType\' in table \'AlreadyPaidServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableAlreadyPaidServices.UseTypeColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RegionArName
            {
                get
                {
                    return ((string)(this[this.tableAlreadyPaidServices.RegionArNameColumn]));
                }
                set
                {
                    this[this.tableAlreadyPaidServices.RegionArNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RegionEnName
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableAlreadyPaidServices.RegionEnNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'RegionEnName\' in table \'AlreadyPaidServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableAlreadyPaidServices.RegionEnNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int RegionCode
            {
                get
                {
                    return ((int)(this[this.tableAlreadyPaidServices.RegionCodeColumn]));
                }
                set
                {
                    this[this.tableAlreadyPaidServices.RegionCodeColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int DistrictNo
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableAlreadyPaidServices.DistrictNoColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistrictNo\' in table \'AlreadyPaidServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableAlreadyPaidServices.DistrictNoColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int BldPermitID
            {
                get
                {
                    return ((int)(this[this.tableAlreadyPaidServices.BldPermitIDColumn]));
                }
                set
                {
                    this[this.tableAlreadyPaidServices.BldPermitIDColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Contractor_Name
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableAlreadyPaidServices.Contractor_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Contractor_Name\' in table \'AlreadyPaidServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableAlreadyPaidServices.Contractor_NameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Contractor_CRNumber
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableAlreadyPaidServices.Contractor_CRNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Contractor_CRNumber\' in table \'AlreadyPaidServices\' is DBNu" +
                                "ll.", e);
                    }
                }
                set
                {
                    this[this.tableAlreadyPaidServices.Contractor_CRNumberColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Contractor_CR_Number
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableAlreadyPaidServices.Contractor_CR_NumberColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Contractor_CR_Number\' in table \'AlreadyPaidServices\' is DBN" +
                                "ull.", e);
                    }
                }
                set
                {
                    this[this.tableAlreadyPaidServices.Contractor_CR_NumberColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Referenceid
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableAlreadyPaidServices.ReferenceidColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Referenceid\' in table \'AlreadyPaidServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableAlreadyPaidServices.ReferenceidColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int PaymentType
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableAlreadyPaidServices.PaymentTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaymentType\' in table \'AlreadyPaidServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableAlreadyPaidServices.PaymentTypeColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int PaymentID
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableAlreadyPaidServices.PaymentIDColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaymentID\' in table \'AlreadyPaidServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableAlreadyPaidServices.PaymentIDColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ConsultantCivilId
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableAlreadyPaidServices.ConsultantCivilIdColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConsultantCivilId\' in table \'AlreadyPaidServices\' is DBNull" +
                                ".", e);
                    }
                }
                set
                {
                    this[this.tableAlreadyPaidServices.ConsultantCivilIdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CompanyName
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableAlreadyPaidServices.CompanyNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyName\' in table \'AlreadyPaidServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableAlreadyPaidServices.CompanyNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime PaymentDate
            {
                get
                {
                    try
                    {
                        return ((global::System.DateTime)(this[this.tableAlreadyPaidServices.PaymentDateColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaymentDate\' in table \'AlreadyPaidServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableAlreadyPaidServices.PaymentDateColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SupervisionLicenseNo
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableAlreadyPaidServices.SupervisionLicenseNoColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'SupervisionLicenseNo\' in table \'AlreadyPaidServices\' is DBN" +
                                "ull.", e);
                    }
                }
                set
                {
                    this[this.tableAlreadyPaidServices.SupervisionLicenseNoColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BuildingComplex
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableAlreadyPaidServices.BuildingComplexColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'BuildingComplex\' in table \'AlreadyPaidServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableAlreadyPaidServices.BuildingComplexColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime RequestDate
            {
                get
                {
                    return ((global::System.DateTime)(this[this.tableAlreadyPaidServices.RequestDateColumn]));
                }
                set
                {
                    this[this.tableAlreadyPaidServices.RequestDateColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CreatedBy
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableAlreadyPaidServices.CreatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedBy\' in table \'AlreadyPaidServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableAlreadyPaidServices.CreatedByColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime CreatedOn
            {
                get
                {
                    try
                    {
                        return ((global::System.DateTime)(this[this.tableAlreadyPaidServices.CreatedOnColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedOn\' in table \'AlreadyPaidServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableAlreadyPaidServices.CreatedOnColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string UpdatedBy
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableAlreadyPaidServices.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'AlreadyPaidServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableAlreadyPaidServices.UpdatedByColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime UpdatedOn
            {
                get
                {
                    try
                    {
                        return ((global::System.DateTime)(this[this.tableAlreadyPaidServices.UpdatedOnColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedOn\' in table \'AlreadyPaidServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableAlreadyPaidServices.UpdatedOnColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string UnitNo
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableAlreadyPaidServices.UnitNoColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitNo\' in table \'AlreadyPaidServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableAlreadyPaidServices.UnitNoColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string owners
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableAlreadyPaidServices.ownersColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'owners\' in table \'AlreadyPaidServices\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableAlreadyPaidServices.ownersColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DMSupervisionStatment
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableAlreadyPaidServices.DMSupervisionStatmentColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DMSupervisionStatment\' in table \'AlreadyPaidServices\' is DB" +
                                "Null.", e);
                    }
                }
                set
                {
                    this[this.tableAlreadyPaidServices.DMSupervisionStatmentColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNumberOfFloorsNull()
            {
                return this.IsNull(this.tableAlreadyPaidServices.NumberOfFloorsColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNumberOfFloorsNull()
            {
                this[this.tableAlreadyPaidServices.NumberOfFloorsColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsConstructedAreaNull()
            {
                return this.IsNull(this.tableAlreadyPaidServices.ConstructedAreaColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetConstructedAreaNull()
            {
                this[this.tableAlreadyPaidServices.ConstructedAreaColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLicenseNoNull()
            {
                return this.IsNull(this.tableAlreadyPaidServices.LicenseNoColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLicenseNoNull()
            {
                this[this.tableAlreadyPaidServices.LicenseNoColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsKrokiNONull()
            {
                return this.IsNull(this.tableAlreadyPaidServices.KrokiNOColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetKrokiNONull()
            {
                this[this.tableAlreadyPaidServices.KrokiNOColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDmFileNumberNull()
            {
                return this.IsNull(this.tableAlreadyPaidServices.DmFileNumberColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDmFileNumberNull()
            {
                this[this.tableAlreadyPaidServices.DmFileNumberColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDMLicenseCommentsNull()
            {
                return this.IsNull(this.tableAlreadyPaidServices.DMLicenseCommentsColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDMLicenseCommentsNull()
            {
                this[this.tableAlreadyPaidServices.DMLicenseCommentsColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLandAreaNull()
            {
                return this.IsNull(this.tableAlreadyPaidServices.LandAreaColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLandAreaNull()
            {
                this[this.tableAlreadyPaidServices.LandAreaColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLandDeedReceiptDateNull()
            {
                return this.IsNull(this.tableAlreadyPaidServices.LandDeedReceiptDateColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLandDeedReceiptDateNull()
            {
                this[this.tableAlreadyPaidServices.LandDeedReceiptDateColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLandDeedNoNull()
            {
                return this.IsNull(this.tableAlreadyPaidServices.LandDeedNoColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLandDeedNoNull()
            {
                this[this.tableAlreadyPaidServices.LandDeedNoColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsOwnerNotesNull()
            {
                return this.IsNull(this.tableAlreadyPaidServices.OwnerNotesColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetOwnerNotesNull()
            {
                this[this.tableAlreadyPaidServices.OwnerNotesColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsConsultantNotesNull()
            {
                return this.IsNull(this.tableAlreadyPaidServices.ConsultantNotesColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetConsultantNotesNull()
            {
                this[this.tableAlreadyPaidServices.ConsultantNotesColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFileNumberNull()
            {
                return this.IsNull(this.tableAlreadyPaidServices.FileNumberColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFileNumberNull()
            {
                this[this.tableAlreadyPaidServices.FileNumberColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDmInspectorCommentsNull()
            {
                return this.IsNull(this.tableAlreadyPaidServices.DmInspectorCommentsColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDmInspectorCommentsNull()
            {
                this[this.tableAlreadyPaidServices.DmInspectorCommentsColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsServiceNameEnNull()
            {
                return this.IsNull(this.tableAlreadyPaidServices.ServiceNameEnColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetServiceNameEnNull()
            {
                this[this.tableAlreadyPaidServices.ServiceNameEnColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsArLetterNull()
            {
                return this.IsNull(this.tableAlreadyPaidServices.ArLetterColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetArLetterNull()
            {
                this[this.tableAlreadyPaidServices.ArLetterColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBuildingTypeNull()
            {
                return this.IsNull(this.tableAlreadyPaidServices.BuildingTypeColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBuildingTypeNull()
            {
                this[this.tableAlreadyPaidServices.BuildingTypeColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUseTypeNull()
            {
                return this.IsNull(this.tableAlreadyPaidServices.UseTypeColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUseTypeNull()
            {
                this[this.tableAlreadyPaidServices.UseTypeColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRegionEnNameNull()
            {
                return this.IsNull(this.tableAlreadyPaidServices.RegionEnNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRegionEnNameNull()
            {
                this[this.tableAlreadyPaidServices.RegionEnNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDistrictNoNull()
            {
                return this.IsNull(this.tableAlreadyPaidServices.DistrictNoColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDistrictNoNull()
            {
                this[this.tableAlreadyPaidServices.DistrictNoColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsContractor_NameNull()
            {
                return this.IsNull(this.tableAlreadyPaidServices.Contractor_NameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetContractor_NameNull()
            {
                this[this.tableAlreadyPaidServices.Contractor_NameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsContractor_CRNumberNull()
            {
                return this.IsNull(this.tableAlreadyPaidServices.Contractor_CRNumberColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetContractor_CRNumberNull()
            {
                this[this.tableAlreadyPaidServices.Contractor_CRNumberColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsContractor_CR_NumberNull()
            {
                return this.IsNull(this.tableAlreadyPaidServices.Contractor_CR_NumberColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetContractor_CR_NumberNull()
            {
                this[this.tableAlreadyPaidServices.Contractor_CR_NumberColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsReferenceidNull()
            {
                return this.IsNull(this.tableAlreadyPaidServices.ReferenceidColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetReferenceidNull()
            {
                this[this.tableAlreadyPaidServices.ReferenceidColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPaymentTypeNull()
            {
                return this.IsNull(this.tableAlreadyPaidServices.PaymentTypeColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPaymentTypeNull()
            {
                this[this.tableAlreadyPaidServices.PaymentTypeColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPaymentIDNull()
            {
                return this.IsNull(this.tableAlreadyPaidServices.PaymentIDColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPaymentIDNull()
            {
                this[this.tableAlreadyPaidServices.PaymentIDColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsConsultantCivilIdNull()
            {
                return this.IsNull(this.tableAlreadyPaidServices.ConsultantCivilIdColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetConsultantCivilIdNull()
            {
                this[this.tableAlreadyPaidServices.ConsultantCivilIdColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCompanyNameNull()
            {
                return this.IsNull(this.tableAlreadyPaidServices.CompanyNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCompanyNameNull()
            {
                this[this.tableAlreadyPaidServices.CompanyNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPaymentDateNull()
            {
                return this.IsNull(this.tableAlreadyPaidServices.PaymentDateColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPaymentDateNull()
            {
                this[this.tableAlreadyPaidServices.PaymentDateColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSupervisionLicenseNoNull()
            {
                return this.IsNull(this.tableAlreadyPaidServices.SupervisionLicenseNoColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSupervisionLicenseNoNull()
            {
                this[this.tableAlreadyPaidServices.SupervisionLicenseNoColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBuildingComplexNull()
            {
                return this.IsNull(this.tableAlreadyPaidServices.BuildingComplexColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBuildingComplexNull()
            {
                this[this.tableAlreadyPaidServices.BuildingComplexColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCreatedByNull()
            {
                return this.IsNull(this.tableAlreadyPaidServices.CreatedByColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCreatedByNull()
            {
                this[this.tableAlreadyPaidServices.CreatedByColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCreatedOnNull()
            {
                return this.IsNull(this.tableAlreadyPaidServices.CreatedOnColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCreatedOnNull()
            {
                this[this.tableAlreadyPaidServices.CreatedOnColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUpdatedByNull()
            {
                return this.IsNull(this.tableAlreadyPaidServices.UpdatedByColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUpdatedByNull()
            {
                this[this.tableAlreadyPaidServices.UpdatedByColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUpdatedOnNull()
            {
                return this.IsNull(this.tableAlreadyPaidServices.UpdatedOnColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUpdatedOnNull()
            {
                this[this.tableAlreadyPaidServices.UpdatedOnColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUnitNoNull()
            {
                return this.IsNull(this.tableAlreadyPaidServices.UnitNoColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUnitNoNull()
            {
                this[this.tableAlreadyPaidServices.UnitNoColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsownersNull()
            {
                return this.IsNull(this.tableAlreadyPaidServices.ownersColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetownersNull()
            {
                this[this.tableAlreadyPaidServices.ownersColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDMSupervisionStatmentNull()
            {
                return this.IsNull(this.tableAlreadyPaidServices.DMSupervisionStatmentColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDMSupervisionStatmentNull()
            {
                this[this.tableAlreadyPaidServices.DMSupervisionStatmentColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SpecialSignsRow : global::System.Data.DataRow
        {

            private SpecialSignsDataTable tableSpecialSigns;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SpecialSignsRow(global::System.Data.DataRowBuilder rb) :
                    base(rb)
            {
                this.tableSpecialSigns = ((SpecialSignsDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID
            {
                get
                {
                    return ((int)(this[this.tableSpecialSigns.IDColumn]));
                }
                set
                {
                    this[this.tableSpecialSigns.IDColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ServiceTypeID
            {
                get
                {
                    return ((int)(this[this.tableSpecialSigns.ServiceTypeIDColumn]));
                }
                set
                {
                    this[this.tableSpecialSigns.ServiceTypeIDColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Status
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSpecialSigns.StatusColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Status\' in table \'SpecialSigns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSpecialSigns.StatusColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int OwnerCivilId
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSpecialSigns.OwnerCivilIdColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'OwnerCivilId\' in table \'SpecialSigns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSpecialSigns.OwnerCivilIdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string KrokiNO
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableSpecialSigns.KrokiNOColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'KrokiNO\' in table \'SpecialSigns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSpecialSigns.KrokiNOColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string OwnerName
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableSpecialSigns.OwnerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'OwnerName\' in table \'SpecialSigns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSpecialSigns.OwnerNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string OwnerPhoneNo
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableSpecialSigns.OwnerPhoneNoColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'OwnerPhoneNo\' in table \'SpecialSigns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSpecialSigns.OwnerPhoneNoColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CreatedBy
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableSpecialSigns.CreatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedBy\' in table \'SpecialSigns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSpecialSigns.CreatedByColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime CreatedOn
            {
                get
                {
                    try
                    {
                        return ((global::System.DateTime)(this[this.tableSpecialSigns.CreatedOnColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedOn\' in table \'SpecialSigns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSpecialSigns.CreatedOnColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string UpdatedBy
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableSpecialSigns.UpdatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedBy\' in table \'SpecialSigns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSpecialSigns.UpdatedByColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime UpdatedOn
            {
                get
                {
                    try
                    {
                        return ((global::System.DateTime)(this[this.tableSpecialSigns.UpdatedOnColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedOn\' in table \'SpecialSigns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSpecialSigns.UpdatedOnColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LicenseNo
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableSpecialSigns.LicenseNoColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LicenseNo\' in table \'SpecialSigns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSpecialSigns.LicenseNoColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ServiceNameAR
            {
                get
                {
                    return ((string)(this[this.tableSpecialSigns.ServiceNameARColumn]));
                }
                set
                {
                    this[this.tableSpecialSigns.ServiceNameARColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TransactNo
            {
                get
                {
                    return ((string)(this[this.tableSpecialSigns.TransactNoColumn]));
                }
                set
                {
                    this[this.tableSpecialSigns.TransactNoColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int WelayahID
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSpecialSigns.WelayahIDColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'WelayahID\' in table \'SpecialSigns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSpecialSigns.WelayahIDColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int RegionID
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSpecialSigns.RegionIDColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'RegionID\' in table \'SpecialSigns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSpecialSigns.RegionIDColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int SquareLetterID
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSpecialSigns.SquareLetterIDColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'SquareLetterID\' in table \'SpecialSigns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSpecialSigns.SquareLetterIDColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int DistrictNo
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSpecialSigns.DistrictNoColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistrictNo\' in table \'SpecialSigns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSpecialSigns.DistrictNoColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int UseTypeID
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSpecialSigns.UseTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'UseTypeID\' in table \'SpecialSigns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSpecialSigns.UseTypeIDColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LandArea
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableSpecialSigns.LandAreaColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'LandArea\' in table \'SpecialSigns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSpecialSigns.LandAreaColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DMSupervisionStatment
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableSpecialSigns.DMSupervisionStatmentColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DMSupervisionStatment\' in table \'SpecialSigns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSpecialSigns.DMSupervisionStatmentColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RegionArName
            {
                get
                {
                    return ((string)(this[this.tableSpecialSigns.RegionArNameColumn]));
                }
                set
                {
                    this[this.tableSpecialSigns.RegionArNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string WelyahArName
            {
                get
                {
                    return ((string)(this[this.tableSpecialSigns.WelyahArNameColumn]));
                }
                set
                {
                    this[this.tableSpecialSigns.WelyahArNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ArLetter
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableSpecialSigns.ArLetterColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ArLetter\' in table \'SpecialSigns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSpecialSigns.ArLetterColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string UseType
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableSpecialSigns.UseTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'UseType\' in table \'SpecialSigns\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSpecialSigns.UseTypeColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldSupervisionServicesTypesRow BldSupervisionServicesTypesRow
            {
                get
                {
                    return ((BldSupervisionServicesTypesRow)(this.GetParentRow(this.Table.ParentRelations["FK_BldSupervisionServices_BldSupervisionServicesTypes1"])));
                }
                set
                {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_BldSupervisionServices_BldSupervisionServicesTypes1"]);
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsStatusNull()
            {
                return this.IsNull(this.tableSpecialSigns.StatusColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetStatusNull()
            {
                this[this.tableSpecialSigns.StatusColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsOwnerCivilIdNull()
            {
                return this.IsNull(this.tableSpecialSigns.OwnerCivilIdColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetOwnerCivilIdNull()
            {
                this[this.tableSpecialSigns.OwnerCivilIdColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsKrokiNONull()
            {
                return this.IsNull(this.tableSpecialSigns.KrokiNOColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetKrokiNONull()
            {
                this[this.tableSpecialSigns.KrokiNOColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsOwnerNameNull()
            {
                return this.IsNull(this.tableSpecialSigns.OwnerNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetOwnerNameNull()
            {
                this[this.tableSpecialSigns.OwnerNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsOwnerPhoneNoNull()
            {
                return this.IsNull(this.tableSpecialSigns.OwnerPhoneNoColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetOwnerPhoneNoNull()
            {
                this[this.tableSpecialSigns.OwnerPhoneNoColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCreatedByNull()
            {
                return this.IsNull(this.tableSpecialSigns.CreatedByColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCreatedByNull()
            {
                this[this.tableSpecialSigns.CreatedByColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCreatedOnNull()
            {
                return this.IsNull(this.tableSpecialSigns.CreatedOnColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCreatedOnNull()
            {
                this[this.tableSpecialSigns.CreatedOnColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUpdatedByNull()
            {
                return this.IsNull(this.tableSpecialSigns.UpdatedByColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUpdatedByNull()
            {
                this[this.tableSpecialSigns.UpdatedByColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUpdatedOnNull()
            {
                return this.IsNull(this.tableSpecialSigns.UpdatedOnColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUpdatedOnNull()
            {
                this[this.tableSpecialSigns.UpdatedOnColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLicenseNoNull()
            {
                return this.IsNull(this.tableSpecialSigns.LicenseNoColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLicenseNoNull()
            {
                this[this.tableSpecialSigns.LicenseNoColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsWelayahIDNull()
            {
                return this.IsNull(this.tableSpecialSigns.WelayahIDColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetWelayahIDNull()
            {
                this[this.tableSpecialSigns.WelayahIDColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRegionIDNull()
            {
                return this.IsNull(this.tableSpecialSigns.RegionIDColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRegionIDNull()
            {
                this[this.tableSpecialSigns.RegionIDColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSquareLetterIDNull()
            {
                return this.IsNull(this.tableSpecialSigns.SquareLetterIDColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSquareLetterIDNull()
            {
                this[this.tableSpecialSigns.SquareLetterIDColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDistrictNoNull()
            {
                return this.IsNull(this.tableSpecialSigns.DistrictNoColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDistrictNoNull()
            {
                this[this.tableSpecialSigns.DistrictNoColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUseTypeIDNull()
            {
                return this.IsNull(this.tableSpecialSigns.UseTypeIDColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUseTypeIDNull()
            {
                this[this.tableSpecialSigns.UseTypeIDColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLandAreaNull()
            {
                return this.IsNull(this.tableSpecialSigns.LandAreaColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLandAreaNull()
            {
                this[this.tableSpecialSigns.LandAreaColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDMSupervisionStatmentNull()
            {
                return this.IsNull(this.tableSpecialSigns.DMSupervisionStatmentColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDMSupervisionStatmentNull()
            {
                this[this.tableSpecialSigns.DMSupervisionStatmentColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsArLetterNull()
            {
                return this.IsNull(this.tableSpecialSigns.ArLetterColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetArLetterNull()
            {
                this[this.tableSpecialSigns.ArLetterColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUseTypeNull()
            {
                return this.IsNull(this.tableSpecialSigns.UseTypeColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUseTypeNull()
            {
                this[this.tableSpecialSigns.UseTypeColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class BldPermitsRowChangeEvent : global::System.EventArgs
        {

            private BldPermitsRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldPermitsRowChangeEvent(BldPermitsRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldPermitsRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class BldRegionsRowChangeEvent : global::System.EventArgs
        {

            private BldRegionsRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldRegionsRowChangeEvent(BldRegionsRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldRegionsRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class BldSquareLettersRowChangeEvent : global::System.EventArgs
        {

            private BldSquareLettersRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldSquareLettersRowChangeEvent(BldSquareLettersRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldSquareLettersRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class BldWelyatRowChangeEvent : global::System.EventArgs
        {

            private BldWelyatRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldWelyatRowChangeEvent(BldWelyatRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldWelyatRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class BldPaymentRowChangeEvent : global::System.EventArgs
        {

            private BldPaymentRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldPaymentRowChangeEvent(BldPaymentRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldPaymentRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class BldBuildingTypesRowChangeEvent : global::System.EventArgs
        {

            private BldBuildingTypesRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldBuildingTypesRowChangeEvent(BldBuildingTypesRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldBuildingTypesRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class BldLandUseTypesRowChangeEvent : global::System.EventArgs
        {

            private BldLandUseTypesRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldLandUseTypesRowChangeEvent(BldLandUseTypesRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldLandUseTypesRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class BldSupervisionServicesRowChangeEvent : global::System.EventArgs
        {

            private BldSupervisionServicesRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldSupervisionServicesRowChangeEvent(BldSupervisionServicesRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldSupervisionServicesRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class BldSupervisionServicesTypesRowChangeEvent : global::System.EventArgs
        {

            private BldSupervisionServicesTypesRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldSupervisionServicesTypesRowChangeEvent(BldSupervisionServicesTypesRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BldSupervisionServicesTypesRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class UnpaidServicesRowChangeEvent : global::System.EventArgs
        {

            private UnpaidServicesRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public UnpaidServicesRowChangeEvent(UnpaidServicesRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public UnpaidServicesRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class AlreadyPaidServicesRowChangeEvent : global::System.EventArgs
        {

            private AlreadyPaidServicesRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public AlreadyPaidServicesRowChangeEvent(AlreadyPaidServicesRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public AlreadyPaidServicesRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SpecialSignsRowChangeEvent : global::System.EventArgs
        {

            private SpecialSignsRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SpecialSignsRowChangeEvent(SpecialSignsRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SpecialSignsRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace DMeServicesInternal.Web.Reports.InternalEngineeringDataSetTableAdapters
{


    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class BldPermitsTableAdapter : global::System.ComponentModel.Component
    {

        private global::System.Data.SqlClient.SqlDataAdapter _adapter;

        private global::System.Data.SqlClient.SqlConnection _connection;

        private global::System.Data.SqlClient.SqlTransaction _transaction;

        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

        private bool _clearBeforeFill;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public BldPermitsTableAdapter()
        {
            this.ClearBeforeFill = true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter
        {
            get
            {
                if ((this._adapter == null))
                {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection
        {
            get
            {
                if ((this._connection == null))
                {
                    this.InitConnection();
                }
                return this._connection;
            }
            set
            {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null))
                {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null))
                {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null))
                {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
                {
                    if ((this.CommandCollection[i] != null))
                    {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction
        {
            get
            {
                return this._transaction;
            }
            set
            {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
                {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null)
                            && (this.Adapter.DeleteCommand != null)))
                {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null)
                            && (this.Adapter.InsertCommand != null)))
                {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null)
                            && (this.Adapter.UpdateCommand != null)))
                {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
        {
            get
            {
                if ((this._commandCollection == null))
                {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill
        {
            get
            {
                return this._clearBeforeFill;
            }
            set
            {
                this._clearBeforeFill = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter()
        {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "BldPermits";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("TransactNo", "TransactNo");
            tableMapping.ColumnMappings.Add("OwnerName", "OwnerName");
            tableMapping.ColumnMappings.Add("OwnerCivilId", "OwnerCivilId");
            tableMapping.ColumnMappings.Add("OwnerPhoneNo", "OwnerPhoneNo");
            tableMapping.ColumnMappings.Add("DistrictNo", "DistrictNo");
            tableMapping.ColumnMappings.Add("ConstructedArea", "ConstructedArea");
            tableMapping.ColumnMappings.Add("NumberOfFloors", "NumberOfFloors");
            tableMapping.ColumnMappings.Add("ConsultantCrNo", "ConsultantCrNo");
            tableMapping.ColumnMappings.Add("RequestDate", "RequestDate");
            tableMapping.ColumnMappings.Add("CreatedBy", "CreatedBy");
            tableMapping.ColumnMappings.Add("CreatedOn", "CreatedOn");
            tableMapping.ColumnMappings.Add("UpdatedBy", "UpdatedBy");
            tableMapping.ColumnMappings.Add("UpdatedOn", "UpdatedOn");
            tableMapping.ColumnMappings.Add("LicenseNo", "LicenseNo");
            tableMapping.ColumnMappings.Add("WorkflowStatus", "WorkflowStatus");
            tableMapping.ColumnMappings.Add("DmEngineerNo", "DmEngineerNo");
            tableMapping.ColumnMappings.Add("DmEngineerComments", "DmEngineerComments");
            tableMapping.ColumnMappings.Add("ConsultantCivilId", "ConsultantCivilId");
            tableMapping.ColumnMappings.Add("WelayahID", "WelayahID");
            tableMapping.ColumnMappings.Add("RegionID", "RegionID");
            tableMapping.ColumnMappings.Add("SquareLetterID", "SquareLetterID");
            tableMapping.ColumnMappings.Add("UseTypeID", "UseTypeID");
            tableMapping.ColumnMappings.Add("BuildingTypeID", "BuildingTypeID");
            tableMapping.ColumnMappings.Add("KrokiNO", "KrokiNO");
            tableMapping.ColumnMappings.Add("DmFileNumber", "DmFileNumber");
            tableMapping.ColumnMappings.Add("LandDeedReceiptNo", "LandDeedReceiptNo");
            tableMapping.ColumnMappings.Add("DMLicenseComments", "DMLicenseComments");
            tableMapping.ColumnMappings.Add("LandArea", "LandArea");
            tableMapping.ColumnMappings.Add("LandDeedReceiptDate", "LandDeedReceiptDate");
            tableMapping.ColumnMappings.Add("LandDeedNo", "LandDeedNo");
            tableMapping.ColumnMappings.Add("BuildingType", "BuildingType");
            tableMapping.ColumnMappings.Add("RegionCode", "RegionCode");
            tableMapping.ColumnMappings.Add("RegionArName", "RegionArName");
            tableMapping.ColumnMappings.Add("UseType", "UseType");
            tableMapping.ColumnMappings.Add("WelyahArName", "WelyahArName");
            tableMapping.ColumnMappings.Add("ArLetter", "ArLetter");
            tableMapping.ColumnMappings.Add("owners", "owners");
            tableMapping.ColumnMappings.Add("ServiceName", "ServiceName");
            tableMapping.ColumnMappings.Add("BuildingComplex", "BuildingComplex");
            tableMapping.ColumnMappings.Add("UnitNo", "UnitNo");
            tableMapping.ColumnMappings.Add("AppointmentStatus", "AppointmentStatus");
            tableMapping.ColumnMappings.Add("AppointmentDate", "AppointmentDate");
            tableMapping.ColumnMappings.Add("DMManagerNotes", "DMManagerNotes");
            tableMapping.ColumnMappings.Add("DMEngineerNotes", "DMEngineerNotes");
            tableMapping.ColumnMappings.Add("ContractorName", "ContractorName");
            tableMapping.ColumnMappings.Add("MLicenseStatement", "MLicenseStatement");
            tableMapping.ColumnMappings.Add("MLicenseNo", "MLicenseNo");
            tableMapping.ColumnMappings.Add("FeesRefid", "FeesRefid");
            tableMapping.ColumnMappings.Add("FeesPayOn", "FeesPayOn");
            tableMapping.ColumnMappings.Add("InsuranceRefid", "InsuranceRefid");
            tableMapping.ColumnMappings.Add("InsurancePayOn", "InsurancePayOn");
            tableMapping.ColumnMappings.Add("ServiceNameAR", "ServiceNameAR");
            this._adapter.TableMappings.Add(tableMapping);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection()
        {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["eServicesConnectionString"].ConnectionString;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection()
        {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        BldPermits.Id, BldPermits.TransactNo, BldPermits.OwnerName, BldPerm" +
                "its.OwnerCivilId, BldPermits.OwnerPhoneNo, BldPermits.DistrictNo, BldPermits.Con" +
                "structedArea, BldPermits.NumberOfFloors, \r\n                         BldPermits.C" +
                "onsultantCrNo, BldPermits.RequestDate, BldPermits.CreatedBy, BldPermits.CreatedO" +
                "n, BldPermits.UpdatedBy, BldPermits.UpdatedOn, BldPermits.LicenseNo, BldPermits." +
                "WorkflowStatus, \r\n                         BldPermits.DmEngineerNo, BldPermits.D" +
                "mEngineerComments, BldPermits.ConsultantCivilId, BldPermits.WelayahID, BldPermit" +
                "s.RegionID, BldPermits.SquareLetterID, BldPermits.UseTypeID, BldPermits.Building" +
                "TypeID, \r\n                         BldPermits.KrokiNO, BldPermits.DmFileNumber, " +
                "BldPermits.LandDeedReceiptNo, BldPermits.DMLicenseComments, BldPermits.LandArea," +
                " BldPermits.LandDeedReceiptDate, BldPermits.LandDeedNo, \r\n                      " +
                "   BldBuildingTypes.BuildingType, BldRegions.RegionCode, BldRegions.RegionArName" +
                ", BldLandUseTypes.UseType, BldWelyat.WelyahArName, BldSquareLetters.ArLetter,\r\n " +
                "                            (SELECT        Referenceid\r\n                        " +
                "        FROM            BldPayment\r\n                                WHERE       " +
                " (PaymentDate =\r\n                                                             (S" +
                "ELECT        MAX(PaymentDate) AS Expr1\r\n                                        " +
                "                        FROM            BldPayment AS BldPayment_5\r\n            " +
                "                                                    WHERE        (BldPermitId = " +
                "@ID) AND (PaymentType = 1) AND (PaymentStatus = 1)))) AS FeesRefid,\r\n           " +
                "                  (SELECT        MAX(CONVERT(VARCHAR(20), PaymentDate, 103)) AS " +
                "Expr1\r\n                                FROM            BldPayment AS BldPayment_" +
                "4\r\n                                WHERE        (BldPermitId = @ID) AND (Payment" +
                "Type = 1) AND (PaymentStatus = 1)) AS FeesPayOn,\r\n                             (" +
                "SELECT        Referenceid\r\n                                FROM            BldPa" +
                "yment AS BldPayment_3\r\n                                WHERE        (PaymentDate" +
                " =\r\n                                                             (SELECT        " +
                "MAX(PaymentDate) AS Expr1\r\n                                                     " +
                "           FROM            BldPayment AS BldPayment_2\r\n                         " +
                "                                       WHERE        (BldPermitId = @ID) AND (Pay" +
                "mentType = 3) AND (PaymentStatus = 1)))) AS InsuranceRefid,\r\n                   " +
                "          (SELECT        MAX(CONVERT(VARCHAR(20), PaymentDate, 103)) AS Expr1\r\n " +
                "                               FROM            BldPayment AS BldPayment_1\r\n     " +
                "                           WHERE        (BldPermitId = @ID) AND (PaymentType = 3" +
                ") AND (PaymentStatus = 1)) AS InsurancePayOn, SUBSTRING\r\n                       " +
                "      ((SELECT        \',\' + Name AS [text()]\r\n                                 F" +
                "ROM            BldOwners\r\n                                 WHERE        (BldPerm" +
                "itId = @ID) FOR XML PATH(\'\')), 2, 1000) AS owners, BldPermits.ServiceName, BldPe" +
                "rmits.BuildingComplex, BldPermits.UnitNo, BldPermits.AppointmentStatus, BldPermi" +
                "ts.AppointmentDate, \r\n                         BldPermits.DMManagerNotes, BldPer" +
                "mits.DMEngineerNotes, BldPermits.ContractorName, BldPermits.MLicenseStatement, B" +
                "ldPermits.MLicenseNo, BldSupervisionServicesTypes.ServiceNameAR\r\nFROM           " +
                " BldPermits INNER JOIN\r\n                         BldBuildingTypes ON BldPermits." +
                "BuildingTypeID = BldBuildingTypes.ID INNER JOIN\r\n                         BldLan" +
                "dUseTypes ON BldPermits.UseTypeID = BldLandUseTypes.ID INNER JOIN\r\n             " +
                "            BldRegions ON BldPermits.RegionID = BldRegions.RegionID INNER JOIN\r\n" +
                "                         BldSquareLetters ON BldPermits.SquareLetterID = BldSqua" +
                "reLetters.ID INNER JOIN\r\n                         BldWelyat ON BldPermits.Welaya" +
                "hID = BldWelyat.WelyahID AND BldRegions.WelyahID = BldWelyat.WelyahID INNER JOIN" +
                "\r\n                         BldSupervisionServicesTypes ON CAST(BldPermits.Servic" +
                "eName AS INT) = BldSupervisionServicesTypes.ID\r\nWHERE        (BldPermits.Id = @I" +
                "D)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(InternalEngineeringDataSet.BldPermitsDataTable dataTable, int ID)
        {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ID));
            if ((this.ClearBeforeFill == true))
            {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual InternalEngineeringDataSet.BldPermitsDataTable GetData(int ID)
        {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ID));
            InternalEngineeringDataSet.BldPermitsDataTable dataTable = new InternalEngineeringDataSet.BldPermitsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }

    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class BldRegionsTableAdapter : global::System.ComponentModel.Component
    {

        private global::System.Data.SqlClient.SqlDataAdapter _adapter;

        private global::System.Data.SqlClient.SqlConnection _connection;

        private global::System.Data.SqlClient.SqlTransaction _transaction;

        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

        private bool _clearBeforeFill;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public BldRegionsTableAdapter()
        {
            this.ClearBeforeFill = true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter
        {
            get
            {
                if ((this._adapter == null))
                {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection
        {
            get
            {
                if ((this._connection == null))
                {
                    this.InitConnection();
                }
                return this._connection;
            }
            set
            {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null))
                {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null))
                {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null))
                {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
                {
                    if ((this.CommandCollection[i] != null))
                    {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction
        {
            get
            {
                return this._transaction;
            }
            set
            {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
                {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null)
                            && (this.Adapter.DeleteCommand != null)))
                {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null)
                            && (this.Adapter.InsertCommand != null)))
                {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null)
                            && (this.Adapter.UpdateCommand != null)))
                {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
        {
            get
            {
                if ((this._commandCollection == null))
                {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill
        {
            get
            {
                return this._clearBeforeFill;
            }
            set
            {
                this._clearBeforeFill = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter()
        {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "BldRegions";
            tableMapping.ColumnMappings.Add("RegionID", "RegionID");
            tableMapping.ColumnMappings.Add("RegionCode", "RegionCode");
            tableMapping.ColumnMappings.Add("RegionEnName", "RegionEnName");
            tableMapping.ColumnMappings.Add("RegionArName", "RegionArName");
            tableMapping.ColumnMappings.Add("WelyahID", "WelyahID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[BldRegions] WHERE (([RegionID] = @Original_RegionID))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RegionID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RegionID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[BldRegions] ([RegionCode], [RegionEnName], [RegionArName], [We" +
                "lyahID]) VALUES (@RegionCode, @RegionEnName, @RegionArName, @WelyahID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RegionCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RegionCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RegionEnName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RegionEnName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RegionArName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RegionArName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WelyahID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WelyahID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[BldRegions] SET [RegionCode] = @RegionCode, [RegionEnName] = @Regio" +
                "nEnName, [RegionArName] = @RegionArName, [WelyahID] = @WelyahID WHERE (([RegionI" +
                "D] = @Original_RegionID))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RegionCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RegionCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RegionEnName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RegionEnName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RegionArName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RegionArName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WelyahID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WelyahID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RegionID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RegionID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection()
        {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["eServicesConnectionString"].ConnectionString;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection()
        {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT RegionID, RegionCode, RegionEnName, RegionArName, WelyahID FROM dbo.BldReg" +
                "ions";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(InternalEngineeringDataSet.BldRegionsDataTable dataTable)
        {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true))
            {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual InternalEngineeringDataSet.BldRegionsDataTable GetData()
        {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            InternalEngineeringDataSet.BldRegionsDataTable dataTable = new InternalEngineeringDataSet.BldRegionsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(InternalEngineeringDataSet.BldRegionsDataTable dataTable)
        {
            return this.Adapter.Update(dataTable);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(InternalEngineeringDataSet dataSet)
        {
            return this.Adapter.Update(dataSet, "BldRegions");
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow)
        {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows)
        {
            return this.Adapter.Update(dataRows);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_RegionID)
        {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_RegionID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open)
                        != global::System.Data.ConnectionState.Open))
            {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try
            {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally
            {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int RegionCode, string RegionEnName, string RegionArName, int WelyahID)
        {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(RegionCode));
            if ((RegionEnName == null))
            {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(RegionEnName));
            }
            if ((RegionArName == null))
            {
                throw new global::System.ArgumentNullException("RegionArName");
            }
            else
            {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(RegionArName));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(WelyahID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open)
                        != global::System.Data.ConnectionState.Open))
            {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try
            {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally
            {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int RegionCode, string RegionEnName, string RegionArName, int WelyahID, int Original_RegionID)
        {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(RegionCode));
            if ((RegionEnName == null))
            {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(RegionEnName));
            }
            if ((RegionArName == null))
            {
                throw new global::System.ArgumentNullException("RegionArName");
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(RegionArName));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(WelyahID));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_RegionID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open)
                        != global::System.Data.ConnectionState.Open))
            {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try
            {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally
            {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }

    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class BldSquareLettersTableAdapter : global::System.ComponentModel.Component
    {

        private global::System.Data.SqlClient.SqlDataAdapter _adapter;

        private global::System.Data.SqlClient.SqlConnection _connection;

        private global::System.Data.SqlClient.SqlTransaction _transaction;

        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

        private bool _clearBeforeFill;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public BldSquareLettersTableAdapter()
        {
            this.ClearBeforeFill = true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter
        {
            get
            {
                if ((this._adapter == null))
                {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection
        {
            get
            {
                if ((this._connection == null))
                {
                    this.InitConnection();
                }
                return this._connection;
            }
            set
            {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null))
                {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null))
                {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null))
                {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
                {
                    if ((this.CommandCollection[i] != null))
                    {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction
        {
            get
            {
                return this._transaction;
            }
            set
            {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
                {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null)
                            && (this.Adapter.DeleteCommand != null)))
                {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null)
                            && (this.Adapter.InsertCommand != null)))
                {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null)
                            && (this.Adapter.UpdateCommand != null)))
                {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
        {
            get
            {
                if ((this._commandCollection == null))
                {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill
        {
            get
            {
                return this._clearBeforeFill;
            }
            set
            {
                this._clearBeforeFill = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter()
        {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "BldSquareLetters";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("ArLetter", "ArLetter");
            tableMapping.ColumnMappings.Add("EnLetter", "EnLetter");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[BldSquareLetters] WHERE (([ID] = @Original_ID))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[BldSquareLetters] ([ArLetter], [EnLetter]) VALUES (@ArLetter, " +
                "@EnLetter)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ArLetter", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArLetter", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EnLetter", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EnLetter", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[BldSquareLetters] SET [ArLetter] = @ArLetter, [EnLetter] = @EnLette" +
                "r WHERE (([ID] = @Original_ID))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ArLetter", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArLetter", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EnLetter", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EnLetter", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection()
        {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["eServicesConnectionString"].ConnectionString;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection()
        {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, ArLetter, EnLetter FROM dbo.BldSquareLetters";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(InternalEngineeringDataSet.BldSquareLettersDataTable dataTable)
        {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true))
            {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual InternalEngineeringDataSet.BldSquareLettersDataTable GetData()
        {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            InternalEngineeringDataSet.BldSquareLettersDataTable dataTable = new InternalEngineeringDataSet.BldSquareLettersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(InternalEngineeringDataSet.BldSquareLettersDataTable dataTable)
        {
            return this.Adapter.Update(dataTable);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(InternalEngineeringDataSet dataSet)
        {
            return this.Adapter.Update(dataSet, "BldSquareLetters");
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow)
        {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows)
        {
            return this.Adapter.Update(dataRows);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID)
        {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open)
                        != global::System.Data.ConnectionState.Open))
            {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try
            {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally
            {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string ArLetter, string EnLetter)
        {
            if ((ArLetter == null))
            {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(ArLetter));
            }
            if ((EnLetter == null))
            {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(EnLetter));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open)
                        != global::System.Data.ConnectionState.Open))
            {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try
            {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally
            {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string ArLetter, string EnLetter, int Original_ID)
        {
            if ((ArLetter == null))
            {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(ArLetter));
            }
            if ((EnLetter == null))
            {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(EnLetter));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open)
                        != global::System.Data.ConnectionState.Open))
            {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try
            {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally
            {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }

    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class BldWelyatTableAdapter : global::System.ComponentModel.Component
    {

        private global::System.Data.SqlClient.SqlDataAdapter _adapter;

        private global::System.Data.SqlClient.SqlConnection _connection;

        private global::System.Data.SqlClient.SqlTransaction _transaction;

        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

        private bool _clearBeforeFill;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public BldWelyatTableAdapter()
        {
            this.ClearBeforeFill = true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter
        {
            get
            {
                if ((this._adapter == null))
                {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection
        {
            get
            {
                if ((this._connection == null))
                {
                    this.InitConnection();
                }
                return this._connection;
            }
            set
            {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null))
                {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null))
                {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null))
                {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
                {
                    if ((this.CommandCollection[i] != null))
                    {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction
        {
            get
            {
                return this._transaction;
            }
            set
            {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
                {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null)
                            && (this.Adapter.DeleteCommand != null)))
                {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null)
                            && (this.Adapter.InsertCommand != null)))
                {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null)
                            && (this.Adapter.UpdateCommand != null)))
                {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
        {
            get
            {
                if ((this._commandCollection == null))
                {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill
        {
            get
            {
                return this._clearBeforeFill;
            }
            set
            {
                this._clearBeforeFill = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter()
        {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "BldWelyat";
            tableMapping.ColumnMappings.Add("WelyahID", "WelyahID");
            tableMapping.ColumnMappings.Add("WelyahCode", "WelyahCode");
            tableMapping.ColumnMappings.Add("WelyahEnName", "WelyahEnName");
            tableMapping.ColumnMappings.Add("WelyahArName", "WelyahArName");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[BldWelyat] WHERE (([WelyahID] = @Original_WelyahID))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WelyahID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WelyahID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[BldWelyat] ([WelyahCode], [WelyahEnName], [WelyahArName]) VALU" +
                "ES (@WelyahCode, @WelyahEnName, @WelyahArName)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WelyahCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WelyahCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WelyahEnName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WelyahEnName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WelyahArName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WelyahArName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[BldWelyat] SET [WelyahCode] = @WelyahCode, [WelyahEnName] = @Welyah" +
                "EnName, [WelyahArName] = @WelyahArName WHERE (([WelyahID] = @Original_WelyahID))" +
                "";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WelyahCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WelyahCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WelyahEnName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WelyahEnName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WelyahArName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WelyahArName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WelyahID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WelyahID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection()
        {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["eServicesConnectionString"].ConnectionString;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection()
        {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT WelyahID, WelyahCode, WelyahEnName, WelyahArName FROM dbo.BldWelyat";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(InternalEngineeringDataSet.BldWelyatDataTable dataTable)
        {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true))
            {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual InternalEngineeringDataSet.BldWelyatDataTable GetData()
        {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            InternalEngineeringDataSet.BldWelyatDataTable dataTable = new InternalEngineeringDataSet.BldWelyatDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(InternalEngineeringDataSet.BldWelyatDataTable dataTable)
        {
            return this.Adapter.Update(dataTable);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(InternalEngineeringDataSet dataSet)
        {
            return this.Adapter.Update(dataSet, "BldWelyat");
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow)
        {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows)
        {
            return this.Adapter.Update(dataRows);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_WelyahID)
        {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_WelyahID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open)
                        != global::System.Data.ConnectionState.Open))
            {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try
            {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally
            {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int WelyahCode, string WelyahEnName, string WelyahArName)
        {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(WelyahCode));
            if ((WelyahEnName == null))
            {
                throw new global::System.ArgumentNullException("WelyahEnName");
            }
            else
            {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(WelyahEnName));
            }
            if ((WelyahArName == null))
            {
                throw new global::System.ArgumentNullException("WelyahArName");
            }
            else
            {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(WelyahArName));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open)
                        != global::System.Data.ConnectionState.Open))
            {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try
            {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally
            {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int WelyahCode, string WelyahEnName, string WelyahArName, int Original_WelyahID)
        {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(WelyahCode));
            if ((WelyahEnName == null))
            {
                throw new global::System.ArgumentNullException("WelyahEnName");
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(WelyahEnName));
            }
            if ((WelyahArName == null))
            {
                throw new global::System.ArgumentNullException("WelyahArName");
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(WelyahArName));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_WelyahID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open)
                        != global::System.Data.ConnectionState.Open))
            {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try
            {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally
            {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }

    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class BldPaymentTableAdapter : global::System.ComponentModel.Component
    {

        private global::System.Data.SqlClient.SqlDataAdapter _adapter;

        private global::System.Data.SqlClient.SqlConnection _connection;

        private global::System.Data.SqlClient.SqlTransaction _transaction;

        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

        private bool _clearBeforeFill;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public BldPaymentTableAdapter()
        {
            this.ClearBeforeFill = true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter
        {
            get
            {
                if ((this._adapter == null))
                {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection
        {
            get
            {
                if ((this._connection == null))
                {
                    this.InitConnection();
                }
                return this._connection;
            }
            set
            {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null))
                {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null))
                {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null))
                {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
                {
                    if ((this.CommandCollection[i] != null))
                    {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction
        {
            get
            {
                return this._transaction;
            }
            set
            {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
                {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null)
                            && (this.Adapter.DeleteCommand != null)))
                {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null)
                            && (this.Adapter.InsertCommand != null)))
                {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null)
                            && (this.Adapter.UpdateCommand != null)))
                {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
        {
            get
            {
                if ((this._commandCollection == null))
                {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill
        {
            get
            {
                return this._clearBeforeFill;
            }
            set
            {
                this._clearBeforeFill = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter()
        {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "BldPayment";
            tableMapping.ColumnMappings.Add("PaymentID", "PaymentID");
            tableMapping.ColumnMappings.Add("BldPermitId", "BldPermitId");
            tableMapping.ColumnMappings.Add("PaymentTotalAmount", "PaymentTotalAmount");
            tableMapping.ColumnMappings.Add("TokenID", "TokenID");
            tableMapping.ColumnMappings.Add("BankResponseID", "BankResponseID");
            tableMapping.ColumnMappings.Add("PaymentDate", "PaymentDate");
            tableMapping.ColumnMappings.Add("FeesDate", "FeesDate");
            tableMapping.ColumnMappings.Add("PaymentType", "PaymentType");
            tableMapping.ColumnMappings.Add("Transactionid", "Transactionid");
            tableMapping.ColumnMappings.Add("Paymentrequestid", "Paymentrequestid");
            tableMapping.ColumnMappings.Add("Referenceid", "Referenceid");
            tableMapping.ColumnMappings.Add("Bankpaymentid", "Bankpaymentid");
            tableMapping.ColumnMappings.Add("PaymentStatus", "PaymentStatus");
            tableMapping.ColumnMappings.Add("SupervisionID", "SupervisionID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[BldPayment] WHERE (([PaymentID] = @Original_PaymentID))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PaymentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaymentID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[BldPayment] ([BldPermitId], [PaymentTotalAmount], [TokenID], [BankResponseID], [PaymentDate], [FeesDate], [PaymentType], [Transactionid], [Paymentrequestid], [Referenceid], [Bankpaymentid], [PaymentStatus], [SupervisionID]) VALUES (@BldPermitId, @PaymentTotalAmount, @TokenID, @BankResponseID, @PaymentDate, @FeesDate, @PaymentType, @Transactionid, @Paymentrequestid, @Referenceid, @Bankpaymentid, @PaymentStatus, @SupervisionID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BldPermitId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BldPermitId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PaymentTotalAmount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 3, "PaymentTotalAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TokenID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TokenID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BankResponseID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BankResponseID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PaymentDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaymentDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FeesDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FeesDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PaymentType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaymentType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Transactionid", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Transactionid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Paymentrequestid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Paymentrequestid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Referenceid", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Referenceid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Bankpaymentid", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bankpaymentid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PaymentStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaymentStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SupervisionID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SupervisionID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[BldPayment] SET [BldPermitId] = @BldPermitId, [PaymentTotalAmount] = @PaymentTotalAmount, [TokenID] = @TokenID, [BankResponseID] = @BankResponseID, [PaymentDate] = @PaymentDate, [FeesDate] = @FeesDate, [PaymentType] = @PaymentType, [Transactionid] = @Transactionid, [Paymentrequestid] = @Paymentrequestid, [Referenceid] = @Referenceid, [Bankpaymentid] = @Bankpaymentid, [PaymentStatus] = @PaymentStatus, [SupervisionID] = @SupervisionID WHERE (([PaymentID] = @Original_PaymentID))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BldPermitId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BldPermitId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PaymentTotalAmount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 3, "PaymentTotalAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TokenID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TokenID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BankResponseID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BankResponseID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PaymentDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaymentDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FeesDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FeesDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PaymentType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaymentType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Transactionid", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Transactionid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Paymentrequestid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Paymentrequestid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Referenceid", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Referenceid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Bankpaymentid", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bankpaymentid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PaymentStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaymentStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SupervisionID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SupervisionID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PaymentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaymentID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection()
        {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["eServicesConnectionString"].ConnectionString;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection()
        {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT PaymentID, BldPermitId, PaymentTotalAmount, TokenID, BankResponseID, Payme" +
                "ntDate, FeesDate, PaymentType, Transactionid, Paymentrequestid, Referenceid, Ban" +
                "kpaymentid, PaymentStatus, SupervisionID FROM dbo.BldPayment";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(InternalEngineeringDataSet.BldPaymentDataTable dataTable)
        {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true))
            {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual InternalEngineeringDataSet.BldPaymentDataTable GetData()
        {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            InternalEngineeringDataSet.BldPaymentDataTable dataTable = new InternalEngineeringDataSet.BldPaymentDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(InternalEngineeringDataSet.BldPaymentDataTable dataTable)
        {
            return this.Adapter.Update(dataTable);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(InternalEngineeringDataSet dataSet)
        {
            return this.Adapter.Update(dataSet, "BldPayment");
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow)
        {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows)
        {
            return this.Adapter.Update(dataRows);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_PaymentID)
        {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_PaymentID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open)
                        != global::System.Data.ConnectionState.Open))
            {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try
            {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally
            {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<int> BldPermitId, global::System.Nullable<decimal> PaymentTotalAmount, string TokenID, global::System.Nullable<int> BankResponseID, global::System.Nullable<global::System.DateTime> PaymentDate, global::System.Nullable<global::System.DateTime> FeesDate, global::System.Nullable<int> PaymentType, string Transactionid, global::System.Nullable<int> Paymentrequestid, string Referenceid, string Bankpaymentid, global::System.Nullable<int> PaymentStatus, global::System.Nullable<int> SupervisionID)
        {
            if ((BldPermitId.HasValue == true))
            {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(BldPermitId.Value));
            }
            else
            {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((PaymentTotalAmount.HasValue == true))
            {
                this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(PaymentTotalAmount.Value));
            }
            else
            {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((TokenID == null))
            {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(TokenID));
            }
            if ((BankResponseID.HasValue == true))
            {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(BankResponseID.Value));
            }
            else
            {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((PaymentDate.HasValue == true))
            {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(PaymentDate.Value));
            }
            else
            {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((FeesDate.HasValue == true))
            {
                this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(FeesDate.Value));
            }
            else
            {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((PaymentType.HasValue == true))
            {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(PaymentType.Value));
            }
            else
            {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Transactionid == null))
            {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Transactionid));
            }
            if ((Paymentrequestid.HasValue == true))
            {
                this.Adapter.InsertCommand.Parameters[8].Value = ((int)(Paymentrequestid.Value));
            }
            else
            {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Referenceid == null))
            {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Referenceid));
            }
            if ((Bankpaymentid == null))
            {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(Bankpaymentid));
            }
            if ((PaymentStatus.HasValue == true))
            {
                this.Adapter.InsertCommand.Parameters[11].Value = ((int)(PaymentStatus.Value));
            }
            else
            {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((SupervisionID.HasValue == true))
            {
                this.Adapter.InsertCommand.Parameters[12].Value = ((int)(SupervisionID.Value));
            }
            else
            {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open)
                        != global::System.Data.ConnectionState.Open))
            {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try
            {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally
            {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<int> BldPermitId, global::System.Nullable<decimal> PaymentTotalAmount, string TokenID, global::System.Nullable<int> BankResponseID, global::System.Nullable<global::System.DateTime> PaymentDate, global::System.Nullable<global::System.DateTime> FeesDate, global::System.Nullable<int> PaymentType, string Transactionid, global::System.Nullable<int> Paymentrequestid, string Referenceid, string Bankpaymentid, global::System.Nullable<int> PaymentStatus, global::System.Nullable<int> SupervisionID, int Original_PaymentID)
        {
            if ((BldPermitId.HasValue == true))
            {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(BldPermitId.Value));
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((PaymentTotalAmount.HasValue == true))
            {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(PaymentTotalAmount.Value));
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((TokenID == null))
            {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(TokenID));
            }
            if ((BankResponseID.HasValue == true))
            {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(BankResponseID.Value));
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((PaymentDate.HasValue == true))
            {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(PaymentDate.Value));
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((FeesDate.HasValue == true))
            {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(FeesDate.Value));
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((PaymentType.HasValue == true))
            {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(PaymentType.Value));
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Transactionid == null))
            {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Transactionid));
            }
            if ((Paymentrequestid.HasValue == true))
            {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Paymentrequestid.Value));
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Referenceid == null))
            {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Referenceid));
            }
            if ((Bankpaymentid == null))
            {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Bankpaymentid));
            }
            if ((PaymentStatus.HasValue == true))
            {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(PaymentStatus.Value));
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((SupervisionID.HasValue == true))
            {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(SupervisionID.Value));
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Original_PaymentID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open)
                        != global::System.Data.ConnectionState.Open))
            {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try
            {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally
            {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }

    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class BldBuildingTypesTableAdapter : global::System.ComponentModel.Component
    {

        private global::System.Data.SqlClient.SqlDataAdapter _adapter;

        private global::System.Data.SqlClient.SqlConnection _connection;

        private global::System.Data.SqlClient.SqlTransaction _transaction;

        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

        private bool _clearBeforeFill;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public BldBuildingTypesTableAdapter()
        {
            this.ClearBeforeFill = true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter
        {
            get
            {
                if ((this._adapter == null))
                {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection
        {
            get
            {
                if ((this._connection == null))
                {
                    this.InitConnection();
                }
                return this._connection;
            }
            set
            {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null))
                {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null))
                {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null))
                {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
                {
                    if ((this.CommandCollection[i] != null))
                    {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction
        {
            get
            {
                return this._transaction;
            }
            set
            {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
                {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null)
                            && (this.Adapter.DeleteCommand != null)))
                {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null)
                            && (this.Adapter.InsertCommand != null)))
                {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null)
                            && (this.Adapter.UpdateCommand != null)))
                {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
        {
            get
            {
                if ((this._commandCollection == null))
                {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill
        {
            get
            {
                return this._clearBeforeFill;
            }
            set
            {
                this._clearBeforeFill = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter()
        {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "BldBuildingTypes";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("BuildingType", "BuildingType");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[BldBuildingTypes] WHERE (([ID] = @Original_ID))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[BldBuildingTypes] ([BuildingType]) VALUES (@BuildingType)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BuildingType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BuildingType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[BldBuildingTypes] SET [BuildingType] = @BuildingType WHERE (([ID] =" +
                " @Original_ID))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BuildingType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BuildingType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection()
        {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["eServicesConnectionString"].ConnectionString;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection()
        {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, BuildingType FROM dbo.BldBuildingTypes";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(InternalEngineeringDataSet.BldBuildingTypesDataTable dataTable)
        {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true))
            {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual InternalEngineeringDataSet.BldBuildingTypesDataTable GetData()
        {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            InternalEngineeringDataSet.BldBuildingTypesDataTable dataTable = new InternalEngineeringDataSet.BldBuildingTypesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(InternalEngineeringDataSet.BldBuildingTypesDataTable dataTable)
        {
            return this.Adapter.Update(dataTable);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(InternalEngineeringDataSet dataSet)
        {
            return this.Adapter.Update(dataSet, "BldBuildingTypes");
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow)
        {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows)
        {
            return this.Adapter.Update(dataRows);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID)
        {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open)
                        != global::System.Data.ConnectionState.Open))
            {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try
            {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally
            {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string BuildingType)
        {
            if ((BuildingType == null))
            {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(BuildingType));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open)
                        != global::System.Data.ConnectionState.Open))
            {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try
            {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally
            {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string BuildingType, int Original_ID)
        {
            if ((BuildingType == null))
            {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(BuildingType));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Original_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open)
                        != global::System.Data.ConnectionState.Open))
            {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try
            {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally
            {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }

    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class BldLandUseTypesTableAdapter : global::System.ComponentModel.Component
    {

        private global::System.Data.SqlClient.SqlDataAdapter _adapter;

        private global::System.Data.SqlClient.SqlConnection _connection;

        private global::System.Data.SqlClient.SqlTransaction _transaction;

        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

        private bool _clearBeforeFill;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public BldLandUseTypesTableAdapter()
        {
            this.ClearBeforeFill = true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter
        {
            get
            {
                if ((this._adapter == null))
                {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection
        {
            get
            {
                if ((this._connection == null))
                {
                    this.InitConnection();
                }
                return this._connection;
            }
            set
            {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null))
                {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null))
                {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null))
                {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
                {
                    if ((this.CommandCollection[i] != null))
                    {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction
        {
            get
            {
                return this._transaction;
            }
            set
            {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
                {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null)
                            && (this.Adapter.DeleteCommand != null)))
                {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null)
                            && (this.Adapter.InsertCommand != null)))
                {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null)
                            && (this.Adapter.UpdateCommand != null)))
                {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
        {
            get
            {
                if ((this._commandCollection == null))
                {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill
        {
            get
            {
                return this._clearBeforeFill;
            }
            set
            {
                this._clearBeforeFill = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter()
        {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "BldLandUseTypes";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("UseType", "UseType");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[BldLandUseTypes] WHERE (([ID] = @Original_ID))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[BldLandUseTypes] ([UseType]) VALUES (@UseType)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[BldLandUseTypes] SET [UseType] = @UseType WHERE (([ID] = @Original_" +
                "ID))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection()
        {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["eServicesConnectionString"].ConnectionString;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection()
        {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, UseType FROM dbo.BldLandUseTypes";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(InternalEngineeringDataSet.BldLandUseTypesDataTable dataTable)
        {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true))
            {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual InternalEngineeringDataSet.BldLandUseTypesDataTable GetData()
        {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            InternalEngineeringDataSet.BldLandUseTypesDataTable dataTable = new InternalEngineeringDataSet.BldLandUseTypesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(InternalEngineeringDataSet.BldLandUseTypesDataTable dataTable)
        {
            return this.Adapter.Update(dataTable);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(InternalEngineeringDataSet dataSet)
        {
            return this.Adapter.Update(dataSet, "BldLandUseTypes");
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow)
        {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows)
        {
            return this.Adapter.Update(dataRows);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID)
        {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open)
                        != global::System.Data.ConnectionState.Open))
            {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try
            {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally
            {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string UseType)
        {
            if ((UseType == null))
            {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(UseType));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open)
                        != global::System.Data.ConnectionState.Open))
            {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try
            {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally
            {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string UseType, int Original_ID)
        {
            if ((UseType == null))
            {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(UseType));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Original_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open)
                        != global::System.Data.ConnectionState.Open))
            {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try
            {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally
            {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }

    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class BldSupervisionServicesTableAdapter : global::System.ComponentModel.Component
    {

        private global::System.Data.SqlClient.SqlDataAdapter _adapter;

        private global::System.Data.SqlClient.SqlConnection _connection;

        private global::System.Data.SqlClient.SqlTransaction _transaction;

        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

        private bool _clearBeforeFill;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public BldSupervisionServicesTableAdapter()
        {
            this.ClearBeforeFill = true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter
        {
            get
            {
                if ((this._adapter == null))
                {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection
        {
            get
            {
                if ((this._connection == null))
                {
                    this.InitConnection();
                }
                return this._connection;
            }
            set
            {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null))
                {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null))
                {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null))
                {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
                {
                    if ((this.CommandCollection[i] != null))
                    {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction
        {
            get
            {
                return this._transaction;
            }
            set
            {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
                {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null)
                            && (this.Adapter.DeleteCommand != null)))
                {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null)
                            && (this.Adapter.InsertCommand != null)))
                {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null)
                            && (this.Adapter.UpdateCommand != null)))
                {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
        {
            get
            {
                if ((this._commandCollection == null))
                {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill
        {
            get
            {
                return this._clearBeforeFill;
            }
            set
            {
                this._clearBeforeFill = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter()
        {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "BldSupervisionServices";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("KrokiNO", "KrokiNO");
            tableMapping.ColumnMappings.Add("LicenseNo", "LicenseNo");
            tableMapping.ColumnMappings.Add("DmFileNumber", "DmFileNumber");
            tableMapping.ColumnMappings.Add("DmInspectorComments", "DmInspectorComments");
            tableMapping.ColumnMappings.Add("ConsultantNotes", "ConsultantNotes");
            tableMapping.ColumnMappings.Add("OwnerNotes", "OwnerNotes");
            tableMapping.ColumnMappings.Add("ConsultantCrNo", "ConsultantCrNo");
            tableMapping.ColumnMappings.Add("NumberOfFloors", "NumberOfFloors");
            tableMapping.ColumnMappings.Add("ConstructedArea", "ConstructedArea");
            tableMapping.ColumnMappings.Add("DMLicenseComments", "DMLicenseComments");
            tableMapping.ColumnMappings.Add("LandArea", "LandArea");
            tableMapping.ColumnMappings.Add("LandDeedReceiptDate", "LandDeedReceiptDate");
            tableMapping.ColumnMappings.Add("LandDeedNo", "LandDeedNo");
            tableMapping.ColumnMappings.Add("FileNumber", "FileNumber");
            tableMapping.ColumnMappings.Add("WelyahArName", "WelyahArName");
            tableMapping.ColumnMappings.Add("ServiceNameAR", "ServiceNameAR");
            tableMapping.ColumnMappings.Add("ServiceNameEn", "ServiceNameEn");
            tableMapping.ColumnMappings.Add("ArLetter", "ArLetter");
            tableMapping.ColumnMappings.Add("BuildingType", "BuildingType");
            tableMapping.ColumnMappings.Add("UseType", "UseType");
            tableMapping.ColumnMappings.Add("RegionArName", "RegionArName");
            tableMapping.ColumnMappings.Add("RegionEnName", "RegionEnName");
            tableMapping.ColumnMappings.Add("RegionCode", "RegionCode");
            tableMapping.ColumnMappings.Add("DistrictNo", "DistrictNo");
            tableMapping.ColumnMappings.Add("BldPermitID", "BldPermitID");
            tableMapping.ColumnMappings.Add("Contractor_Name", "Contractor_Name");
            tableMapping.ColumnMappings.Add("Contractor_CRNumber", "Contractor_CRNumber");
            tableMapping.ColumnMappings.Add("Contractor_CR_Number", "Contractor_CR_Number");
            tableMapping.ColumnMappings.Add("Referenceid", "Referenceid");
            tableMapping.ColumnMappings.Add("PaymentType", "PaymentType");
            tableMapping.ColumnMappings.Add("PaymentID", "PaymentID");
            tableMapping.ColumnMappings.Add("ConsultantCivilId", "ConsultantCivilId");
            tableMapping.ColumnMappings.Add("CompanyName", "CompanyName");
            tableMapping.ColumnMappings.Add("PaymentDate", "PaymentDate");
            tableMapping.ColumnMappings.Add("SupervisionLicenseNo", "SupervisionLicenseNo");
            tableMapping.ColumnMappings.Add("BuildingComplex", "BuildingComplex");
            tableMapping.ColumnMappings.Add("RequestDate", "RequestDate");
            tableMapping.ColumnMappings.Add("CreatedBy", "CreatedBy");
            tableMapping.ColumnMappings.Add("CreatedOn", "CreatedOn");
            tableMapping.ColumnMappings.Add("UpdatedBy", "UpdatedBy");
            tableMapping.ColumnMappings.Add("UpdatedOn", "UpdatedOn");
            tableMapping.ColumnMappings.Add("UnitNo", "UnitNo");
            tableMapping.ColumnMappings.Add("owners", "owners");
            tableMapping.ColumnMappings.Add("DMSupervisionStatment", "DMSupervisionStatment");
            this._adapter.TableMappings.Add(tableMapping);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection()
        {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["eServicesConnectionString"].ConnectionString;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection()
        {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        BldPermits.ConsultantCrNo, BldPermits.NumberOfFloors, BldPermits.Co" +
                "nstructedArea, BldPermits.LicenseNo, BldPermits.KrokiNO, BldPermits.DmFileNumber" +
                ", BldPermits.DMLicenseComments, BldPermits.LandArea, \r\n                         " +
                "BldPermits.LandDeedReceiptDate, BldPermits.LandDeedNo, BldSupervisionServices_1." +
                "OwnerNotes, BldSupervisionServices_1.ConsultantNotes, BldSupervisionServices_1.D" +
                "mFileNumber AS FileNumber, \r\n                         BldSupervisionServices_1.D" +
                "mInspectorComments, BldSupervisionServices_1.ID, BldWelyat.WelyahArName, BldSupe" +
                "rvisionServicesTypes.ServiceNameAR, BldSupervisionServicesTypes.ServiceNameEn, \r" +
                "\n                         BldSquareLetters.ArLetter, BldBuildingTypes.BuildingTy" +
                "pe, BldLandUseTypes.UseType, BldRegions.RegionArName, BldRegions.RegionEnName, B" +
                "ldRegions.RegionCode, BldPermits.DistrictNo, \r\n                         BldSuper" +
                "visionServices_1.BldPermitID, BldSupervisionContractors.Cr_Name AS Contractor_Na" +
                "me, BldSupervisionContractors.Cr_No AS Contractor_CRNumber, \r\n                  " +
                "       BldSupervisionServices_1.ContractorCR_No AS Contractor_CR_Number, BldPaym" +
                "ent.Referenceid, BldPayment.PaymentType, BldSupervisionServices_1.PaymentID, Bld" +
                "SupervisionServices_1.ConsultantCivilId, \r\n                         Users.Compan" +
                "yName, BldPayment.PaymentDate, BldSupervisionServices_1.LicenseNo AS Supervision" +
                "LicenseNo, BldPermits.BuildingComplex, BldPermits.RequestDate, BldPermits.Create" +
                "dBy, BldPermits.CreatedOn, \r\n                         BldPermits.UpdatedBy, BldP" +
                "ermits.UpdatedOn, BldPermits.UnitNo, SUBSTRING\r\n                             ((S" +
                "ELECT        \',\' + Name AS [text()]\r\n                                 FROM      " +
                "      BldOwners\r\n                                 WHERE        (BldPermitId =\r\n " +
                "                                                              (SELECT        Bld" +
                "PermitID\r\n                                                                  FROM" +
                "            BldSupervisionServices\r\n                                            " +
                "                      WHERE        (ID = @ID))) FOR XML PATH(\'\')), 2, 1000) AS o" +
                "wners, BldSupervisionServices_1.DMSupervisionStatment\r\nFROM            BldSuperv" +
                "isionServices AS BldSupervisionServices_1 INNER JOIN\r\n                         B" +
                "ldPermits ON BldSupervisionServices_1.BldPermitID = BldPermits.Id INNER JOIN\r\n  " +
                "                       BldWelyat ON BldPermits.WelayahID = BldWelyat.WelyahID IN" +
                "NER JOIN\r\n                         BldBuildingTypes ON BldPermits.BuildingTypeID" +
                " = BldBuildingTypes.ID INNER JOIN\r\n                         BldLandUseTypes ON B" +
                "ldPermits.UseTypeID = BldLandUseTypes.ID INNER JOIN\r\n                         Bl" +
                "dRegions ON BldPermits.RegionID = BldRegions.RegionID AND BldWelyat.WelyahID = B" +
                "ldRegions.WelyahID INNER JOIN\r\n                         BldSquareLetters ON BldP" +
                "ermits.SquareLetterID = BldSquareLetters.ID INNER JOIN\r\n                        " +
                " BldSupervisionServicesTypes ON BldSupervisionServices_1.ServiceTypeID = BldSupe" +
                "rvisionServicesTypes.ID INNER JOIN\r\n                         BldSupervisionContr" +
                "actors ON BldSupervisionServices_1.ContractorCR_No = BldSupervisionContractors.C" +
                "r_No INNER JOIN\r\n                         BldPayment ON BldSupervisionServices_1" +
                ".ID = BldPayment.SupervisionID AND BldPayment.PaymentType = 3 INNER JOIN\r\n      " +
                "                   Users ON BldSupervisionServices_1.ConsultantCivilId = Users.C" +
                "ivilId\r\nWHERE        (BldSupervisionServices_1.ID = @ID)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT        BldPermits.ConsultantCrNo, BldPermits.NumberOfFloors, BldPermits.Co" +
                "nstructedArea, BldPermits.LicenseNo, BldPermits.KrokiNO, BldPermits.DmFileNumber" +
                ", BldPermits.DMLicenseComments, BldPermits.LandArea, \r\n                         " +
                "BldPermits.LandDeedReceiptDate, BldPermits.LandDeedNo, BldSupervisionServices.Ow" +
                "nerNotes, BldSupervisionServices.ConsultantNotes, BldSupervisionServices.DmFileN" +
                "umber AS FileNumber, \r\n                         BldSupervisionServices.DmInspect" +
                "orComments, BldSupervisionServices.TransactNo, BldSupervisionServices.ID, BldWel" +
                "yat.WelyahArName, BldWelyat.WelyahEnName, BldWelyat.WelyahCode, \r\n              " +
                "           BldSupervisionServicesTypes.ServiceNameAR, BldSupervisionServicesType" +
                "s.ServiceNameEn, BldSquareLetters.ArLetter, BldSquareLetters.EnLetter, BldBuildi" +
                "ngTypes.BuildingType, BldLandUseTypes.UseType, \r\n                         BldReg" +
                "ions.RegionArName, BldRegions.RegionEnName, BldRegions.RegionCode, BldPermits.Di" +
                "strictNo, BldSupervisionServices.BldPermitID, BldSupervisionServices.ContractorC" +
                "R_No AS Contractor_CR_Number, \r\n                         BldSupervisionServices." +
                "ConsultantCivilId, BldSupervisionServices.LicenseNo AS SupervisionLicenseNo, SUB" +
                "STRING\r\n                             ((SELECT        \',\' + Name AS [text()]\r\n   " +
                "                              FROM            BldOwners\r\n                       " +
                "          WHERE        (BldPermitId =\r\n                                         " +
                "                      (SELECT        BldPermitID\r\n                              " +
                "                                    FROM            BldSupervisionServices AS Bl" +
                "dSupervisionServices_1\r\n                                                        " +
                "          WHERE        (ID = @ID))) FOR XML PATH(\'\')), 2, 1000) AS owners, BldSu" +
                "pervisionServices.DMSupervisionStatment\r\nFROM            BldSupervisionServices " +
                "AS BldSupervisionServices INNER JOIN\r\n                         BldPermits ON Bld" +
                "SupervisionServices.BldPermitID = BldPermits.Id INNER JOIN\r\n                    " +
                "     BldWelyat ON BldPermits.WelayahID = BldWelyat.WelyahID INNER JOIN\r\n        " +
                "                 BldBuildingTypes ON BldPermits.BuildingTypeID = BldBuildingType" +
                "s.ID INNER JOIN\r\n                         BldLandUseTypes ON BldPermits.UseTypeI" +
                "D = BldLandUseTypes.ID INNER JOIN\r\n                         BldRegions ON BldPer" +
                "mits.RegionID = BldRegions.RegionID INNER JOIN\r\n                         BldSqua" +
                "reLetters ON BldPermits.SquareLetterID = BldSquareLetters.ID INNER JOIN\r\n       " +
                "                  BldSupervisionServicesTypes ON BldSupervisionServices.ServiceT" +
                "ypeID = BldSupervisionServicesTypes.ID\r\nWHERE        (BldSupervisionServices.ID " +
                "= @ID)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(InternalEngineeringDataSet.BldSupervisionServicesDataTable dataTable, int ID)
        {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ID));
            if ((this.ClearBeforeFill == true))
            {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual InternalEngineeringDataSet.BldSupervisionServicesDataTable GetData(int ID)
        {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ID));
            InternalEngineeringDataSet.BldSupervisionServicesDataTable dataTable = new InternalEngineeringDataSet.BldSupervisionServicesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillForUnpaidServices(InternalEngineeringDataSet.BldSupervisionServicesDataTable dataTable, int ID)
        {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ID));
            if ((this.ClearBeforeFill == true))
            {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual InternalEngineeringDataSet.BldSupervisionServicesDataTable GetDataForUnpaidServices(int ID)
        {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ID));
            InternalEngineeringDataSet.BldSupervisionServicesDataTable dataTable = new InternalEngineeringDataSet.BldSupervisionServicesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }

    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class BldSupervisionServicesTypesTableAdapter : global::System.ComponentModel.Component
    {

        private global::System.Data.SqlClient.SqlDataAdapter _adapter;

        private global::System.Data.SqlClient.SqlConnection _connection;

        private global::System.Data.SqlClient.SqlTransaction _transaction;

        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

        private bool _clearBeforeFill;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public BldSupervisionServicesTypesTableAdapter()
        {
            this.ClearBeforeFill = true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter
        {
            get
            {
                if ((this._adapter == null))
                {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection
        {
            get
            {
                if ((this._connection == null))
                {
                    this.InitConnection();
                }
                return this._connection;
            }
            set
            {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null))
                {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null))
                {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null))
                {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
                {
                    if ((this.CommandCollection[i] != null))
                    {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction
        {
            get
            {
                return this._transaction;
            }
            set
            {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
                {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null)
                            && (this.Adapter.DeleteCommand != null)))
                {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null)
                            && (this.Adapter.InsertCommand != null)))
                {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null)
                            && (this.Adapter.UpdateCommand != null)))
                {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
        {
            get
            {
                if ((this._commandCollection == null))
                {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill
        {
            get
            {
                return this._clearBeforeFill;
            }
            set
            {
                this._clearBeforeFill = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter()
        {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "BldSupervisionServicesTypes";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("ServiceNameAR", "ServiceNameAR");
            tableMapping.ColumnMappings.Add("ServiceNameEn", "ServiceNameEn");
            tableMapping.ColumnMappings.Add("ServiceStatus", "ServiceStatus");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[BldSupervisionServicesTypes] WHERE (([ID] = @Original_ID))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[BldSupervisionServicesTypes] ([ServiceNameAR], [ServiceNameEn]" +
                ", [ServiceStatus]) VALUES (@ServiceNameAR, @ServiceNameEn, @ServiceStatus)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ServiceNameAR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ServiceNameAR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ServiceNameEn", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ServiceNameEn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ServiceStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ServiceStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[BldSupervisionServicesTypes] SET [ServiceNameAR] = @ServiceNameAR, " +
                "[ServiceNameEn] = @ServiceNameEn, [ServiceStatus] = @ServiceStatus WHERE (([ID] " +
                "= @Original_ID))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ServiceNameAR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ServiceNameAR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ServiceNameEn", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ServiceNameEn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ServiceStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ServiceStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection()
        {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["eServicesConnectionString"].ConnectionString;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection()
        {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, ServiceNameAR, ServiceNameEn, ServiceStatus FROM dbo.BldSupervisionSer" +
                "vicesTypes";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(InternalEngineeringDataSet.BldSupervisionServicesTypesDataTable dataTable)
        {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true))
            {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual InternalEngineeringDataSet.BldSupervisionServicesTypesDataTable GetData()
        {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            InternalEngineeringDataSet.BldSupervisionServicesTypesDataTable dataTable = new InternalEngineeringDataSet.BldSupervisionServicesTypesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(InternalEngineeringDataSet.BldSupervisionServicesTypesDataTable dataTable)
        {
            return this.Adapter.Update(dataTable);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(InternalEngineeringDataSet dataSet)
        {
            return this.Adapter.Update(dataSet, "BldSupervisionServicesTypes");
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow)
        {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows)
        {
            return this.Adapter.Update(dataRows);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID)
        {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open)
                        != global::System.Data.ConnectionState.Open))
            {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try
            {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally
            {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string ServiceNameAR, string ServiceNameEn, global::System.Nullable<int> ServiceStatus)
        {
            if ((ServiceNameAR == null))
            {
                throw new global::System.ArgumentNullException("ServiceNameAR");
            }
            else
            {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(ServiceNameAR));
            }
            if ((ServiceNameEn == null))
            {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(ServiceNameEn));
            }
            if ((ServiceStatus.HasValue == true))
            {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(ServiceStatus.Value));
            }
            else
            {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open)
                        != global::System.Data.ConnectionState.Open))
            {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try
            {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally
            {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string ServiceNameAR, string ServiceNameEn, global::System.Nullable<int> ServiceStatus, int Original_ID)
        {
            if ((ServiceNameAR == null))
            {
                throw new global::System.ArgumentNullException("ServiceNameAR");
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(ServiceNameAR));
            }
            if ((ServiceNameEn == null))
            {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(ServiceNameEn));
            }
            if ((ServiceStatus.HasValue == true))
            {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(ServiceStatus.Value));
            }
            else
            {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open)
                        != global::System.Data.ConnectionState.Open))
            {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try
            {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally
            {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed))
                {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }

    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class UnpaidServicesTableAdapter : global::System.ComponentModel.Component
    {

        private global::System.Data.SqlClient.SqlDataAdapter _adapter;

        private global::System.Data.SqlClient.SqlConnection _connection;

        private global::System.Data.SqlClient.SqlTransaction _transaction;

        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

        private bool _clearBeforeFill;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public UnpaidServicesTableAdapter()
        {
            this.ClearBeforeFill = true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter
        {
            get
            {
                if ((this._adapter == null))
                {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection
        {
            get
            {
                if ((this._connection == null))
                {
                    this.InitConnection();
                }
                return this._connection;
            }
            set
            {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null))
                {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null))
                {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null))
                {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
                {
                    if ((this.CommandCollection[i] != null))
                    {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction
        {
            get
            {
                return this._transaction;
            }
            set
            {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
                {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null)
                            && (this.Adapter.DeleteCommand != null)))
                {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null)
                            && (this.Adapter.InsertCommand != null)))
                {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null)
                            && (this.Adapter.UpdateCommand != null)))
                {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
        {
            get
            {
                if ((this._commandCollection == null))
                {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill
        {
            get
            {
                return this._clearBeforeFill;
            }
            set
            {
                this._clearBeforeFill = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter()
        {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "UnpaidServices";
            tableMapping.ColumnMappings.Add("ConsultantCrNo", "ConsultantCrNo");
            tableMapping.ColumnMappings.Add("NumberOfFloors", "NumberOfFloors");
            tableMapping.ColumnMappings.Add("ConstructedArea", "ConstructedArea");
            tableMapping.ColumnMappings.Add("LicenseNo", "LicenseNo");
            tableMapping.ColumnMappings.Add("KrokiNO", "KrokiNO");
            tableMapping.ColumnMappings.Add("DmFileNumber", "DmFileNumber");
            tableMapping.ColumnMappings.Add("DMLicenseComments", "DMLicenseComments");
            tableMapping.ColumnMappings.Add("LandArea", "LandArea");
            tableMapping.ColumnMappings.Add("LandDeedReceiptDate", "LandDeedReceiptDate");
            tableMapping.ColumnMappings.Add("LandDeedNo", "LandDeedNo");
            tableMapping.ColumnMappings.Add("OwnerNotes", "OwnerNotes");
            tableMapping.ColumnMappings.Add("ConsultantNotes", "ConsultantNotes");
            tableMapping.ColumnMappings.Add("FileNumber", "FileNumber");
            tableMapping.ColumnMappings.Add("DmInspectorComments", "DmInspectorComments");
            tableMapping.ColumnMappings.Add("TransactNo", "TransactNo");
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("WelyahArName", "WelyahArName");
            tableMapping.ColumnMappings.Add("WelyahEnName", "WelyahEnName");
            tableMapping.ColumnMappings.Add("WelyahCode", "WelyahCode");
            tableMapping.ColumnMappings.Add("ServiceNameAR", "ServiceNameAR");
            tableMapping.ColumnMappings.Add("ServiceNameEn", "ServiceNameEn");
            tableMapping.ColumnMappings.Add("ArLetter", "ArLetter");
            tableMapping.ColumnMappings.Add("EnLetter", "EnLetter");
            tableMapping.ColumnMappings.Add("BuildingType", "BuildingType");
            tableMapping.ColumnMappings.Add("UseType", "UseType");
            tableMapping.ColumnMappings.Add("RegionArName", "RegionArName");
            tableMapping.ColumnMappings.Add("RegionEnName", "RegionEnName");
            tableMapping.ColumnMappings.Add("RegionCode", "RegionCode");
            tableMapping.ColumnMappings.Add("DistrictNo", "DistrictNo");
            tableMapping.ColumnMappings.Add("BldPermitID", "BldPermitID");
            tableMapping.ColumnMappings.Add("Contractor_CR_Number", "Contractor_CR_Number");
            tableMapping.ColumnMappings.Add("ConsultantCivilId", "ConsultantCivilId");
            tableMapping.ColumnMappings.Add("SupervisionLicenseNo", "SupervisionLicenseNo");
            tableMapping.ColumnMappings.Add("owners", "owners");
            tableMapping.ColumnMappings.Add("DMSupervisionStatment", "DMSupervisionStatment");
            tableMapping.ColumnMappings.Add("ServiceTypeID", "ServiceTypeID");
            tableMapping.ColumnMappings.Add("OwnerCivilId", "OwnerCivilId");
            tableMapping.ColumnMappings.Add("OwnerName", "OwnerName");
            this._adapter.TableMappings.Add(tableMapping);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection()
        {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["eServicesConnectionString"].ConnectionString;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection()
        {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        BldPermits.ConsultantCrNo, BldPermits.NumberOfFloors, BldPermits.Co" +
                "nstructedArea, BldPermits.LicenseNo, BldPermits.KrokiNO, BldPermits.DmFileNumber" +
                ", BldPermits.DMLicenseComments, BldPermits.LandArea, \r\n                         " +
                "BldPermits.LandDeedReceiptDate, BldPermits.LandDeedNo, BldSupervisionServices.Ow" +
                "nerNotes, BldSupervisionServices.ConsultantNotes, BldSupervisionServices.DmFileN" +
                "umber AS FileNumber, \r\n                         BldSupervisionServices.DmInspect" +
                "orComments, BldSupervisionServices.TransactNo, BldSupervisionServices.ID, BldWel" +
                "yat.WelyahArName, BldWelyat.WelyahEnName, BldWelyat.WelyahCode, \r\n              " +
                "           BldSupervisionServicesTypes.ServiceNameAR, BldSupervisionServicesType" +
                "s.ServiceNameEn, BldSquareLetters.ArLetter, BldSquareLetters.EnLetter, BldBuildi" +
                "ngTypes.BuildingType, BldLandUseTypes.UseType, \r\n                         BldReg" +
                "ions.RegionArName, BldRegions.RegionEnName, BldRegions.RegionCode, BldPermits.Di" +
                "strictNo, BldSupervisionServices.BldPermitID, BldSupervisionServices.ContractorC" +
                "R_No AS Contractor_CR_Number, \r\n                         BldSupervisionServices." +
                "ConsultantCivilId, BldSupervisionServices.LicenseNo AS SupervisionLicenseNo, SUB" +
                "STRING\r\n                             ((SELECT        \',\' + Name AS [text()]\r\n   " +
                "                              FROM            BldOwners\r\n                       " +
                "          WHERE        (BldPermitId =\r\n                                         " +
                "                      (SELECT        BldPermitID\r\n                              " +
                "                                    FROM            BldSupervisionServices AS Bl" +
                "dSupervisionServices_1\r\n                                                        " +
                "          WHERE        (ID = @ID))) FOR XML PATH(\'\')), 2, 1000) AS owners, BldSu" +
                "pervisionServices.DMSupervisionStatment, BldSupervisionServices.ServiceTypeID, B" +
                "ldSupervisionServices.OwnerCivilId, \r\n                         BldSupervisionSer" +
                "vices.OwnerName\r\nFROM            BldSupervisionServices AS BldSupervisionService" +
                "s INNER JOIN\r\n                         BldPermits ON BldSupervisionServices.BldP" +
                "ermitID = BldPermits.Id INNER JOIN\r\n                         BldWelyat ON BldPer" +
                "mits.WelayahID = BldWelyat.WelyahID INNER JOIN\r\n                         BldBuil" +
                "dingTypes ON BldPermits.BuildingTypeID = BldBuildingTypes.ID INNER JOIN\r\n       " +
                "                  BldLandUseTypes ON BldPermits.UseTypeID = BldLandUseTypes.ID I" +
                "NNER JOIN\r\n                         BldRegions ON BldPermits.RegionID = BldRegio" +
                "ns.RegionID INNER JOIN\r\n                         BldSquareLetters ON BldPermits." +
                "SquareLetterID = BldSquareLetters.ID INNER JOIN\r\n                         BldSup" +
                "ervisionServicesTypes ON BldSupervisionServices.ServiceTypeID = BldSupervisionSe" +
                "rvicesTypes.ID\r\nWHERE        (BldSupervisionServices.ID = @ID)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(InternalEngineeringDataSet.UnpaidServicesDataTable dataTable, int ID)
        {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ID));
            if ((this.ClearBeforeFill == true))
            {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual InternalEngineeringDataSet.UnpaidServicesDataTable GetData(int ID)
        {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ID));
            InternalEngineeringDataSet.UnpaidServicesDataTable dataTable = new InternalEngineeringDataSet.UnpaidServicesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }

    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class AlreadyPaidServicesTableAdapter : global::System.ComponentModel.Component
    {

        private global::System.Data.SqlClient.SqlDataAdapter _adapter;

        private global::System.Data.SqlClient.SqlConnection _connection;

        private global::System.Data.SqlClient.SqlTransaction _transaction;

        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

        private bool _clearBeforeFill;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public AlreadyPaidServicesTableAdapter()
        {
            this.ClearBeforeFill = true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter
        {
            get
            {
                if ((this._adapter == null))
                {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection
        {
            get
            {
                if ((this._connection == null))
                {
                    this.InitConnection();
                }
                return this._connection;
            }
            set
            {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null))
                {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null))
                {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null))
                {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
                {
                    if ((this.CommandCollection[i] != null))
                    {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction
        {
            get
            {
                return this._transaction;
            }
            set
            {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
                {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null)
                            && (this.Adapter.DeleteCommand != null)))
                {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null)
                            && (this.Adapter.InsertCommand != null)))
                {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null)
                            && (this.Adapter.UpdateCommand != null)))
                {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
        {
            get
            {
                if ((this._commandCollection == null))
                {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill
        {
            get
            {
                return this._clearBeforeFill;
            }
            set
            {
                this._clearBeforeFill = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter()
        {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "AlreadyPaidServices";
            tableMapping.ColumnMappings.Add("ConsultantCrNo", "ConsultantCrNo");
            tableMapping.ColumnMappings.Add("NumberOfFloors", "NumberOfFloors");
            tableMapping.ColumnMappings.Add("ConstructedArea", "ConstructedArea");
            tableMapping.ColumnMappings.Add("LicenseNo", "LicenseNo");
            tableMapping.ColumnMappings.Add("KrokiNO", "KrokiNO");
            tableMapping.ColumnMappings.Add("DmFileNumber", "DmFileNumber");
            tableMapping.ColumnMappings.Add("DMLicenseComments", "DMLicenseComments");
            tableMapping.ColumnMappings.Add("LandArea", "LandArea");
            tableMapping.ColumnMappings.Add("LandDeedReceiptDate", "LandDeedReceiptDate");
            tableMapping.ColumnMappings.Add("LandDeedNo", "LandDeedNo");
            tableMapping.ColumnMappings.Add("OwnerNotes", "OwnerNotes");
            tableMapping.ColumnMappings.Add("ConsultantNotes", "ConsultantNotes");
            tableMapping.ColumnMappings.Add("FileNumber", "FileNumber");
            tableMapping.ColumnMappings.Add("DmInspectorComments", "DmInspectorComments");
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("WelyahArName", "WelyahArName");
            tableMapping.ColumnMappings.Add("ServiceNameAR", "ServiceNameAR");
            tableMapping.ColumnMappings.Add("ServiceNameEn", "ServiceNameEn");
            tableMapping.ColumnMappings.Add("ArLetter", "ArLetter");
            tableMapping.ColumnMappings.Add("BuildingType", "BuildingType");
            tableMapping.ColumnMappings.Add("UseType", "UseType");
            tableMapping.ColumnMappings.Add("RegionArName", "RegionArName");
            tableMapping.ColumnMappings.Add("RegionEnName", "RegionEnName");
            tableMapping.ColumnMappings.Add("RegionCode", "RegionCode");
            tableMapping.ColumnMappings.Add("DistrictNo", "DistrictNo");
            tableMapping.ColumnMappings.Add("BldPermitID", "BldPermitID");
            tableMapping.ColumnMappings.Add("Contractor_Name", "Contractor_Name");
            tableMapping.ColumnMappings.Add("Contractor_CRNumber", "Contractor_CRNumber");
            tableMapping.ColumnMappings.Add("Contractor_CR_Number", "Contractor_CR_Number");
            tableMapping.ColumnMappings.Add("Referenceid", "Referenceid");
            tableMapping.ColumnMappings.Add("PaymentType", "PaymentType");
            tableMapping.ColumnMappings.Add("PaymentID", "PaymentID");
            tableMapping.ColumnMappings.Add("ConsultantCivilId", "ConsultantCivilId");
            tableMapping.ColumnMappings.Add("CompanyName", "CompanyName");
            tableMapping.ColumnMappings.Add("PaymentDate", "PaymentDate");
            tableMapping.ColumnMappings.Add("SupervisionLicenseNo", "SupervisionLicenseNo");
            tableMapping.ColumnMappings.Add("BuildingComplex", "BuildingComplex");
            tableMapping.ColumnMappings.Add("RequestDate", "RequestDate");
            tableMapping.ColumnMappings.Add("CreatedBy", "CreatedBy");
            tableMapping.ColumnMappings.Add("CreatedOn", "CreatedOn");
            tableMapping.ColumnMappings.Add("UpdatedBy", "UpdatedBy");
            tableMapping.ColumnMappings.Add("UpdatedOn", "UpdatedOn");
            tableMapping.ColumnMappings.Add("UnitNo", "UnitNo");
            tableMapping.ColumnMappings.Add("owners", "owners");
            tableMapping.ColumnMappings.Add("DMSupervisionStatment", "DMSupervisionStatment");
            this._adapter.TableMappings.Add(tableMapping);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection()
        {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["eServicesConnectionString"].ConnectionString;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection()
        {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        BldPermits.ConsultantCrNo, BldPermits.NumberOfFloors, BldPermits.Co" +
                "nstructedArea, BldPermits.LicenseNo, BldPermits.KrokiNO, BldPermits.DmFileNumber" +
                ", BldPermits.DMLicenseComments, BldPermits.LandArea, \r\n                         " +
                "BldPermits.LandDeedReceiptDate, BldPermits.LandDeedNo, BldSupervisionServices_1." +
                "OwnerNotes, BldSupervisionServices_1.ConsultantNotes, BldSupervisionServices_1.D" +
                "mFileNumber AS FileNumber, \r\n                         BldSupervisionServices_1.D" +
                "mInspectorComments, BldSupervisionServices_1.ID, BldWelyat.WelyahArName, BldSupe" +
                "rvisionServicesTypes.ServiceNameAR, BldSupervisionServicesTypes.ServiceNameEn, \r" +
                "\n                         BldSquareLetters.ArLetter, BldBuildingTypes.BuildingTy" +
                "pe, BldLandUseTypes.UseType, BldRegions.RegionArName, BldRegions.RegionEnName, B" +
                "ldRegions.RegionCode, BldPermits.DistrictNo, \r\n                         BldSuper" +
                "visionServices_1.BldPermitID, BldSupervisionContractors.Cr_Name AS Contractor_Na" +
                "me, BldSupervisionContractors.Cr_No AS Contractor_CRNumber, \r\n                  " +
                "       BldSupervisionServices_1.ContractorCR_No AS Contractor_CR_Number, BldPaym" +
                "ent.Referenceid, BldPayment.PaymentType, BldSupervisionServices_1.PaymentID, Bld" +
                "SupervisionServices_1.ConsultantCivilId, \r\n                         Users.Compan" +
                "yName, BldPayment.PaymentDate, BldSupervisionServices_1.LicenseNo AS Supervision" +
                "LicenseNo, BldPermits.BuildingComplex, BldPermits.RequestDate, BldPermits.Create" +
                "dBy, BldPermits.CreatedOn, \r\n                         BldPermits.UpdatedBy, BldP" +
                "ermits.UpdatedOn, BldPermits.UnitNo, SUBSTRING\r\n                             ((S" +
                "ELECT        \',\' + Name AS [text()]\r\n                                 FROM      " +
                "      BldOwners\r\n                                 WHERE        (BldPermitId =\r\n " +
                "                                                              (SELECT        Bld" +
                "PermitID\r\n                                                                  FROM" +
                "            BldSupervisionServices\r\n                                            " +
                "                      WHERE        (ID = @ID))) FOR XML PATH(\'\')), 2, 1000) AS o" +
                "wners, BldSupervisionServices_1.DMSupervisionStatment\r\nFROM            BldSuperv" +
                "isionServices AS BldSupervisionServices_1 INNER JOIN\r\n                         B" +
                "ldPermits ON BldSupervisionServices_1.BldPermitID = BldPermits.Id INNER JOIN\r\n  " +
                "                       BldWelyat ON BldPermits.WelayahID = BldWelyat.WelyahID IN" +
                "NER JOIN\r\n                         BldBuildingTypes ON BldPermits.BuildingTypeID" +
                " = BldBuildingTypes.ID INNER JOIN\r\n                         BldLandUseTypes ON B" +
                "ldPermits.UseTypeID = BldLandUseTypes.ID INNER JOIN\r\n                         Bl" +
                "dRegions ON BldPermits.RegionID = BldRegions.RegionID AND BldWelyat.WelyahID = B" +
                "ldRegions.WelyahID INNER JOIN\r\n                         BldSquareLetters ON BldP" +
                "ermits.SquareLetterID = BldSquareLetters.ID INNER JOIN\r\n                        " +
                " BldSupervisionServicesTypes ON BldSupervisionServices_1.ServiceTypeID = BldSupe" +
                "rvisionServicesTypes.ID INNER JOIN\r\n                         BldSupervisionContr" +
                "actors ON BldSupervisionServices_1.ContractorCR_No = BldSupervisionContractors.C" +
                "r_No INNER JOIN\r\n                         BldPayment ON BldSupervisionServices_1" +
                ".PaymentID = BldPayment.PaymentID INNER JOIN\r\n                         Users ON " +
                "BldSupervisionServices_1.ConsultantCivilId = Users.CivilId\r\nWHERE        (BldSup" +
                "ervisionServices_1.ID = @ID)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(InternalEngineeringDataSet.AlreadyPaidServicesDataTable dataTable, int ID)
        {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ID));
            if ((this.ClearBeforeFill == true))
            {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual InternalEngineeringDataSet.AlreadyPaidServicesDataTable GetData(int ID)
        {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ID));
            InternalEngineeringDataSet.AlreadyPaidServicesDataTable dataTable = new InternalEngineeringDataSet.AlreadyPaidServicesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }

    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SpecialSignsTableAdapter : global::System.ComponentModel.Component
    {

        private global::System.Data.SqlClient.SqlDataAdapter _adapter;

        private global::System.Data.SqlClient.SqlConnection _connection;

        private global::System.Data.SqlClient.SqlTransaction _transaction;

        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;

        private bool _clearBeforeFill;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SpecialSignsTableAdapter()
        {
            this.ClearBeforeFill = true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter
        {
            get
            {
                if ((this._adapter == null))
                {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection
        {
            get
            {
                if ((this._connection == null))
                {
                    this.InitConnection();
                }
                return this._connection;
            }
            set
            {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null))
                {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null))
                {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null))
                {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
                {
                    if ((this.CommandCollection[i] != null))
                    {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction
        {
            get
            {
                return this._transaction;
            }
            set
            {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1))
                {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null)
                            && (this.Adapter.DeleteCommand != null)))
                {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null)
                            && (this.Adapter.InsertCommand != null)))
                {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null)
                            && (this.Adapter.UpdateCommand != null)))
                {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
        {
            get
            {
                if ((this._commandCollection == null))
                {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill
        {
            get
            {
                return this._clearBeforeFill;
            }
            set
            {
                this._clearBeforeFill = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter()
        {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SpecialSigns";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("ServiceTypeID", "ServiceTypeID");
            tableMapping.ColumnMappings.Add("Status", "Status");
            tableMapping.ColumnMappings.Add("OwnerCivilId", "OwnerCivilId");
            tableMapping.ColumnMappings.Add("KrokiNO", "KrokiNO");
            tableMapping.ColumnMappings.Add("OwnerName", "OwnerName");
            tableMapping.ColumnMappings.Add("OwnerPhoneNo", "OwnerPhoneNo");
            tableMapping.ColumnMappings.Add("CreatedBy", "CreatedBy");
            tableMapping.ColumnMappings.Add("CreatedOn", "CreatedOn");
            tableMapping.ColumnMappings.Add("UpdatedBy", "UpdatedBy");
            tableMapping.ColumnMappings.Add("UpdatedOn", "UpdatedOn");
            tableMapping.ColumnMappings.Add("LicenseNo", "LicenseNo");
            tableMapping.ColumnMappings.Add("ServiceNameAR", "ServiceNameAR");
            tableMapping.ColumnMappings.Add("TransactNo", "TransactNo");
            tableMapping.ColumnMappings.Add("WelayahID", "WelayahID");
            tableMapping.ColumnMappings.Add("RegionID", "RegionID");
            tableMapping.ColumnMappings.Add("SquareLetterID", "SquareLetterID");
            tableMapping.ColumnMappings.Add("DistrictNo", "DistrictNo");
            tableMapping.ColumnMappings.Add("UseTypeID", "UseTypeID");
            tableMapping.ColumnMappings.Add("LandArea", "LandArea");
            tableMapping.ColumnMappings.Add("DMSupervisionStatment", "DMSupervisionStatment");
            tableMapping.ColumnMappings.Add("RegionArName", "RegionArName");
            tableMapping.ColumnMappings.Add("WelyahArName", "WelyahArName");
            tableMapping.ColumnMappings.Add("ArLetter", "ArLetter");
            tableMapping.ColumnMappings.Add("UseType", "UseType");
            this._adapter.TableMappings.Add(tableMapping);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection()
        {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["eServicesConnectionString"].ConnectionString;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection()
        {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        BldSupervisionServices.ID, BldSupervisionServices.ServiceTypeID, Bl" +
                "dSupervisionServices.Status, BldSupervisionServices.OwnerCivilId, BldSupervision" +
                "Services.KrokiNO, BldSupervisionServices.OwnerName, \r\n                         B" +
                "ldSupervisionServices.OwnerPhoneNo, BldSupervisionServices.CreatedBy, BldSupervi" +
                "sionServices.CreatedOn, BldSupervisionServices.UpdatedBy, BldSupervisionServices" +
                ".UpdatedOn, BldSupervisionServices.LicenseNo, \r\n                         BldSupe" +
                "rvisionServicesTypes.ServiceNameAR, BldSupervisionServices.TransactNo, BldSuperv" +
                "isionServices.WelayahID, BldSupervisionServices.RegionID, BldSupervisionServices" +
                ".SquareLetterID, \r\n                         BldSupervisionServices.DistrictNo, B" +
                "ldSupervisionServices.UseTypeID, BldSupervisionServices.LandArea, BldSupervision" +
                "Services.DMSupervisionStatment, BldRegions.RegionArName, BldWelyat.WelyahArName," +
                " \r\n                         BldSquareLetters.ArLetter, BldLandUseTypes.UseType\r\n" +
                "FROM            BldSupervisionServices INNER JOIN\r\n                         BldS" +
                "upervisionServicesTypes ON BldSupervisionServices.ServiceTypeID = BldSupervision" +
                "ServicesTypes.ID INNER JOIN\r\n                         BldRegions ON BldSupervisi" +
                "onServices.RegionID = BldRegions.RegionID INNER JOIN\r\n                         B" +
                "ldSquareLetters ON BldSupervisionServices.SquareLetterID = BldSquareLetters.ID I" +
                "NNER JOIN\r\n                         BldWelyat ON BldSupervisionServices.WelayahI" +
                "D = BldWelyat.WelyahID INNER JOIN\r\n                         BldLandUseTypes ON B" +
                "ldSupervisionServices.UseTypeID = BldLandUseTypes.ID\r\nWHERE        (BldSupervisi" +
                "onServices.ID = @ID)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(InternalEngineeringDataSet.SpecialSignsDataTable dataTable, int ID)
        {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ID));
            if ((this.ClearBeforeFill == true))
            {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual InternalEngineeringDataSet.SpecialSignsDataTable GetData(int ID)
        {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ID));
            InternalEngineeringDataSet.SpecialSignsDataTable dataTable = new InternalEngineeringDataSet.SpecialSignsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }

    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component
    {

        private UpdateOrderOption _updateOrder;

        private BldRegionsTableAdapter _bldRegionsTableAdapter;

        private BldSquareLettersTableAdapter _bldSquareLettersTableAdapter;

        private BldWelyatTableAdapter _bldWelyatTableAdapter;

        private BldPaymentTableAdapter _bldPaymentTableAdapter;

        private BldBuildingTypesTableAdapter _bldBuildingTypesTableAdapter;

        private BldLandUseTypesTableAdapter _bldLandUseTypesTableAdapter;

        private BldSupervisionServicesTypesTableAdapter _bldSupervisionServicesTypesTableAdapter;

        private bool _backupDataSetBeforeUpdate;

        private global::System.Data.IDbConnection _connection;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public UpdateOrderOption UpdateOrder
        {
            get
            {
                return this._updateOrder;
            }
            set
            {
                this._updateOrder = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public BldRegionsTableAdapter BldRegionsTableAdapter
        {
            get
            {
                return this._bldRegionsTableAdapter;
            }
            set
            {
                this._bldRegionsTableAdapter = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public BldSquareLettersTableAdapter BldSquareLettersTableAdapter
        {
            get
            {
                return this._bldSquareLettersTableAdapter;
            }
            set
            {
                this._bldSquareLettersTableAdapter = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public BldWelyatTableAdapter BldWelyatTableAdapter
        {
            get
            {
                return this._bldWelyatTableAdapter;
            }
            set
            {
                this._bldWelyatTableAdapter = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public BldPaymentTableAdapter BldPaymentTableAdapter
        {
            get
            {
                return this._bldPaymentTableAdapter;
            }
            set
            {
                this._bldPaymentTableAdapter = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public BldBuildingTypesTableAdapter BldBuildingTypesTableAdapter
        {
            get
            {
                return this._bldBuildingTypesTableAdapter;
            }
            set
            {
                this._bldBuildingTypesTableAdapter = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public BldLandUseTypesTableAdapter BldLandUseTypesTableAdapter
        {
            get
            {
                return this._bldLandUseTypesTableAdapter;
            }
            set
            {
                this._bldLandUseTypesTableAdapter = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public BldSupervisionServicesTypesTableAdapter BldSupervisionServicesTypesTableAdapter
        {
            get
            {
                return this._bldSupervisionServicesTypesTableAdapter;
            }
            set
            {
                this._bldSupervisionServicesTypesTableAdapter = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool BackupDataSetBeforeUpdate
        {
            get
            {
                return this._backupDataSetBeforeUpdate;
            }
            set
            {
                this._backupDataSetBeforeUpdate = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection
        {
            get
            {
                if ((this._connection != null))
                {
                    return this._connection;
                }
                if (((this._bldRegionsTableAdapter != null)
                            && (this._bldRegionsTableAdapter.Connection != null)))
                {
                    return this._bldRegionsTableAdapter.Connection;
                }
                if (((this._bldSquareLettersTableAdapter != null)
                            && (this._bldSquareLettersTableAdapter.Connection != null)))
                {
                    return this._bldSquareLettersTableAdapter.Connection;
                }
                if (((this._bldWelyatTableAdapter != null)
                            && (this._bldWelyatTableAdapter.Connection != null)))
                {
                    return this._bldWelyatTableAdapter.Connection;
                }
                if (((this._bldPaymentTableAdapter != null)
                            && (this._bldPaymentTableAdapter.Connection != null)))
                {
                    return this._bldPaymentTableAdapter.Connection;
                }
                if (((this._bldBuildingTypesTableAdapter != null)
                            && (this._bldBuildingTypesTableAdapter.Connection != null)))
                {
                    return this._bldBuildingTypesTableAdapter.Connection;
                }
                if (((this._bldLandUseTypesTableAdapter != null)
                            && (this._bldLandUseTypesTableAdapter.Connection != null)))
                {
                    return this._bldLandUseTypesTableAdapter.Connection;
                }
                if (((this._bldSupervisionServicesTypesTableAdapter != null)
                            && (this._bldSupervisionServicesTypesTableAdapter.Connection != null)))
                {
                    return this._bldSupervisionServicesTypesTableAdapter.Connection;
                }
                return null;
            }
            set
            {
                this._connection = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount
        {
            get
            {
                int count = 0;
                if ((this._bldRegionsTableAdapter != null))
                {
                    count = (count + 1);
                }
                if ((this._bldSquareLettersTableAdapter != null))
                {
                    count = (count + 1);
                }
                if ((this._bldWelyatTableAdapter != null))
                {
                    count = (count + 1);
                }
                if ((this._bldPaymentTableAdapter != null))
                {
                    count = (count + 1);
                }
                if ((this._bldBuildingTypesTableAdapter != null))
                {
                    count = (count + 1);
                }
                if ((this._bldLandUseTypesTableAdapter != null))
                {
                    count = (count + 1);
                }
                if ((this._bldSupervisionServicesTypesTableAdapter != null))
                {
                    count = (count + 1);
                }
                return count;
            }
        }

        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateUpdatedRows(InternalEngineeringDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows)
        {
            int result = 0;
            if ((this._bldWelyatTableAdapter != null))
            {
                global::System.Data.DataRow[] updatedRows = dataSet.BldWelyat.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null)
                            && (0 < updatedRows.Length)))
                {
                    result = (result + this._bldWelyatTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._bldRegionsTableAdapter != null))
            {
                global::System.Data.DataRow[] updatedRows = dataSet.BldRegions.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null)
                            && (0 < updatedRows.Length)))
                {
                    result = (result + this._bldRegionsTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._bldSquareLettersTableAdapter != null))
            {
                global::System.Data.DataRow[] updatedRows = dataSet.BldSquareLetters.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null)
                            && (0 < updatedRows.Length)))
                {
                    result = (result + this._bldSquareLettersTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._bldBuildingTypesTableAdapter != null))
            {
                global::System.Data.DataRow[] updatedRows = dataSet.BldBuildingTypes.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null)
                            && (0 < updatedRows.Length)))
                {
                    result = (result + this._bldBuildingTypesTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._bldLandUseTypesTableAdapter != null))
            {
                global::System.Data.DataRow[] updatedRows = dataSet.BldLandUseTypes.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null)
                            && (0 < updatedRows.Length)))
                {
                    result = (result + this._bldLandUseTypesTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._bldSupervisionServicesTypesTableAdapter != null))
            {
                global::System.Data.DataRow[] updatedRows = dataSet.BldSupervisionServicesTypes.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null)
                            && (0 < updatedRows.Length)))
                {
                    result = (result + this._bldSupervisionServicesTypesTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._bldPaymentTableAdapter != null))
            {
                global::System.Data.DataRow[] updatedRows = dataSet.BldPayment.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null)
                            && (0 < updatedRows.Length)))
                {
                    result = (result + this._bldPaymentTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }

        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateInsertedRows(InternalEngineeringDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows)
        {
            int result = 0;
            if ((this._bldWelyatTableAdapter != null))
            {
                global::System.Data.DataRow[] addedRows = dataSet.BldWelyat.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null)
                            && (0 < addedRows.Length)))
                {
                    result = (result + this._bldWelyatTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._bldRegionsTableAdapter != null))
            {
                global::System.Data.DataRow[] addedRows = dataSet.BldRegions.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null)
                            && (0 < addedRows.Length)))
                {
                    result = (result + this._bldRegionsTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._bldSquareLettersTableAdapter != null))
            {
                global::System.Data.DataRow[] addedRows = dataSet.BldSquareLetters.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null)
                            && (0 < addedRows.Length)))
                {
                    result = (result + this._bldSquareLettersTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._bldBuildingTypesTableAdapter != null))
            {
                global::System.Data.DataRow[] addedRows = dataSet.BldBuildingTypes.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null)
                            && (0 < addedRows.Length)))
                {
                    result = (result + this._bldBuildingTypesTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._bldLandUseTypesTableAdapter != null))
            {
                global::System.Data.DataRow[] addedRows = dataSet.BldLandUseTypes.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null)
                            && (0 < addedRows.Length)))
                {
                    result = (result + this._bldLandUseTypesTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._bldSupervisionServicesTypesTableAdapter != null))
            {
                global::System.Data.DataRow[] addedRows = dataSet.BldSupervisionServicesTypes.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null)
                            && (0 < addedRows.Length)))
                {
                    result = (result + this._bldSupervisionServicesTypesTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._bldPaymentTableAdapter != null))
            {
                global::System.Data.DataRow[] addedRows = dataSet.BldPayment.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null)
                            && (0 < addedRows.Length)))
                {
                    result = (result + this._bldPaymentTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }

        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateDeletedRows(InternalEngineeringDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows)
        {
            int result = 0;
            if ((this._bldPaymentTableAdapter != null))
            {
                global::System.Data.DataRow[] deletedRows = dataSet.BldPayment.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null)
                            && (0 < deletedRows.Length)))
                {
                    result = (result + this._bldPaymentTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._bldSupervisionServicesTypesTableAdapter != null))
            {
                global::System.Data.DataRow[] deletedRows = dataSet.BldSupervisionServicesTypes.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null)
                            && (0 < deletedRows.Length)))
                {
                    result = (result + this._bldSupervisionServicesTypesTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._bldLandUseTypesTableAdapter != null))
            {
                global::System.Data.DataRow[] deletedRows = dataSet.BldLandUseTypes.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null)
                            && (0 < deletedRows.Length)))
                {
                    result = (result + this._bldLandUseTypesTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._bldBuildingTypesTableAdapter != null))
            {
                global::System.Data.DataRow[] deletedRows = dataSet.BldBuildingTypes.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null)
                            && (0 < deletedRows.Length)))
                {
                    result = (result + this._bldBuildingTypesTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._bldSquareLettersTableAdapter != null))
            {
                global::System.Data.DataRow[] deletedRows = dataSet.BldSquareLetters.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null)
                            && (0 < deletedRows.Length)))
                {
                    result = (result + this._bldSquareLettersTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._bldRegionsTableAdapter != null))
            {
                global::System.Data.DataRow[] deletedRows = dataSet.BldRegions.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null)
                            && (0 < deletedRows.Length)))
                {
                    result = (result + this._bldRegionsTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._bldWelyatTableAdapter != null))
            {
                global::System.Data.DataRow[] deletedRows = dataSet.BldWelyat.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null)
                            && (0 < deletedRows.Length)))
                {
                    result = (result + this._bldWelyatTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }

        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows)
        {
            if (((updatedRows == null)
                        || (updatedRows.Length < 1)))
            {
                return updatedRows;
            }
            if (((allAddedRows == null)
                        || (allAddedRows.Count < 1)))
            {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1))
            {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false))
                {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }

        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public virtual int UpdateAll(InternalEngineeringDataSet dataSet)
        {
            if ((dataSet == null))
            {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false))
            {
                return 0;
            }
            if (((this._bldRegionsTableAdapter != null)
                        && (this.MatchTableAdapterConnection(this._bldRegionsTableAdapter.Connection) == false)))
            {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._bldSquareLettersTableAdapter != null)
                        && (this.MatchTableAdapterConnection(this._bldSquareLettersTableAdapter.Connection) == false)))
            {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._bldWelyatTableAdapter != null)
                        && (this.MatchTableAdapterConnection(this._bldWelyatTableAdapter.Connection) == false)))
            {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._bldPaymentTableAdapter != null)
                        && (this.MatchTableAdapterConnection(this._bldPaymentTableAdapter.Connection) == false)))
            {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._bldBuildingTypesTableAdapter != null)
                        && (this.MatchTableAdapterConnection(this._bldBuildingTypesTableAdapter.Connection) == false)))
            {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._bldLandUseTypesTableAdapter != null)
                        && (this.MatchTableAdapterConnection(this._bldLandUseTypesTableAdapter.Connection) == false)))
            {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._bldSupervisionServicesTypesTableAdapter != null)
                        && (this.MatchTableAdapterConnection(this._bldSupervisionServicesTypesTableAdapter.Connection) == false)))
            {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null))
            {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken)
                        == global::System.Data.ConnectionState.Broken))
            {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed))
            {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null))
            {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate)
            {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try
            {
                // ---- Prepare for update -----------
                //
                if ((this._bldRegionsTableAdapter != null))
                {
                    revertConnections.Add(this._bldRegionsTableAdapter, this._bldRegionsTableAdapter.Connection);
                    this._bldRegionsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._bldRegionsTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._bldRegionsTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._bldRegionsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._bldRegionsTableAdapter.Adapter);
                    }
                }
                if ((this._bldSquareLettersTableAdapter != null))
                {
                    revertConnections.Add(this._bldSquareLettersTableAdapter, this._bldSquareLettersTableAdapter.Connection);
                    this._bldSquareLettersTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._bldSquareLettersTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._bldSquareLettersTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._bldSquareLettersTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._bldSquareLettersTableAdapter.Adapter);
                    }
                }
                if ((this._bldWelyatTableAdapter != null))
                {
                    revertConnections.Add(this._bldWelyatTableAdapter, this._bldWelyatTableAdapter.Connection);
                    this._bldWelyatTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._bldWelyatTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._bldWelyatTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._bldWelyatTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._bldWelyatTableAdapter.Adapter);
                    }
                }
                if ((this._bldPaymentTableAdapter != null))
                {
                    revertConnections.Add(this._bldPaymentTableAdapter, this._bldPaymentTableAdapter.Connection);
                    this._bldPaymentTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._bldPaymentTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._bldPaymentTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._bldPaymentTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._bldPaymentTableAdapter.Adapter);
                    }
                }
                if ((this._bldBuildingTypesTableAdapter != null))
                {
                    revertConnections.Add(this._bldBuildingTypesTableAdapter, this._bldBuildingTypesTableAdapter.Connection);
                    this._bldBuildingTypesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._bldBuildingTypesTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._bldBuildingTypesTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._bldBuildingTypesTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._bldBuildingTypesTableAdapter.Adapter);
                    }
                }
                if ((this._bldLandUseTypesTableAdapter != null))
                {
                    revertConnections.Add(this._bldLandUseTypesTableAdapter, this._bldLandUseTypesTableAdapter.Connection);
                    this._bldLandUseTypesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._bldLandUseTypesTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._bldLandUseTypesTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._bldLandUseTypesTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._bldLandUseTypesTableAdapter.Adapter);
                    }
                }
                if ((this._bldSupervisionServicesTypesTableAdapter != null))
                {
                    revertConnections.Add(this._bldSupervisionServicesTypesTableAdapter, this._bldSupervisionServicesTypesTableAdapter.Connection);
                    this._bldSupervisionServicesTypesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._bldSupervisionServicesTypesTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._bldSupervisionServicesTypesTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._bldSupervisionServicesTypesTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._bldSupervisionServicesTypesTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete))
                {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else
                {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count))
                {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1))
                    {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count))
                {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1))
                    {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex)
            {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate)
                {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else
                {
                    if ((0 < allAddedRows.Count))
                    {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1))
                        {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally
            {
                if (workConnOpened)
                {
                    workConnection.Close();
                }
                if ((this._bldRegionsTableAdapter != null))
                {
                    this._bldRegionsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._bldRegionsTableAdapter]));
                    this._bldRegionsTableAdapter.Transaction = null;
                }
                if ((this._bldSquareLettersTableAdapter != null))
                {
                    this._bldSquareLettersTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._bldSquareLettersTableAdapter]));
                    this._bldSquareLettersTableAdapter.Transaction = null;
                }
                if ((this._bldWelyatTableAdapter != null))
                {
                    this._bldWelyatTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._bldWelyatTableAdapter]));
                    this._bldWelyatTableAdapter.Transaction = null;
                }
                if ((this._bldPaymentTableAdapter != null))
                {
                    this._bldPaymentTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._bldPaymentTableAdapter]));
                    this._bldPaymentTableAdapter.Transaction = null;
                }
                if ((this._bldBuildingTypesTableAdapter != null))
                {
                    this._bldBuildingTypesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._bldBuildingTypesTableAdapter]));
                    this._bldBuildingTypesTableAdapter.Transaction = null;
                }
                if ((this._bldLandUseTypesTableAdapter != null))
                {
                    this._bldLandUseTypesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._bldLandUseTypesTableAdapter]));
                    this._bldLandUseTypesTableAdapter.Transaction = null;
                }
                if ((this._bldSupervisionServicesTypesTableAdapter != null))
                {
                    this._bldSupervisionServicesTypesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._bldSupervisionServicesTypesTableAdapter]));
                    this._bldSupervisionServicesTypesTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count))
                {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1))
                    {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst)
        {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection)
        {
            if ((this._connection != null))
            {
                return true;
            }
            if (((this.Connection == null)
                        || (inputConnection == null)))
            {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal))
            {
                return true;
            }
            return false;
        }

        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public enum UpdateOrderOption
        {

            InsertUpdateDelete = 0,

            UpdateInsertDelete = 1,
        }

        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow>
        {

            private global::System.Data.DataRelation _relation;

            private int _childFirst;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst)
            {
                this._relation = relation;
                if (childFirst)
                {
                    this._childFirst = -1;
                }
                else
                {
                    this._childFirst = 1;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance)
            {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null)
                            && (traversedRows.ContainsKey(parent) == false));
                )
                {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0))
                {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null)
                                && (traversedRows.ContainsKey(parent) == false));
                    )
                    {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2)
            {
                if (object.ReferenceEquals(row1, row2))
                {
                    return 0;
                }
                if ((row1 == null))
                {
                    return -1;
                }
                if ((row2 == null))
                {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2))
                {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else
                {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null)
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)))
                    {
                        return -1;
                    }
                    else
                    {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591