@model DMeServices.Models.ViewModels.Permits.SupervisionViewModel
@{
    ViewBag.Title = "NewSupervisionServiceRequest";
    Layout = "~/Views/Shared/_SubLayout.cshtml";
}
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")"></script>
<script src="@Url.Content("~/Scripts/jquery.unobtrusive-ajax.min.js")"></script>
<script>
    $(document).ready(function () {
        var counter = 0;
        $("#addrow").on("click", function () {
            var newRow = $("<tr>");
            var cols = "";
            cols += '<td><select data-rel="chosen" style="width:75%;padding: 0px 12px;" class="form-control" name="AreaType' + counter + '"><option>منزل</option><option>فيلا</option><option>محل</option></select></td>';
            cols += '<td><input type="file" name="Attachment' + counter + '"/></td>';
            cols += '<td><textarea type="text" class="form-control" rows="1" name="phone' + counter + '"></textarea></td>';
            cols += '<td><input type="button" class="ibtnDel btn btn-md btn-danger "  value="حذف"></td>';
            newRow.append(cols);
            $("table.order-list").append(newRow);
            counter++;
        });
        $("table.order-list").on("click", ".ibtnDel", function (event) {
            $(this).closest("tr").remove();
            counter -= 1
        });
        function ClearInputs() {
            debugger;
            $('#FileNotes').text('');
            $('#FileUpload').text('');
        }
    });
</script>

<style>
    .main-menu ul {
        z-index: 0;
    }

    .form-group {
        margin-bottom: 2px;
    }

    .table > tbody > tr > td, .table > thead > tr > td {
        padding: 4px;
    }

    .dropdown-toggle {
        background-color: transparent;
        border-color: #000000;
        border-style: solid;
    }

    .chosen-container-single .chosen-single {
        height: 37px !important;
    }

        .chosen-container-single .chosen-single span {
            margin-top: 4px !important;
        }

        .chosen-container-single .chosen-single div {
            top: 4px !important;
        }

    #PaymentBankCode_chosen {
        width: 100% !important;
    }

    .modal-dialog {
        height: 90%; /* = 90% of the .modal-backdrop block = %90 of the screen */
    }

    .modal-content {
        margin-top: 150px;
    }

    #PdfModal {
        height: 100%;
    }
</style>


<div>
    <ul class="breadcrumb">
        <li>
            <a href="@Url.Action("Index","Home")">الرئيسية</a>
        </li>
        <li>
            <a href="@Url.Action("Index","BuildingSupervision", new {@showadd = Model.ShowAdd})">طلبات رقابة البناء</a>
        </li>
        <li>
            <a href="#">طلب جديد</a>
        </li>
    </ul>
</div>

<div class="col-lg-12 col-sm-12">
    <div class="row">
        @using (Html.BeginForm("SaveNewSupervision", "BuildingSupervision", FormMethod.Post, new { encType = "multipart/form-data", @id = "Permitsform" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(m => m.BuildingPermits.ConsultantCivilId);
            @Html.HiddenFor(m => m.ShowAdd, new { @id = "userType" });
            <div class="row">
                <div class="form-group col-md-2">
                    <label class="control-label">نوع الطلب</label>
                    @Html.DropDownListFor(m => m.ServiceType.ID, (List<SelectListItem>)ViewBag.DDServiceType, new { style = "padding:0px", @class = "form-control", @data_rel = "chosen", id = "ServiceType" })
                </div>
                <div class="form-group col-md-2">
                    <label class="control-label">
                        @Html.DisplayNameFor(m => m.BuildingPermits.LicenseNo)
                    </label>
                    @Html.TextBoxFor(m => m.BuildingPermits.LicenseNo, new { @class = "form-control", id = "LicenseNo", @placeholder = "رقم الترخيص" })
                </div>
                <div class="form-group col-md-1">
                    <br />
                    <input id="LicenseNoSearch" class="btn btn-primary" value="البحث" />
                </div>
            </div>
            <div id="divDetails">
                @if (Model.BuildingPermits != null)
                {
                    Html.RenderPartial("_Details", Model);
                }
            </div>
            if (Model.ShowAdd == true)
            {
                <div class="row">
                    <div class="form-group col-md-4">
                        <div class="col-md-6">
                            <label class="control-label"> السجل التجاري للمقاول</label>
                            @Html.TextBoxFor(n => n.Contractor.Cr_No, null, new { @class = "form-control", placeholder = "السجل التجاري للمقاول", @id = "CommercialNo", @onchange = "EmptyTextBoxes();" })
                        </div>
                        <div class="col-md-2">
                            <br />
                            <input class="btn btn-primary" onclick="javascript: callRestApi();" value="البحث" />
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-md-3">
                        <label class="control-label"> اسم الشركة</label>
                        @*<input type="text" readonly class="form-control" id="CompanyName">*@
                        @Html.TextBoxFor(n => n.Contractor.Cr_Name, null, new { @readonly = "readonly", @class = "form-control", placeholder = "اسم الشركة", @id = "CompanyName" })
                    </div>

                    <div class="form-group col-md-2">
                        <label class="control-label"> الشكل القانوني</label>
                        @*<input type="text" readonly class="form-control" id="CompanyName">*@
                        @Html.TextBoxFor(n => n.Contractor.LegalForm, null, new { @readonly = "readonly", @class = "form-control", placeholder = "الشكل القانوني", @id = "LegalForm" })
                    </div>

                    <div class="form-group col-md-4">
                        <label class="control-label"> الاسم بالكامل</label>
                        @*<input type="text" readonly class="form-control" id="CompanyName">*@
                        @Html.TextBoxFor(n => n.Contractor.OwnerFullName, null, new { @readonly = "readonly", @class = "form-control", placeholder = "الاسم بالكامل", @id = "FullName" })
                        @Html.ValidationMessageFor(n => n.Contractor.OwnerFullName, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-md-3">
                        <label class="control-label"> الرقم المدني</label>
                        @*<input type="text" readonly class="form-control" id="CompanyName">*@
                        @Html.TextBoxFor(n => n.Contractor.Owner_Civil_ID, null, new { @readonly = "readonly", @class = "form-control", placeholder = "الرقم المدني", @id = "CivilID" })
                        @Html.ValidationMessageFor(n => n.Contractor.Owner_Civil_ID, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-md-3">
                        <label class="control-label"> رقم الهاتف</label>
                        @*<input type="text" readonly class="form-control" id="CompanyName">*@
                        @Html.TextBoxFor(n => n.Contractor.PhoneNo, null, new { @class = "form-control", placeholder = "رقم الهاتف", @id = "PhoneNumber" })
                        @Html.ValidationMessageFor(n => n.Contractor.PhoneNo, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-3">
                        <label class="control-label"> البريد الالكتروني</label>
                        @*<input type="text" readonly class="form-control" id="CompanyName">*@
                        @Html.TextBoxFor(n => n.Contractor.Email, null, new { @class = "form-control", placeholder = "البريد الالكتروني", @id = "Email" })
                        @Html.ValidationMessageFor(n => n.Contractor.Email, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-3">
                        <label class="control-label">اسم مشرف العمال</label>
                        @*<input type="text" readonly class="form-control" id="CompanyName">*@
                        @Html.TextBoxFor(n => n.Contractor.Foreman_Name, null, new { @class = "form-control", placeholder = "رقم الهاتف", @id = "PhoneNumber" })
                        @Html.ValidationMessageFor(n => n.Contractor.Foreman_Name, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-3">
                        <label class="control-label"> الرقم المدني لمشرف العمال</label>
                        @*<input type="text" readonly class="form-control" id="CompanyName">*@
                        @Html.TextBoxFor(n => n.Contractor.Foreman_Civil_ID, null, new { @class = "form-control", placeholder = "رقم الهاتف", @id = "PhoneNumber" })
                        @Html.ValidationMessageFor(n => n.Contractor.Foreman_Civil_ID, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group col-lg-12">
                    <h5>المرفقات</h5>
                    <div class="form-group col-lg-4">
                        <div class="col-lg-4">
                            <label class="control-label">@Html.DisplayName("السجل التجاري للمقاول")</label>
                        
                            @Html.TextBoxFor(m => m.ContractorCRFile.File, new { @id = "ContractorCRFile", @type = "file", @class = "form-control", @onchange = "onchangeevent(this);" })
                            @Html.ValidationMessageFor(m => m.ContractorCRFile.File, "", new { @style = "color:orange;" })
                        </div>
                        @*<div class="col-lg-3">
                                @Html.TextBoxFor(m => m.ContractorCRFile.Description, new { @class = "form-control", @placeholder = "الرقم" })
                                @Html.ValidationMessageFor(m => m.ContractorCRFile.Description, "", new { @style = "color:orange;" })
                            </div>*@
                        <div class="col-lg-1">
                            <div id="ContractorCRFileLoader" class="loading" style="display:none;"> <img src="~/Content/ajax-loader.gif" alt="Loader"></div>
                            <span id="ContractorCRFileSpan" style="display:none"><i style="font-size: 30px" class="glyphicon glyphicon-ok green"></i></span>
                        </div>
                    </div>
                    <div class="form-group col-lg-4">
                        <div class="col-lg-4">
                            <label class="control-label">@Html.DisplayName("البطاقة الشخصية للمقاول")</label>
                        
                            @Html.TextBoxFor(m => m.ContractorOwnerPersonalCard.File, new { @type = "file", @id = "ContractorOwnerPersonalCard", @class = "form-control", @onchange = "onchangeevent(this);" })
                            @Html.ValidationMessageFor(m => m.ContractorOwnerPersonalCard.File, "", new { @style = "color:orange;" })
                        </div>
                        @*<div class="col-lg-3">
                                @Html.TextBoxFor(m => m.ContractorOwnerPersonalCard.Description, new { @class = "form-control", @placeholder = "الرقم" })
                                @Html.ValidationMessageFor(m => m.ContractorOwnerPersonalCard.Description, "", new { @style = "color:orange;" })
                            </div>*@
                        <div class="col-lg-1">
                            <div id="ContractorOwnerPersonalCardLoader" class="loading" style="display:none;"> <img src="~/Content/ajax-loader.gif" alt="Loader"></div>
                            <span id="ContractorOwnerPersonalCardSpan" style="display:none"><i style="font-size: 30px" class="glyphicon glyphicon-ok green"></i></span>
                        </div>
                    </div>
                    <div class="form-group col-lg-4">
                        <div class="col-lg-4">
                            <label class="control-label">@Html.DisplayName("البطاقة الشخصية لمسؤول العمال")</label>
                       
                            @Html.TextBoxFor(m => m.ForemanPersonalCard.File, new { @type = "file", @id = "ForemanPersonalCard", @class = "form-control", @onchange = "onchangeevent(this);" })
                            @Html.ValidationMessageFor(m => m.ForemanPersonalCard.File, "", new { @style = "color:orange;" })
                        </div>
                        @*<div class="col-lg-3">
                                @Html.TextBoxFor(m => m.ForemanPersonalCard.Description, new { @class = "form-control", @placeholder = "الرقم" })
                                @Html.ValidationMessageFor(m => m.ForemanPersonalCard.Description, "", new { @style = "color:orange;" })
                            </div>*@
                        <div class="col-lg-1">
                            <div id="ForemanPersonalCardLoader" class="loading" style="display:none;"> <img src="~/Content/ajax-loader.gif" alt="Loader"></div>
                            <span id="ForemanPersonalCardSpan" style="display:none"><i style="font-size: 30px" class="glyphicon glyphicon-ok green"></i></span>
                        </div>
                    </div>
                </div>

                <div class="form-group col-lg-12">
                    <h5>التعهدات والاتفاقيات</h5>
                    <div class="form-group col-lg-4">
                        <div class="col-lg-4">
                            <label class="control-label">@Html.DisplayName("رسالة إشراف")</label>
                        
                            @Html.TextBoxFor(m => m.SupervisionLetter.File, new { @id = "SupervisionLetter", @type = "file", @class = "form-control", @onchange = "onchangeevent(this);" })
                            @Html.ValidationMessageFor(m => m.SupervisionLetter.File, "", new { @style = "color:orange;" })
                        </div>

                        <div class="col-lg-1">
                            <div id="SupervisionLetterLoader" class="loading" style="display:none;"> <img src="~/Content/ajax-loader.gif" alt="Loader"></div>
                            <span id="SupervisionLetterSpan" style="display:none"><i style="font-size: 30px" class="glyphicon glyphicon-ok green"></i></span>
                        </div>
                    </div>
                    <div class="form-group col-lg-4">
                        <div class="col-lg-4">
                            <label class="control-label">@Html.DisplayName("اتفاقية الاشراف")</label>
                        
                            @Html.TextBoxFor(m => m.SupervisionAgreement.File, new { @type = "file", @id = "SupervisionAgreement", @class = "form-control", @onchange = "onchangeevent(this);" })
                            @Html.ValidationMessageFor(m => m.SupervisionAgreement.File, "", new { @style = "color:orange;" })
                        </div>

                        <div class="col-lg-1">
                            <div id="SupervisionAgreementLoader" class="loading" style="display:none;"> <img src="~/Content/ajax-loader.gif" alt="Loader"></div>
                            <span id="SupervisionAgreementSpan" style="display:none"><i style="font-size: 30px" class="glyphicon glyphicon-ok green"></i></span>
                        </div>

                    </div>
                </div>

                <div class="form-group col-lg-12">
                    <h5>الاستمارات</h5>
                    <div class="form-group col-lg-4">
                        <div class="col-lg-4">
                            <label class="control-label">@Html.DisplayName("العلامات المساحية")</label>
                        
                            @Html.TextBoxFor(m => m.PlotMarksForm.File, new { @type = "file", @id = "PlotMarksForm", @class = "form-control", @onchange = "onchangeevent(this);" })
                            @Html.ValidationMessageFor(m => m.PlotMarksForm.File, "", new { @style = "color:orange;" })
                        </div>
                        <div class="col-lg-3">
                            @*<a class="modal-link" data-toggle="tooltip" title="Predogled"
                                data-url="@Url.Action("PdfPartial", "BuildingSupervision", new { id = 1 })"
                                onclick="showGenericModal(event);">تحميل الملف<i class="fa fa-eye-slash modal-link"></i></a>*@
                            <a class="modal-link" href="@Url.Action("PdfPartial", new { @controller = "BuildingSupervision", @Id = 1 })">تحميل الملف<i class="fa fa-eye-slash modal-link"></i></a>
                        </div>
                        <div class="col-lg-1">
                            <div id="PlotMarksFormLoader" class="loading" style="display:none;"> <img src="~/Content/ajax-loader.gif" alt="Loader"></div>
                            <span id="PlotMarksFormSpan" style="display:none"><i style="font-size: 30px" class="glyphicon glyphicon-ok green"></i></span>
                        </div>
                    </div>
                    <div class="form-group col-lg-4">
                        <div class="col-lg-4">
                            <label class="control-label">@Html.DisplayName("طلب الشروع بالعمل")</label>
                        
                            @Html.TextBoxFor(m => m.ConstructionPermitApplication.File, new { @id = "ConstructionPermitApplication", @type = "file", @class = "form-control", @onchange = "onchangeevent(this);" })
                            @Html.ValidationMessageFor(m => m.ConstructionPermitApplication.File, "", new { @style = "color:orange;" })
                        </div>
                        <div class="col-lg-3">
                            <a class="modal-link" href="@Url.Action("PdfPartial", new { @controller = "BuildingSupervision", @Id = 2 })">تحميل الملف<i class="fa fa-eye-slash modal-link"></i></a>
                            @*<a class="modal-link" data-toggle="tooltip" title="Predogled"
                                data-url="@Url.Action("PdfPartial", "BuildingSupervision", new { id = 2 })"
                                onclick="showGenericModal(event);">تحميل الملف<i class="fa fa-eye-slash modal-link"></i></a>*@
                        </div>
                        <div class="col-lg-1">
                            <div id="ConstructionPermitApplicationLoader" class="loading" style="display:none;"> <img src="~/Content/ajax-loader.gif" alt="Loader"></div>
                            <span id="ConstructionPermitApplicationSpan" style="display:none"><i style="font-size: 30px" class="glyphicon glyphicon-ok green"></i></span>
                        </div>
                    </div>
                    <div class="form-group col-lg-4">
                        <div class="col-lg-4">
                            <label class="control-label">@Html.DisplayName("استمارة لوحة المشروع")</label>
                        
                            @Html.TextBoxFor(m => m.ProjectBoardForm.File, new { @type = "file", @id = "ProjectBoardForm", @class = "form-control", @onchange = "onchangeevent(this);" })
                            @Html.ValidationMessageFor(m => m.ProjectBoardForm.File, "", new { @style = "color:orange;" })
                        </div>
                        <div class="col-lg-3">
                            <a class="modal-link" href="@Url.Action("PdfPartial", new { @controller = "BuildingSupervision", @Id = 4 })">تحميل الملف<i class="fa fa-eye-slash modal-link"></i></a>
                            @*<a class="modal-link" data-toggle="tooltip" title="Predogled"
                                data-url="@Url.Action("PdfPartial", "BuildingSupervision", new { id = 2 })"
                                onclick="showGenericModal(event);">تحميل الملف<i class="fa fa-eye-slash modal-link"></i></a>*@
                        </div>
                        <div class="col-lg-1">
                            <div id="ProjectBoardFormLoader" class="loading" style="display:none;"> <img src="~/Content/ajax-loader.gif" alt="Loader"></div>
                            <span id="ProjectBoardFormSpan" style="display:none"><i style="font-size: 30px" class="glyphicon glyphicon-ok green"></i></span>
                        </div>
                    </div>
                </div>
            }
            <div class="row">
                <br />
                <div class="form-group col-lg-12">
                    <div class="form-group col-lg-4">
                        <div class="col-lg-4">
                            <label class="control-label">@Html.DisplayName("مرفقات اخرى")</label>
                        
                            @Html.TextBoxFor(m => m.OtherAttachments.File, new { @type = "file", @id = "Others", @class = "form-control", @onchange = "onchangeevent(this);" })
                            @Html.ValidationMessageFor(m => m.OtherAttachments.File, "", new { @style = "color:orange;" })
                        </div>
                        <!--<div class="col-lg-3">-->
                        @*<a class="modal-link" href="@Url.Action("PdfPartial", new { @controller = "BuildingSupervision", @Id = 2 })">عرض الملف<i class="fa fa-eye-slash modal-link"></i></a>*@
                        @*<a class="modal-link" data-toggle="tooltip" title="Predogled"
                            data-url="@Url.Action("PdfPartial", "BuildingSupervision", new { id = 2 })"
                            onclick="showGenericModal(event);">تحميل الملف<i class="fa fa-eye-slash modal-link"></i></a>*@
                        <!--</div>-->
                        <div class="col-lg-1">
                            <div id="OthersLoader" class="loading" style="display:none;"> <img src="~/Content/ajax-loader.gif" alt="Loader"></div>
                            <span id="OthersSpan" style="display:none"><i style="font-size: 30px" class="glyphicon glyphicon-ok green"></i></span>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
    <br />
    <br />
    <div id="divAttachments" class="row">

        @if (Model.ListOfAttachments != null && Model.ListOfAttachments.Count > 0)
        {
            Html.RenderPartial("_ListAttachments", Model);
        }

    </div>
    <br />
    <br />
    <button class="btn btn-primary" id="Save" onclick="return confirm('هل انت متاكد !');">
        <i class="glyphicon glyphicon-ok"></i> أرسال البيانات
    </button>
    <a style="float:left" href="@Url.Action( "Index","BuildingPermits")" class="btn btn-primary" role="button">الصفحة السابقة</a>
</div>
<div class="modal fade bs-modal-dialog" id="MainModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">خطأ</h5>
            </div>
            <div class="modal-body">
                <h5 id="error"></h5>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<script>
    var Notify = (msg) => alert(msg);
    function EmptyTextBoxes() {
        $('#CompanyName').val('');
        $('#LegalForm').val('');
        $('#PhoneNumber').val('');
        //$('#FullName').val('');
        $('#State').val('');
        $('#Governorate').val('');
        $('#Email').val('');
        //$('#CivilID').val('');
    }
    //--For Pubilsh please add this in start of url string-- /EngineeringService/External
    function callRestApi() {
        var Comm_Val = $('#CommercialNo').val();
        //var userCivilID = $('#hiddenCivil_id').val();
        EmptyTextBoxes();
        $.ajax({
            url: "../Register/GetCompanyDataByCr/" + Comm_Val,
            type: "Get",
            dataType: "json",
            success: function (data) {

                if (data) {

                    //var investorsArray = data.companyOverview.investors.investor;
                    //var signatoriesArray = data.companyOverview.signatories.signatory;
                    //var isOwner = false;
                    //var personIndex = -1;

                    //signatoriesArray.forEach((item, index) => {
                    //    if (item.idNumber[0] === userCivilID) {
                    //        isOwner = true;
                    //        personIndex = index;
                    //        return;
                    //    }
                    //});
                    //investorsArray.forEach((item, index) => {
                    //    if (item.person != null) {
                    //        if (item.person.idNumber === userCivilID) {

                    //            isOwner = true;
                    //            personIndex = index;
                    //            return;
                    //        }
                    //    }
                    //});


                    var activitiesArray = data.companyOverview.declaredActivities.activity;
                    var isValidActivity = false;
                    activitiesArray.forEach((activity) => {
                        if (["410001"].includes(activity.isicCode)) {
                            isValidActivity = true;
                            return;
                        }
                    });
                    if (isValidActivity) {
                        $('#CompanyName').val(data.companyOverview.companyNameArabic);
                        $('#LegalForm').val(data.companyOverview.legalStatus.nameAr);
                        $('#PhoneNumber').val(data.companyOverview.contact.mobile);
                        $('#FullName').val(data.companyOverview.investors.investor[0].person.nameAr);
                        $('#State').val(data.companyOverview.address.state.nameAr);
                        $('#Governorate').val(data.companyOverview.address.governorate.nameAr);
                        $('#Email').val(data.companyOverview.contact.email);
                        $('#CivilID').val(data.companyOverview.investors.investor[0].person.idNumber);
                    } else {
                        EmptyTextBoxes();
                        Notify("Not valid Actitvy");
                    }
                }
            },
            error: function (msg) {
                alert("يمكن فقط للمفوضين تسجيل الشركات");
            }
        });
    };
</script>
<script type="text/javascript">
    $(function () {
        $('body').on('click', '.modal-link', function (e) {

            $(this).attr('data-target', '#MainModal');
            e.preventDefault();
            $("iframe").attr("src", $(this).attr('href'));
            $(this).attr('data-toggle', 'modal');
        });
        // Attach listener to .modal-close-btn's so that when the button is pressed the modal dialog disappears
        $('body').on('click', '.modal-close-btn', function () {

            $('#MainModal').modal('hide');

        });
        //clear modal cache, so that new content can be loaded
        $('#MainModal').on('hidden.bs.modal', function () {

            $(this).removeData('bs.modal');
        });

        $(document).on("hidden.bs.modal", function (e) {
            $(e.target).removeData("bs.modal").find(".modal-content").empty();
        });

        $('#CancelModal').on('click', function () {
            return false;
        });
    });
</script>
<script src="~/Scripts/jquery-1.10.2.js"></script>
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.mask/1.14.10/jquery.mask.js"></script>

<script type="text/javascript">
    function moveCursor(fromText, toText) {
        $("#KrokiNO").mask("99-99-999-99-9999");
        var currentval = $('#' + fromText.id).val();
        var length = fromText.value.length;
        var maxLength = fromText.maxLength;
        if (length == maxLength) {
            document.getElementById(toText.id).focus();
            var krokivalue = $("#KrokiNO").val();
            if (krokivalue === '') {
                $("#KrokiNO").val(currentval);
            } else {
                $("#KrokiNO").val(krokivalue + '-' + currentval);
            }
        }
    }
    $("#KrokiNO").mask("99-99-999-99-9999");
    $("#KrokiNO").on("blur", function () {
        var last = $(this).val().substr($(this).val().indexOf("-") + 1);
        if (last.length == 2) {
            var move = $(this).val().substr($(this).val().indexOf("-") - 1, 1);
            var lastfour = move + last;
            var first = $(this).val().substr(0, 2);
            $(this).val(first + '-' + lastfour);
        }
    });
</script>
<script type="text/javascript">
    $(function () {
        $("#Welayah").change(function () {
            $("#Region").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetRegions")', // Calling json method
                dataType: 'json',
                data: { id: $("#Welayah").val() },
                // Get Selected Welayah ID.
                success: function (regions) {
                    $.each(regions, function (i, region) {
                        $("#Region").append('<option value="' + region.Value + '">' + region.Text + '</option>');
                    });
					$("[data-rel='chosen']").trigger("chosen:updated");
                    $("#Area").empty();
                    $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetAreas")', // Calling json method
                    dataType: 'json',
                    data: { id: $("#Region").val() },
                    // Get Selected Region ID.
                        success: function (areas) {
                        $.each(areas, function (i, area) {
                            $("#Area").append('<option value="' + area.Value + '">' + area.Text + '</option>');
                        });
						$("[data-rel='chosen']").trigger("chosen:updated");
                    },
                    error: function (ex) {
                        alert('Failed to retrieve areas.' + ex);
                        }
                    });
                    return false;
                },
                error: function (ex) {
                    alert('Failed to retrieve Regions.' + ex);
                }
            });
            return false;
        });
    });
</script>
<script type="text/javascript">
    $(document).ready(function () {
        //Country Dropdown Selectedchange event
        $("#Region").change(function () {
            $("#Area").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetAreas")', // Calling json method
                dataType: 'json',
                data: { id: $("#Region").val() },
                // Get Selected Country ID.
                success: function (areas) {
                    $.each(areas, function (i, area) {
                        $("#Area").append('<option value="' + area.Value + '">' +
                            area.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });
            return false;
        });
        $("#LicenseNoSearch").click(function () {
            var data = new FormData();

            var url = "@Url.Action("GetLicenseData", "BuildingSupervision")";
            data.append("licenseNo", $("#LicenseNo").val());
            data.append("userType", $("#userType").val());

            $.ajax({
            url: url,
            type: "POST",
            processData: false,
            contentType: false,
            data: data,
            success: function (response) {
                if (response.msg) {
                    var error = response.msg;
                    $("#error").css({ fontSize: "15px",color:"red"});
                    $("#error").html(error);
                    $("#MainModal").modal("show");
                }

                else{
                    $('#divDetails').html(response)
                }

                //console.log(response);
                //$('#OwnerName').val(response.companyOverview.companyNameArabic);
            },
            error: function (er) {
                console.log(er);
                $('#LicenseNoSearch').attr('disabled', true);
            }
        });
    });
    });
</script>
<script>
    function ClearInputs() {
        $('#FileNotes').val('');
        $('#FileUpload').val('');
    }
    function OnFailure() {
        $('#txtMessageText').text('');
    }
    $("#Save").click(function () {
        $('#Permitsform').submit();
    });
</script>

<script>
    function onchangeevent(textBox) {
        var fileName = $('#' + textBox.id).val();
        $('#' + textBox.id + 'Loader').css("display", "block");
        if (fileName) { // returns true if the string is not empty
            var filesize = ($('#' + textBox.id)[0].files[0].size);
            //alert(fileize);
            var valid_extensions = /(\.JPG|\.JPEG|\.PDF|\.PNG|\.jpg|\.jpeg|\.pdf|\.png)$/i;
            if (valid_extensions.test(fileName) && filesize <= 3000000) {

                $('#' + textBox.id + 'Loader').css("display", "none");
                $('#' + textBox.id + 'Span').css("display", "block");
                console.log("Tst");
            }
            else {
                $('#' + textBox.id + 'Span').css("display", "none");
            }
            // alert(fileName + " was selected");
        } else { // no file was selected

            $('#' + textBox.id + 'Span').css("display", "none");
            // alert("no file selected");
        }
    }
    function ClearInputs() {
        $('#FileNotes').val('');
        $('#FileUpload').val('');
    }
    function OnFailure() {
        $('#txtMessageText').text('');
    }
</script>

<script>
    $(document).ready(function () {
        $('#SaveAttachment').attr('disabled', true);
        $("#AttTypeId option[value='0']").attr("disabled", "disabled");
        $("#MapFile").change(function () {

            var fileName = $("#MapFile").val();

            if (fileName) {
                var valid_extensions = /(\.jpg|\.jpeg|\.pdf|\.png)$/i;
                if (valid_extensions.test(fileName) && $("#AttTypeId").val() != "") {
                    $('#SaveAttachment').attr('disabled', false);
                }
                else {
                    $('#SaveAttachment').attr('disabled', true);
                }
            } else {
                $('#SaveAttachment').attr('disabled', true);
            }
        });

        $("#AttTypeId").change(function () {

            var fileName = $("#MapFile").val();

            if (fileName) {
                var valid_extensions = /(\.jpg|\.jpeg|\.gif|\.pdf|\.png)$/i;
                if (valid_extensions.test(fileName) && $("#AttTypeId").val() != "") {

                    $('#SaveAttachment').attr('disabled', false);
                }
                else {
                    $('#SaveAttachment').attr('disabled', true);
                }
            } else {
                $('#SaveAttachment').attr('disabled', true);
            }
        });

        $("#SaveAttachment").click(function () {
        var data = new FormData();
        var files = $("#MapFile").get(0).files;
        if (files.length > 0) {
            data.append("MyAttached", files[0]);
            data.append("AttTypeId", $("#AttTypeId").val());
            data.append("FileDescription", $("#FileDescription").val());
        }
        var url = "@Url.Action("SaveAttachment", "BuildingPermits")";
        $.ajax({
            url: url,
            type: "POST",
            processData: false,
            contentType: false,
            data: data,
            success: function (response) {
                $('#FileDescription').val('');
                $('#AttTypeId').val('0');
                $('#MapFile').val('');
                $('#SaveAttachment').attr('disabled', true);

                $('#divAttachments').html(response)
            },
            error: function (er) {
                console.log(er);
                $('#SaveAttachment').attr('disabled', true);
            }
        });
    });
    });
</script>



