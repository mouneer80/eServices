@model DMeServices.Models.ViewModels.Permits.PermitsViewModel
@{
    ViewBag.Title = "NewPermits";
    Layout = "~/Views/Shared/_SubLayout.cshtml";
}



<script src="@Url.Content("~/Scripts/jquery.validate.min.js")"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")"></script>
<script src="@Url.Content("~/Scripts/jquery.unobtrusive-ajax.min.js")"></script>



<script>
    $(document).ready(function () {
            
        var counter = 0;

        $("#addrow").on("click", function () {
            var newRow = $("<tr>");
            var cols = "";
            cols += '<td><select data-rel="chosen" style="width:75%;padding: 0px 12px;" class="form-control" name="AreaType' + counter + '"><option>منزل</option><option>فيلا</option><option>محل</option></select></td>';
            cols += '<td><input type="file" name="Attachment' + counter + '"/></td>';
            cols += '<td><textarea type="text" class="form-control" rows="1" name="phone' + counter + '"></textarea></td>';

            cols += '<td><input type="button" class="ibtnDel btn btn-md btn-danger "  value="حذف"></td>';
            newRow.append(cols);
            $("table.order-list").append(newRow);
            counter++;
        });

        $("table.order-list").on("click", ".ibtnDel", function (event) {
            $(this).closest("tr").remove();
            counter -= 1
        });


        function ClearInputs() {
            debugger;
            $('#FileNotes').text('');
            $('#FileUpload').text('');

        }

    });

</script>

<style>
    .form-group {
        margin-bottom: 2px;
    }

    .table > tbody > tr > td, .table > thead > tr > td {
        padding: 4px;
    }

    .dropdown-toggle {
        background-color: transparent;
        border-color: #000000;
        border-style: solid;
    }

    .chosen-container-single .chosen-single {
        height: 37px !important;
    }

        .chosen-container-single .chosen-single span {
            margin-top: 4px !important;
        }

        .chosen-container-single .chosen-single div {
            top: 4px !important;
        }

    #PaymentBankCode_chosen {
        width: 100% !important;
    }
</style>


<div>
    <ul class="breadcrumb">
        <li>
            <a href="@Url.Action("Index","Home")">الرئيسية</a>
        </li>
        <li>
            <a href="@Url.Action("Index","BuildingPermits")">تصاريح البناء</a>
        </li>
        <li>
            <a href="#">تصريح بناء جديد</a>
        </li>
    </ul>
</div>
<div class="col-lg-9 col-sm-9">
    <div class="row">


        @using (Html.BeginForm("SaveNewPermits", "BuildingPermits", FormMethod.Post, new { encType = "multipart/form-data", @id = "Permitsform" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(m => m.BuildingPermits.ConsultantCivilId);
            <div class="row">
                <div class="box col-md-12">
                    <div class="form-group col-md-12">
                        <h5>بيانات مكان قطعة الأرض</h5>
                        <div class="form-group col-md-6">

                            <label class="control-label">محافظة</label>
                            <input class="form-control" placeholder="ظفار" readonly="readonly" />

                        </div>
                        <div class="form-group col-md-6">

                            <label class="control-label">اسم الولاية</label>
                            @Html.DropDownListFor(m => m.BuildingPermits.WelayahID, (List<SelectListItem>)ViewBag.DDWelayat, new { style = "padding:0px", @class = "form-control", @data_rel = "chosen", id = "Welayah" })

                        </div>

                        <div class="form-group col-md-6">

                            <label class="control-label">اسم القرية / المنطقة</label>
                            @Html.DropDownListFor(m => m.BuildingPermits.RegionID, new SelectList(string.Empty, "Value", "Text"), "-- اختر القرية / المنطقة --", new { style = "padding:0px", @class = "form-control", @data_rel = "chosen", id = "Region" })

                        </div>
                    </div>
                    <div class="form-group col-md-12">
                        <h5>بيانات مالك الارض</h5>
                        <div class="form-group col-md-6">
                            <label class="control-label">@Html.DisplayNameFor(m => m.BuildingPermits.OwnerName)</label>

                            @Html.TextBoxFor(m => m.BuildingPermits.OwnerName, new { @class = "form-control", id = "OwnerName", @placeholder = "إسم المالك" })
                            @Html.ValidationMessageFor(m => m.BuildingPermits.OwnerName, "", new { @style = "color:orange;" })
                        </div>
                        <div class="form-group col-md-6">
                            <label class="control-label">
                                @Html.DisplayNameFor(m => m.BuildingPermits.OwnerCivilId)
                            </label>
                            @Html.TextBoxFor(m => m.BuildingPermits.OwnerCivilId, new { @class = "form-control", id = "OwnerCivilId", @placeholder = "الرقم المدني للمالك" })
                            @Html.ValidationMessageFor(m => m.BuildingPermits.OwnerCivilId, "", new { @style = "color:orange;" })
                        </div>

                        <div class="form-group col-md-6">
                            <label class="control-label">
                                @Html.DisplayNameFor(m => m.BuildingPermits.OwnerPhoneNo)
                            </label>
                            @Html.TextBoxFor(m => m.BuildingPermits.OwnerPhoneNo, new { @class = "form-control", id = "OwnerPhoneNo", @placeholder = "الهاتف" })
                            @Html.ValidationMessageFor(m => m.BuildingPermits.OwnerPhoneNo, "", new { @style = "color:orange;" })
                        </div>
                        @*<div class="form-group col-md-6">
                                <label class="control-label">
                                    @Html.DisplayNameFor(m => m.BuildingPermits.DistrictName)
                                </label>
                                @Html.TextBoxFor(m => m.BuildingPermits.DistrictName, new { @class = "form-control", id = "DistrictName", @placeholder = "المنطقة" })
                                @Html.ValidationMessageFor(m => m.BuildingPermits.DistrictName, "", new { @style = "color:orange;" })
                            </div>*@
                    </div>
                    <div class="form-group col-md-12">
                        <h5>بيانات قطعة الأرض</h5>
                        <div class="form-group col-md-6">
                            <label class="control-label">
                                @Html.DisplayNameFor(m => m.BuildingPermits.SquareArea)
                            </label>
                            @Html.DropDownList("SquareLetters", (List<SelectListItem>)ViewBag.DDSquareLetters, new { style = "padding:0px", @class = "form-control", @data_rel = "chosen", id = "SquareLetters" })
                            @*@Html.TextBoxFor(m => m.BuildingPermits.SquareArea, new { @class = "form-control", id = "SquareArea", @placeholder = "المربع" })*@
                            @*@Html.ValidationMessageFor(m => m.BuildingPermits.SquareArea, "", new { @style = "color:orange;" })*@
                        </div>
                        <div class="form-group col-md-6">
                            <label class="control-label">
                                @Html.DisplayNameFor(m => m.BuildingPermits.DistrictNo)
                            </label>
                            @Html.TextBoxFor(m => m.BuildingPermits.DistrictNo, new { @class = "form-control", id = "DistrictNo", @placeholder = "رقم القطعة" })
                            @Html.ValidationMessageFor(m => m.BuildingPermits.DistrictNo, "", new { @style = "color:orange;" })
                        </div>
                    </div>
                    <div class="form-group col-md-12">
                        <h5>بيانات ترخيص البناء</h5>
                        <div class="form-group col-md-6">
                            <label class="control-label">
                                @Html.DisplayNameFor(m => m.BuildingPermits.LicenseNo)
                            </label>
                            @Html.TextBoxFor(m => m.BuildingPermits.LicenseNo, new { @class = "form-control", id = "LicenseNo", @placeholder = "رقم الترخيص" })
                            @Html.ValidationMessageFor(m => m.BuildingPermits.LicenseNo, "", new { @style = "color:orange;" })
                        </div>
                        <div class="form-group col-md-6">
                            <label class="control-label">
                                @Html.DisplayNameFor(m => m.BuildingPermits.KrokiNO)
                            </label>
                            @Html.TextBoxFor(m => m.BuildingPermits.KrokiNO, new { @class = "form-control", id = "KrokiNO", @placeholder = "رقم الكروكي" })
                            @Html.ValidationMessageFor(m => m.BuildingPermits.KrokiNO, "", new { @style = "color:orange;" })
                        </div>
                        <div class="form-group col-md-6">
                            <label class="control-label">
                                @Html.DisplayNameFor(m => m.BuildingPermits.ConstructedArea)
                            </label>
                            @Html.TextBoxFor(m => m.BuildingPermits.ConstructedArea, new { @class = "form-control", id = "ConstructedArea", @placeholder = "المساحة المراد بنائها" })
                            @Html.ValidationMessageFor(m => m.BuildingPermits.ConstructedArea, "", new { @style = "color:orange;" })
                        </div>
                    </div>
                    <div class="form-group col-md-12">
                        <div class="form-group col-md-6">
                            <label class="control-label">
                                @Html.DisplayNameFor(m => m.BuildingPermits.ConstructionType)
                            </label>
                            @Html.DropDownList("DDLandUseTypes", (List<SelectListItem>)ViewBag.DDLandUseTypes, new { style = "padding:0px", @class = "form-control", @data_rel = "chosen", id = "LandUseTypes" })
                            @*@Html.TextBoxFor(m => m.BuildingPermits.ConstructionType, new { @class = "form-control", id = "ConstructionType", @placeholder = "نوع البناء" })
                                @Html.ValidationMessageFor(m => m.BuildingPermits.ConstructionType, "", new { @style = "color:orange;" })*@
                        </div>
                        <div class="form-group col-md-6">
                            <label class="control-label">نوع المبنى</label>
                            @Html.DropDownList("BuildingTypes", (List<SelectListItem>)ViewBag.DDBuildingTypes, new { style = "padding:0px", @class = "form-control", @data_rel = "chosen", id = "BuildingTypes" })
                        </div>
                        <div class="form-group col-md-6">
                            <label class="control-label">
                                @Html.DisplayNameFor(m => m.BuildingPermits.NumberOfFloors)
                            </label>
                            @Html.TextBoxFor(m => m.BuildingPermits.NumberOfFloors, new { @class = "form-control", id = "NumberOfFloors", @placeholder = "عدد الطوابق المراد بنائها" })
                            @Html.ValidationMessageFor(m => m.BuildingPermits.NumberOfFloors, "", new { @style = "color:orange;" })
                        </div>


                    </div>
                </div>
            </div>
            <br />
            <h5> المرفقات الاساسية</h5>
            <br />





            <div class="form-group col-md-12">
                <div class="col-sm-5" style="width:20%;">
                    <span id="PersonalCardSpan" style="display:none"><i style="font-size: 30px" class="glyphicon glyphicon-ok green"></i></span>
                </div>
                <div class="col-sm-5" style="width:30%;">
                    @*@Html.TextBoxFor(m => m.PersonalCard.Description, new { @class = "form-control", @placeholder = "ملاحظات" })
                        @Html.ValidationMessageFor(m => m.PersonalCard.Description, "", new { @style = "color:orange;" })*@
                </div>
                <div class="col-sm-5" style="width:30%;">
                    @Html.TextBoxFor(m => m.PersonalCard.File, new { @id = "PersonalFile", @type = "file", @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.PersonalCard.File, "", new { @style = "color:orange;" })
                </div>
                <div class="col-sm-5" style="width:20%;">
                    <label class="control-label">
                        @Html.DisplayName("البطاقة الشخصية")
                    </label>
                </div>

            </div>
            <div class="form-group col-md-12">
                <div class="col-sm-5" style="width:20%;">
                    <span id="KrokeSpan" style="display:none"><i style="font-size: 30px" class="glyphicon glyphicon-ok green"></i></span>
                </div>
                <div class="col-sm-5" style="width:30%;">
                    @*@Html.TextBoxFor(m => m.KrokeFile.Description, new { @class = "form-control", @placeholder = "ملاحظات" })
                        @Html.ValidationMessageFor(m => m.KrokeFile.Description, "", new { @style = "color:orange;" })*@
                </div>
                <div class="col-sm-5" style="width:30%;">
                    @Html.TextBoxFor(m => m.KrokeFile.File, new { @type = "file", @id = "KrokeFile", @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.KrokeFile.File, "", new { @style = "color:orange;" })
                </div>
                <div class="col-sm-5" style="width:20%;">
                    <label class="control-label">
                        @Html.DisplayName("الكروكي")
                    </label>
                </div>

            </div>
            <div class="form-group col-md-12">
                <div class="col-sm-5" style="width:20%;">
                    <span id="ownerSpan" style="display:none"><i style="font-size: 30px" class="glyphicon glyphicon-ok green"></i></span>
                </div>
                <div class="col-sm-5" style="width:30%;">
                    @*@Html.TextBoxFor(m => m.OwnerFile.Description, new { @class = "form-control", @placeholder = "ملاحظات" })
                        @Html.ValidationMessageFor(m => m.OwnerFile.Description, "", new { @style = "color:orange;" })*@
                </div>
                <div class="col-sm-5" style="width:30%;">
                    @Html.TextBoxFor(m => m.OwnerFile.File, new { @type = "file", @id = "OwnerFile", @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.OwnerFile.File, "", new { @style = "color:orange;" })

                </div>
                <div class="col-sm-5" style="width:20%;">
                    <label class="control-label">
                        @Html.DisplayName("الملكية")
                    </label>
                </div>

            </div>



        }
        <br />
        <h5> أضافة الخرائط</h5>
        <br />

        <div class="form-group col-md-12">

            <div class="col-sm-1" style="width:15%;">
                <input type="submit" id="SaveAttachment" name="SaveAttachment" class="btn " value="إضافة مرفق" />
            </div>
            <div class="col-sm-5" style="width:35%;">
                @Html.TextBoxFor(m => m.Attachments.Description, new { @class = "form-control", id = "FileDescription", @placeholder = "ملاحظات" })
                @Html.ValidationMessageFor(m => m.Attachments.Description, "", new { @style = "color:orange;" })

            </div>

            <div class="col-sm-5" style="width:30%;">
                @Html.TextBoxFor(m => m.Attachments.File, new { @type = "file", id = "MapFile", @name = "Files", @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Attachments.File, "", new { @style = "color:orange;" })
            </div>

            <div class="col-sm-5" style="width:20%;">
                @Html.DropDownListFor(m => m.Attachments.AttachmentTypeId, (List<SelectListItem>)ViewBag.DDAttachmentsType, new { @class = "dropdown-toggle", @id = "AttTypeId" })
                @Html.ValidationMessageFor(m => m.Attachments.AttachmentTypeId, "", new { @style = "color:orange;" })
            </div>


        </div>
    </div>
    <br />
    <br />
    <div id="divAttachments" class="row">
        @if (Model.ListOfAttachments != null && Model.ListOfAttachments.Count > 0)
        {
            Html.RenderPartial("_ListAttachments", Model);
        }
    </div>

    <br />

    <br />

    <button class="btn btn-primary" id="Save" onclick="return confirm('هل انت متاكد !');">
        <i class="glyphicon glyphicon-ok"></i> أرسال البيانات
    </button>

    <a style="float:left" href="@Url.Action( "Index","BuildingPermits")" class="btn btn-primary" role="button">الغاء</a>


    <!--<button type="submit" class="btn btn-success" style="margin-top:20px;"><i class="glyphicon glyphicon-ok"></i>حفظ البيانات</button>-->
    @*<a href="Slaughter_Income.html" class="btn btn-warning pull-right" style="margin-top:20px;"><i class="glyphicon glyphicon-share-alt"></i>إلغاء</a>*@


</div>
<script src="~/Scripts/jquery-1.10.2.js"></script>
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.mask/1.14.10/jquery.mask.js"></script>
<script type="text/javascript">
    //$(document).ready(function () {
    //    $('#KrokiNO').keyup(function (event) {
    //        addHyphen(this);
    //    });
    //});
    //function addHyphen(element) {
    //    let val = $(element).val().split('-').join(''); // Remove dash (-) if mistakenly entered. 

    //    let finalVal = val.match(/.{1,3}/g).join('-'); // Add (-) after 3rd every char. 

    //    $(element).val(finalVal);		// Update the input box. } 
    //$(document).ready(function () {
    //    $("#KrokiNO").keyup(function (e) {
    //        if ($(this).val().length === 14) return;
    //        if (e.keyCode === 8 || e.keyCode === 37 || e.keyCode === 39) return;
    //        let newStr = '';
    //        let groups = $(this).val().split('-');
    //        for (let i in groups) {
    //            if (groups[i].length % 2 === 0) {
    //                newStr += groups[i] + "-"
    //            } else {
    //                newStr += groups[i];
    //            }
    //        }
    //        $(this).val(newStr);
    //    });
    //})
    //$(function () {
        //$("#KrokiNO").mask("99-99-999-99-9999");

    //    $("#KrokiNO").on("blur", function () {
            
    //        var last = $(this).val().substr($(this).val().indexOf("-") + 1);
    //        var value = $(this).val();
    //        if (value.length < 13) {
                
    //            if (value.length + 1 == 2) {
    //                $(this).val = $(this).val + '-';
    //            }
    //            //var move = $(this).val().substr($(this).val().indexOf("-") - 1, 1);

    //            //var lastfour = move + last;
    //            //var first = $(this).val().substr(0, 12);

    //            //$(this).val(first + '-' + lastfour);
    //        }
    //    });
    //function addHyphen(element) {
    //    let ele = document.getElementById(element.id);
    //    ele = ele.value.split('-').join('');    // Remove dash (-) if mistakenly entered.
    //    var fristVal = ele.match(/.{1,2}/g).join('-');
    //    var SecondVal = ele.match(/.{1,2}/g).join('-');
    //    var thirdVal = ele.match(/.{1,3}/g).join('-');
    //    var forthVal = ele.match(/.{1,2}/g).join('-');
    //    var fifthVal = ele.match(/.{1,4}/g).join('-');

    //    let finalVal = fristVal + SecondVal + thirdVal + forthVal + fifthVal;
    //    document.getElementById(element.id).value = finalVal;
    //}
    $(function () {
        $("#KrokiNO").mask("99-99-999-99-9999");

        $("#KrokiNO").on("blur", function () {

            var last = $(this).val().substr($(this).val().indexOf("-") + 1);
            if (last.length == 2) {
                var move = $(this).val().substr($(this).val().indexOf("-") - 1, 1);
                var lastfour = move + last;
                var first = $(this).val().substr(0, 2);
                $(this).val(first + '-' + lastfour);
            }

        });

        //Country Dropdown Selectedchange event
        $("#Welayah").change(function () {

            $("#Region").empty();

            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetRegions")', // Calling json method
                dataType: 'json',
                data: { id: $("#Welayah").val() },
                // Get Selected Welayah ID.
                success: function (regions) {
                    $.each(regions, function (i, region) {
                        $("#Region").append('<option value="' + region.Value + '">' + region.Text + '</option>');
                    });
					$("[data-rel='chosen']").trigger("chosen:updated");
                    $("#Area").empty();
                    $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetAreas")', // Calling json method
                    dataType: 'json',
                    data: { id: $("#Region").val() },
                    // Get Selected Region ID.
                        success: function (areas) {

                        $.each(areas, function (i, area) {
                            $("#Area").append('<option value="' + area.Value + '">' + area.Text + '</option>');
                        });
						$("[data-rel='chosen']").trigger("chosen:updated");

                    },
                    error: function (ex) {
                        alert('Failed to retrieve areas.' + ex);
                        }
                    });
                    return false;
                },
                error: function (ex) {
                    alert('Failed to retrieve Regions.' + ex);
                }
            });
            return false;
        });
    });
</script>
<script type="text/javascript">
    $(document).ready(function () {
        //Country Dropdown Selectedchange event
        $("#Region").change(function () {
            $("#Area").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetAreas")', // Calling json method
                dataType: 'json',
                data: { id: $("#Region").val() },
                // Get Selected Country ID.
                success: function (areas) {
                    $.each(areas, function (i, area) {
                        $("#Area").append('<option value="' + area.Value + '">' +
                             area.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });
            return false;
        })
    });
</script>
<script>
    function ClearInputs() {

        $('#FileNotes').val('');
        $('#FileUpload').val('');

    }

    function OnFailure() {
        $('#txtMessageText').text('');

    }

    $("#Save").click(function () {
        $('#Permitsform').submit();
    });
</script>


<script>
    $(document).ready(function () {
        $('#SaveAttachment').attr('disabled', true);
        $("#AttTypeId option[value='0']").attr("disabled", "disabled");
        $("#PersonalFile").change(function () {

            var fileName = $("#PersonalFile").val();

            if (fileName) { // returns true if the string is not empty
             //   var fileize = (this.files[0].size);
                //alert(fileize);
                var valid_extensions = /(\.jpg|\.jpeg|\.pdf|\.png)$/i;
                if (valid_extensions.test(fileName) ) {

                    $('#PersonalCardSpan').css("display", "block");
                }
                else {
                    $('#PersonalCardSpan').css("display", "none");
                }
                // alert(fileName + " was selected");
            } else { // no file was selected
                $('#PersonalCardSpan').css("display", "none");
                // alert("no file selected");
            }
        });

        $("#KrokeFile").change(function () {

            var fileName = $("#KrokeFile").val();

            if (fileName) { // returns true if the string is not empty
            //    var fileize = (this.files[0].size);
                //alert(fileize);
                var valid_extensions = /(\.jpg|\.jpeg|\.pdf|\.png)$/i;
                if (valid_extensions.test(fileName) ) {

                    $('#KrokeSpan').css("display", "block");
                }
                else {
                    $('#KrokeSpan').css("display", "none");
                }
                // alert(fileName + " was selected");
            } else { // no file was selected
                $('#KrokeSpan').css("display", "none");
                // alert("no file selected");
            }
        });

        $("#OwnerFile").change(function () {

            var fileName = $("#OwnerFile").val();

            if (fileName) { // returns true if the string is not empty
               // var fileize = (this.files[0].size);
                //alert(fileize);
                var valid_extensions = /(\.jpg|\.jpeg|\.pdf|\.png)$/i;
                if (valid_extensions.test(fileName) ) {

                    $('#ownerSpan').css("display", "block");
                }
                else {
                    $('#ownerSpan').css("display", "none");
                }
                // alert(fileName + " was selected");
            } else { // no file was selected
                $('#ownerSpan').css("display", "none");
                // alert("no file selected");
            }
        });

        $("#MapFile").change(function () {

            var fileName = $("#MapFile").val();

            if (fileName) { // returns true if the string is not empty
              //  var fileize = (this.files[0].size);
                //alert(fileize);
                var valid_extensions = /(\.jpg|\.jpeg|\.pdf|\.png)$/i;
                if (valid_extensions.test(fileName) && $("#AttTypeId").val() != "") {

                    $('#SaveAttachment').attr('disabled', false);
                }
                else {
                    $('#SaveAttachment').attr('disabled', true);
                }
                // alert(fileName + " was selected");
            } else { // no file was selected
                $('#SaveAttachment').attr('disabled', true);
                // alert("no file selected");
            }
        });

        $("#AttTypeId").change(function () {

            var fileName = $("#MapFile").val();

            if (fileName) { // returns true if the string is not empty

                //alert(fileize);
                var valid_extensions = /(\.jpg|\.jpeg|\.gif|\.pdf|\.png)$/i;
                if (valid_extensions.test(fileName) && $("#AttTypeId").val() != "") {

                    $('#SaveAttachment').attr('disabled', false);
                }
                else {
                    $('#SaveAttachment').attr('disabled', true);
                }
                // alert(fileName + " was selected");
            } else { // no file was selected
                $('#SaveAttachment').attr('disabled', true);
                // alert("no file selected");
            }
        });

        $("#SaveAttachment").click(function () {

        var data = new FormData();

        var files = $("#MapFile").get(0).files;
        if (files.length > 0) {
            data.append("MyAttached", files[0]);
            data.append("AttTypeId", $("#AttTypeId").val());
            data.append("FileDescription", $("#FileDescription").val());
        }
        var url = "@Url.Action("SaveAttachment", "BuildingPermits")";
        $.ajax({
            url: url,
            type: "POST",
            processData: false,
            contentType: false,
            data: data,
            success: function (response) {
                $('#FileDescription').val('');
                $('#AttTypeId').val('0');
                $('#MapFile').val('');
                $('#SaveAttachment').attr('disabled', true);

                $('#divAttachments').html(response)
            },
            error: function (er) {
                swal(er);
                $('#SaveAttachment').attr('disabled', true);
            }

        });
    });
    });
</script>



